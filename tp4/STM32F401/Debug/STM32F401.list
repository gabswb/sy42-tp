
STM32F401.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003368  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002f8  08003508  08003508  00013508  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003800  08003800  000201d4  2**0
                  CONTENTS
  4 .ARM          00000000  08003800  08003800  000201d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003800  08003800  000201d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003800  08003800  00013800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003804  08003804  00013804  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  08003808  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000144  200001d4  080039dc  000201d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000318  080039dc  00020318  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   000036c9  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000a41  00000000  00000000  000238cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000001d8  00000000  00000000  00024310  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000160  00000000  00000000  000244e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000e6b0  00000000  00000000  00024648  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000234f  00000000  00000000  00032cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000532b3  00000000  00000000  00035047  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000882fa  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000f4c  00000000  00000000  00088378  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d4 	.word	0x200001d4
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080034f0 	.word	0x080034f0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d8 	.word	0x200001d8
 80001dc:	080034f0 	.word	0x080034f0

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003ce:	f1a4 0401 	sub.w	r4, r4, #1
 80003d2:	d1e9      	bne.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <main>:
  * @retval 0 if success
 */

//#ifdef EXERCISE_2
int main(void)
{
 8000bb8:	b580      	push	{r7, lr}
 8000bba:	b084      	sub	sp, #16
 8000bbc:	af00      	add	r7, sp, #0
	/**
	 * ------------------CONFIGURATION USART-----------------------------
	 */

	/* Activation de l'horloge GPIOA */
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOCEN;
 8000bbe:	4b71      	ldr	r3, [pc, #452]	; (8000d84 <main+0x1cc>)
 8000bc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bc2:	4a70      	ldr	r2, [pc, #448]	; (8000d84 <main+0x1cc>)
 8000bc4:	f043 0305 	orr.w	r3, r3, #5
 8000bc8:	6313      	str	r3, [r2, #48]	; 0x30

	/*Configuration des pins PA2 et PA3 en "alternate function" AF07*/
	GPIOA->MODER &= ~(0xF << 4);
 8000bca:	4b6f      	ldr	r3, [pc, #444]	; (8000d88 <main+0x1d0>)
 8000bcc:	681b      	ldr	r3, [r3, #0]
 8000bce:	4a6e      	ldr	r2, [pc, #440]	; (8000d88 <main+0x1d0>)
 8000bd0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000bd4:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (0xA << 4);
 8000bd6:	4b6c      	ldr	r3, [pc, #432]	; (8000d88 <main+0x1d0>)
 8000bd8:	681b      	ldr	r3, [r3, #0]
 8000bda:	4a6b      	ldr	r2, [pc, #428]	; (8000d88 <main+0x1d0>)
 8000bdc:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8000be0:	6013      	str	r3, [r2, #0]

	GPIOA->AFR[0] &= ~(0xFF << 8);
 8000be2:	4b69      	ldr	r3, [pc, #420]	; (8000d88 <main+0x1d0>)
 8000be4:	6a1b      	ldr	r3, [r3, #32]
 8000be6:	4a68      	ldr	r2, [pc, #416]	; (8000d88 <main+0x1d0>)
 8000be8:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8000bec:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (0x77 << 8);//Alternate function AF07
 8000bee:	4b66      	ldr	r3, [pc, #408]	; (8000d88 <main+0x1d0>)
 8000bf0:	6a1b      	ldr	r3, [r3, #32]
 8000bf2:	4a65      	ldr	r2, [pc, #404]	; (8000d88 <main+0x1d0>)
 8000bf4:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 8000bf8:	6213      	str	r3, [r2, #32]

	USART2_Init(115200);
 8000bfa:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
 8000bfe:	f000 fb27 	bl	8001250 <USART2_Init>
	/**
	 * ------------------CONFIGURATION GPIOB-----------------------------
	 */

	/*Activation de l'horloge du GPIOB*/
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000c02:	4b60      	ldr	r3, [pc, #384]	; (8000d84 <main+0x1cc>)
 8000c04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c06:	4a5f      	ldr	r2, [pc, #380]	; (8000d84 <main+0x1cc>)
 8000c08:	f043 0302 	orr.w	r3, r3, #2
 8000c0c:	6313      	str	r3, [r2, #48]	; 0x30

	/* activation alternate fonction pour GPIOB pour la pin PB7*/
	GPIOB->MODER &= ~GPIO_MODER_MODER7_Msk;// mise à '10' des bits du registre MODER7 pour alternate function
 8000c0e:	4b5f      	ldr	r3, [pc, #380]	; (8000d8c <main+0x1d4>)
 8000c10:	681b      	ldr	r3, [r3, #0]
 8000c12:	4a5e      	ldr	r2, [pc, #376]	; (8000d8c <main+0x1d4>)
 8000c14:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000c18:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= GPIO_MODER_MODER7_1;
 8000c1a:	4b5c      	ldr	r3, [pc, #368]	; (8000d8c <main+0x1d4>)
 8000c1c:	681b      	ldr	r3, [r3, #0]
 8000c1e:	4a5b      	ldr	r2, [pc, #364]	; (8000d8c <main+0x1d4>)
 8000c20:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000c24:	6013      	str	r3, [r2, #0]
	GPIOB->AFR[0] &= GPIO_AFRL_AFSEL7_Msk;// dans la data sheet, section alternate fonction mapping p45, on voit que TIM4_CH2 est mappé avec la fonction alternative AF02 sur la pin PB7
 8000c26:	4b59      	ldr	r3, [pc, #356]	; (8000d8c <main+0x1d4>)
 8000c28:	6a1b      	ldr	r3, [r3, #32]
 8000c2a:	4a58      	ldr	r2, [pc, #352]	; (8000d8c <main+0x1d4>)
 8000c2c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8000c30:	6213      	str	r3, [r2, #32]
	GPIOB->AFR[0] |= GPIO_AFRL_AFSEL7_1;
 8000c32:	4b56      	ldr	r3, [pc, #344]	; (8000d8c <main+0x1d4>)
 8000c34:	6a1b      	ldr	r3, [r3, #32]
 8000c36:	4a55      	ldr	r2, [pc, #340]	; (8000d8c <main+0x1d4>)
 8000c38:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000c3c:	6213      	str	r3, [r2, #32]

	/* PC13 in input mode, no pull */
	 GPIOC->MODER &= ~GPIO_MODER_MODE13_Msk;
 8000c3e:	4b54      	ldr	r3, [pc, #336]	; (8000d90 <main+0x1d8>)
 8000c40:	681b      	ldr	r3, [r3, #0]
 8000c42:	4a53      	ldr	r2, [pc, #332]	; (8000d90 <main+0x1d8>)
 8000c44:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8000c48:	6013      	str	r3, [r2, #0]
	 GPIOC->PUPDR &= ~GPIO_PUPDR_PUPD13_Msk;
 8000c4a:	4b51      	ldr	r3, [pc, #324]	; (8000d90 <main+0x1d8>)
 8000c4c:	68db      	ldr	r3, [r3, #12]
 8000c4e:	4a50      	ldr	r2, [pc, #320]	; (8000d90 <main+0x1d8>)
 8000c50:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8000c54:	60d3      	str	r3, [r2, #12]
	/**
	 * ------------------CONFIGURATION TIMER 4-----------------------------
	 */

	/* activation de l'horloge */
	RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
 8000c56:	4b4b      	ldr	r3, [pc, #300]	; (8000d84 <main+0x1cc>)
 8000c58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c5a:	4a4a      	ldr	r2, [pc, #296]	; (8000d84 <main+0x1cc>)
 8000c5c:	f043 0304 	orr.w	r3, r3, #4
 8000c60:	6413      	str	r3, [r2, #64]	; 0x40

	int freq_after_psc = 10000;// fréquence de 10kHz
 8000c62:	f242 7310 	movw	r3, #10000	; 0x2710
 8000c66:	60fb      	str	r3, [r7, #12]
	TIM4->PSC = (SystemCoreClock / freq_after_psc) -1; //psc = 1599
 8000c68:	4b4a      	ldr	r3, [pc, #296]	; (8000d94 <main+0x1dc>)
 8000c6a:	681a      	ldr	r2, [r3, #0]
 8000c6c:	68fb      	ldr	r3, [r7, #12]
 8000c6e:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c72:	4a49      	ldr	r2, [pc, #292]	; (8000d98 <main+0x1e0>)
 8000c74:	3b01      	subs	r3, #1
 8000c76:	6293      	str	r3, [r2, #40]	; 0x28

	/* Calcul de la valeur désirée pour la durée de comptage */
	int update_freq = 10000; // Fréquence de 10kHz
 8000c78:	f242 7310 	movw	r3, #10000	; 0x2710
 8000c7c:	60bb      	str	r3, [r7, #8]
	int arr = SystemCoreClock / (update_freq * TIM4->PSC + 1);
 8000c7e:	4b45      	ldr	r3, [pc, #276]	; (8000d94 <main+0x1dc>)
 8000c80:	681a      	ldr	r2, [r3, #0]
 8000c82:	4b45      	ldr	r3, [pc, #276]	; (8000d98 <main+0x1e0>)
 8000c84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000c86:	68b9      	ldr	r1, [r7, #8]
 8000c88:	fb01 f303 	mul.w	r3, r1, r3
 8000c8c:	3301      	adds	r3, #1
 8000c8e:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c92:	607b      	str	r3, [r7, #4]
	TIM4->ARR = arr;
 8000c94:	4a40      	ldr	r2, [pc, #256]	; (8000d98 <main+0x1e0>)
 8000c96:	687b      	ldr	r3, [r7, #4]
 8000c98:	62d3      	str	r3, [r2, #44]	; 0x2c

	/* force le compteur et le prescaler à O avant le démarrage*/
	TIM4->EGR |= TIM_EGR_UG_Msk;
 8000c9a:	4b3f      	ldr	r3, [pc, #252]	; (8000d98 <main+0x1e0>)
 8000c9c:	695b      	ldr	r3, [r3, #20]
 8000c9e:	4a3e      	ldr	r2, [pc, #248]	; (8000d98 <main+0x1e0>)
 8000ca0:	f043 0301 	orr.w	r3, r3, #1
 8000ca4:	6153      	str	r3, [r2, #20]

	/* reset les flags */
	TIM4->SR = 0;
 8000ca6:	4b3c      	ldr	r3, [pc, #240]	; (8000d98 <main+0x1e0>)
 8000ca8:	2200      	movs	r2, #0
 8000caa:	611a      	str	r2, [r3, #16]
	/**
	 * ------------------INPUT CAPTURE MODE---------------------------------
	 */

	/* désactivation input capture mode pour modification*/
	TIM4->CCER &= ~TIM_CCER_CC1E_Msk;
 8000cac:	4b3a      	ldr	r3, [pc, #232]	; (8000d98 <main+0x1e0>)
 8000cae:	6a1b      	ldr	r3, [r3, #32]
 8000cb0:	4a39      	ldr	r2, [pc, #228]	; (8000d98 <main+0x1e0>)
 8000cb2:	f023 0301 	bic.w	r3, r3, #1
 8000cb6:	6213      	str	r3, [r2, #32]
	TIM4->CCER &= ~TIM_CCER_CC2E_Msk;
 8000cb8:	4b37      	ldr	r3, [pc, #220]	; (8000d98 <main+0x1e0>)
 8000cba:	6a1b      	ldr	r3, [r3, #32]
 8000cbc:	4a36      	ldr	r2, [pc, #216]	; (8000d98 <main+0x1e0>)
 8000cbe:	f023 0310 	bic.w	r3, r3, #16
 8000cc2:	6213      	str	r3, [r2, #32]
	/* configure capture prescaler, on met à 0 car on veut capturer tous les évènements */
	//TIM4->CCMR1 &= ~TIM_CCMR1_IC1PSC_Msk;
	//TIM4->CCMR1 &= ~TIM_CCMR1_IC2PSC_Msk;

	/*Mappe IC1 et IC2 sur TI2*/
	TIM4->CCMR1 &= ~TIM_CCMR1_CC1S_Msk;
 8000cc4:	4b34      	ldr	r3, [pc, #208]	; (8000d98 <main+0x1e0>)
 8000cc6:	699b      	ldr	r3, [r3, #24]
 8000cc8:	4a33      	ldr	r2, [pc, #204]	; (8000d98 <main+0x1e0>)
 8000cca:	f023 0303 	bic.w	r3, r3, #3
 8000cce:	6193      	str	r3, [r2, #24]
	TIM4->CCMR1 |= TIM_CCMR1_CC1S_1; //met le registre à '10' pour mapper IC1 à TI2
 8000cd0:	4b31      	ldr	r3, [pc, #196]	; (8000d98 <main+0x1e0>)
 8000cd2:	699b      	ldr	r3, [r3, #24]
 8000cd4:	4a30      	ldr	r2, [pc, #192]	; (8000d98 <main+0x1e0>)
 8000cd6:	f043 0302 	orr.w	r3, r3, #2
 8000cda:	6193      	str	r3, [r2, #24]
	TIM4->CCMR1 &= ~TIM_CCMR1_CC2S_Msk;
 8000cdc:	4b2e      	ldr	r3, [pc, #184]	; (8000d98 <main+0x1e0>)
 8000cde:	699b      	ldr	r3, [r3, #24]
 8000ce0:	4a2d      	ldr	r2, [pc, #180]	; (8000d98 <main+0x1e0>)
 8000ce2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000ce6:	6193      	str	r3, [r2, #24]
	TIM4->CCMR1 |= TIM_CCMR1_CC2S_0;//met le registre à '01' pour mapper IC2 à TI2
 8000ce8:	4b2b      	ldr	r3, [pc, #172]	; (8000d98 <main+0x1e0>)
 8000cea:	699b      	ldr	r3, [r3, #24]
 8000cec:	4a2a      	ldr	r2, [pc, #168]	; (8000d98 <main+0x1e0>)
 8000cee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000cf2:	6193      	str	r3, [r2, #24]

	/*Configuration de TI2FP1 sur front montant*/
	TIM4->CCER &= ~TIM_CCER_CC1P_Msk;//met le registre à '00' pour front montant
 8000cf4:	4b28      	ldr	r3, [pc, #160]	; (8000d98 <main+0x1e0>)
 8000cf6:	6a1b      	ldr	r3, [r3, #32]
 8000cf8:	4a27      	ldr	r2, [pc, #156]	; (8000d98 <main+0x1e0>)
 8000cfa:	f023 0302 	bic.w	r3, r3, #2
 8000cfe:	6213      	str	r3, [r2, #32]
	TIM4->CCER &= ~TIM_CCER_CC1NP_Msk;
 8000d00:	4b25      	ldr	r3, [pc, #148]	; (8000d98 <main+0x1e0>)
 8000d02:	6a1b      	ldr	r3, [r3, #32]
 8000d04:	4a24      	ldr	r2, [pc, #144]	; (8000d98 <main+0x1e0>)
 8000d06:	f023 0308 	bic.w	r3, r3, #8
 8000d0a:	6213      	str	r3, [r2, #32]

	/*Configuration de TI2FP1 sur front descendant*/
	TIM4->CCER &= TIM_CCER_CC2NP_Msk;//met les bits à '01' pour configurer TI2FP1 en front descendant
 8000d0c:	4b22      	ldr	r3, [pc, #136]	; (8000d98 <main+0x1e0>)
 8000d0e:	6a1b      	ldr	r3, [r3, #32]
 8000d10:	4a21      	ldr	r2, [pc, #132]	; (8000d98 <main+0x1e0>)
 8000d12:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000d16:	6213      	str	r3, [r2, #32]
	TIM4->CCER |= TIM_CCER_CC2P_Msk;
 8000d18:	4b1f      	ldr	r3, [pc, #124]	; (8000d98 <main+0x1e0>)
 8000d1a:	6a1b      	ldr	r3, [r3, #32]
 8000d1c:	4a1e      	ldr	r2, [pc, #120]	; (8000d98 <main+0x1e0>)
 8000d1e:	f043 0320 	orr.w	r3, r3, #32
 8000d22:	6213      	str	r3, [r2, #32]


	/* résactivation input capture mode */
	TIM4->CCER |= TIM_CCER_CC1E_Msk;
 8000d24:	4b1c      	ldr	r3, [pc, #112]	; (8000d98 <main+0x1e0>)
 8000d26:	6a1b      	ldr	r3, [r3, #32]
 8000d28:	4a1b      	ldr	r2, [pc, #108]	; (8000d98 <main+0x1e0>)
 8000d2a:	f043 0301 	orr.w	r3, r3, #1
 8000d2e:	6213      	str	r3, [r2, #32]
	TIM4->CCER |= TIM_CCER_CC2E_Msk;
 8000d30:	4b19      	ldr	r3, [pc, #100]	; (8000d98 <main+0x1e0>)
 8000d32:	6a1b      	ldr	r3, [r3, #32]
 8000d34:	4a18      	ldr	r2, [pc, #96]	; (8000d98 <main+0x1e0>)
 8000d36:	f043 0310 	orr.w	r3, r3, #16
 8000d3a:	6213      	str	r3, [r2, #32]

	/*lance le compteur*/
	TIM4->CR1 |= TIM_CR1_CEN ;
 8000d3c:	4b16      	ldr	r3, [pc, #88]	; (8000d98 <main+0x1e0>)
 8000d3e:	681b      	ldr	r3, [r3, #0]
 8000d40:	4a15      	ldr	r2, [pc, #84]	; (8000d98 <main+0x1e0>)
 8000d42:	f043 0301 	orr.w	r3, r3, #1
 8000d46:	6013      	str	r3, [r2, #0]

	/**
	 * ------------------BOUCLE PRINCIPALE---------------------------------
	 */
 	/*remise à 0 du drapeau d'état*/
	TIM4->SR &= ~TIM_SR_CC2IF;
 8000d48:	4b13      	ldr	r3, [pc, #76]	; (8000d98 <main+0x1e0>)
 8000d4a:	691b      	ldr	r3, [r3, #16]
 8000d4c:	4a12      	ldr	r2, [pc, #72]	; (8000d98 <main+0x1e0>)
 8000d4e:	f023 0304 	bic.w	r3, r3, #4
 8000d52:	6113      	str	r3, [r2, #16]
 	TIM4->SR &= ~TIM_SR_UIF;
 8000d54:	4b10      	ldr	r3, [pc, #64]	; (8000d98 <main+0x1e0>)
 8000d56:	691b      	ldr	r3, [r3, #16]
 8000d58:	4a0f      	ldr	r2, [pc, #60]	; (8000d98 <main+0x1e0>)
 8000d5a:	f023 0301 	bic.w	r3, r3, #1
 8000d5e:	6113      	str	r3, [r2, #16]
 	TIM4->SR &= ~TIM_SR_CC1IF_Msk;
 8000d60:	4b0d      	ldr	r3, [pc, #52]	; (8000d98 <main+0x1e0>)
 8000d62:	691b      	ldr	r3, [r3, #16]
 8000d64:	4a0c      	ldr	r2, [pc, #48]	; (8000d98 <main+0x1e0>)
 8000d66:	f023 0302 	bic.w	r3, r3, #2
 8000d6a:	6113      	str	r3, [r2, #16]


	USART2_Print("INPUT CAPTURE MODE\r\n");
 8000d6c:	480b      	ldr	r0, [pc, #44]	; (8000d9c <main+0x1e4>)
 8000d6e:	f000 fb13 	bl	8001398 <USART2_Print>
	TIM4_set_periodic_IRQ(500);
 8000d72:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000d76:	f000 f93d 	bl	8000ff4 <TIM4_set_periodic_IRQ>

	USART2_Print("Input/Capture Mode configuré\r\n");
 8000d7a:	4809      	ldr	r0, [pc, #36]	; (8000da0 <main+0x1e8>)
 8000d7c:	f000 fb0c 	bl	8001398 <USART2_Print>


	/*char buffer[256];
	float duration;
	uint16_t begin=0, end=0, nb_overflows=0;*/
	while(1){
 8000d80:	e7fe      	b.n	8000d80 <main+0x1c8>
 8000d82:	bf00      	nop
 8000d84:	40023800 	.word	0x40023800
 8000d88:	40020000 	.word	0x40020000
 8000d8c:	40020400 	.word	0x40020400
 8000d90:	40020800 	.word	0x40020800
 8000d94:	20000000 	.word	0x20000000
 8000d98:	40000800 	.word	0x40000800
 8000d9c:	08003508 	.word	0x08003508
 8000da0:	08003520 	.word	0x08003520

08000da4 <TIM2_set_PWM>:

    /* Lancement du compteur */
    TIM2->CR1 |= TIM_CR1_CEN;
}

void TIM2_set_PWM(uint32_t duty) {
 8000da4:	b480      	push	{r7}
 8000da6:	b083      	sub	sp, #12
 8000da8:	af00      	add	r7, sp, #0
 8000daa:	6078      	str	r0, [r7, #4]
    TIM2->CCR1 = (duty * TIM2->ARR) / 1000;
 8000dac:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000db0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000db2:	687a      	ldr	r2, [r7, #4]
 8000db4:	fb02 f303 	mul.w	r3, r2, r3
 8000db8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000dbc:	4905      	ldr	r1, [pc, #20]	; (8000dd4 <TIM2_set_PWM+0x30>)
 8000dbe:	fba1 1303 	umull	r1, r3, r1, r3
 8000dc2:	099b      	lsrs	r3, r3, #6
 8000dc4:	6353      	str	r3, [r2, #52]	; 0x34
}
 8000dc6:	bf00      	nop
 8000dc8:	370c      	adds	r7, #12
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd0:	4770      	bx	lr
 8000dd2:	bf00      	nop
 8000dd4:	10624dd3 	.word	0x10624dd3

08000dd8 <compute_duration>:

float compute_duration(uint16_t begin, uint16_t end, uint16_t nb_overflows, int arr, int periode)
{
 8000dd8:	b480      	push	{r7}
 8000dda:	b087      	sub	sp, #28
 8000ddc:	af00      	add	r7, sp, #0
 8000dde:	607b      	str	r3, [r7, #4]
 8000de0:	4603      	mov	r3, r0
 8000de2:	81fb      	strh	r3, [r7, #14]
 8000de4:	460b      	mov	r3, r1
 8000de6:	81bb      	strh	r3, [r7, #12]
 8000de8:	4613      	mov	r3, r2
 8000dea:	817b      	strh	r3, [r7, #10]
	float nb_cnt = end-begin + nb_overflows*arr;//nb of tics by the counter
 8000dec:	89ba      	ldrh	r2, [r7, #12]
 8000dee:	89fb      	ldrh	r3, [r7, #14]
 8000df0:	1ad2      	subs	r2, r2, r3
 8000df2:	897b      	ldrh	r3, [r7, #10]
 8000df4:	6879      	ldr	r1, [r7, #4]
 8000df6:	fb01 f303 	mul.w	r3, r1, r3
 8000dfa:	4413      	add	r3, r2
 8000dfc:	ee07 3a90 	vmov	s15, r3
 8000e00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000e04:	edc7 7a05 	vstr	s15, [r7, #20]
	//float cnt_time =(float) 1/freq;//duration of 1 tic in second

	return periode*nb_cnt;
 8000e08:	6a3b      	ldr	r3, [r7, #32]
 8000e0a:	ee07 3a90 	vmov	s15, r3
 8000e0e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000e12:	edd7 7a05 	vldr	s15, [r7, #20]
 8000e16:	ee67 7a27 	vmul.f32	s15, s14, s15

}
 8000e1a:	eeb0 0a67 	vmov.f32	s0, s15
 8000e1e:	371c      	adds	r7, #28
 8000e20:	46bd      	mov	sp, r7
 8000e22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e26:	4770      	bx	lr

08000e28 <NMI_Handler>:
  * @brief  This function handles NMI exception.
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
 8000e28:	b480      	push	{r7}
 8000e2a:	af00      	add	r7, sp, #0
}
 8000e2c:	bf00      	nop
 8000e2e:	46bd      	mov	sp, r7
 8000e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e34:	4770      	bx	lr

08000e36 <HardFault_Handler>:
  * @brief  This function handles Hard Fault exception.
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
 8000e36:	b480      	push	{r7}
 8000e38:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Hard Fault exception occurs */
  while (1)
 8000e3a:	e7fe      	b.n	8000e3a <HardFault_Handler+0x4>

08000e3c <MemManage_Handler>:
  * @brief  This function handles Memory Manage exception.
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
 8000e3c:	b480      	push	{r7}
 8000e3e:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Memory Manage exception occurs */
  while (1)
 8000e40:	e7fe      	b.n	8000e40 <MemManage_Handler+0x4>

08000e42 <BusFault_Handler>:
  * @brief  This function handles Bus Fault exception.
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
 8000e42:	b480      	push	{r7}
 8000e44:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Bus Fault exception occurs */
  while (1)
 8000e46:	e7fe      	b.n	8000e46 <BusFault_Handler+0x4>

08000e48 <UsageFault_Handler>:
  * @brief  This function handles Usage Fault exception.
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
 8000e48:	b480      	push	{r7}
 8000e4a:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Usage Fault exception occurs */
  while (1)
 8000e4c:	e7fe      	b.n	8000e4c <UsageFault_Handler+0x4>

08000e4e <SVC_Handler>:
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 8000e4e:	b480      	push	{r7}
 8000e50:	af00      	add	r7, sp, #0
}
 8000e52:	bf00      	nop
 8000e54:	46bd      	mov	sp, r7
 8000e56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e5a:	4770      	bx	lr

08000e5c <DebugMon_Handler>:
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 8000e5c:	b480      	push	{r7}
 8000e5e:	af00      	add	r7, sp, #0
}
 8000e60:	bf00      	nop
 8000e62:	46bd      	mov	sp, r7
 8000e64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e68:	4770      	bx	lr

08000e6a <PendSV_Handler>:
  * @brief  This function handles PendSVC exception.
  * @param  None
  * @retval None
  */
void PendSV_Handler(void)
{
 8000e6a:	b480      	push	{r7}
 8000e6c:	af00      	add	r7, sp, #0
}
 8000e6e:	bf00      	nop
 8000e70:	46bd      	mov	sp, r7
 8000e72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e76:	4770      	bx	lr

08000e78 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000e78:	b580      	push	{r7, lr}
 8000e7a:	b086      	sub	sp, #24
 8000e7c:	af00      	add	r7, sp, #0
 8000e7e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000e80:	4a14      	ldr	r2, [pc, #80]	; (8000ed4 <_sbrk+0x5c>)
 8000e82:	4b15      	ldr	r3, [pc, #84]	; (8000ed8 <_sbrk+0x60>)
 8000e84:	1ad3      	subs	r3, r2, r3
 8000e86:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000e88:	697b      	ldr	r3, [r7, #20]
 8000e8a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000e8c:	4b13      	ldr	r3, [pc, #76]	; (8000edc <_sbrk+0x64>)
 8000e8e:	681b      	ldr	r3, [r3, #0]
 8000e90:	2b00      	cmp	r3, #0
 8000e92:	d102      	bne.n	8000e9a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000e94:	4b11      	ldr	r3, [pc, #68]	; (8000edc <_sbrk+0x64>)
 8000e96:	4a12      	ldr	r2, [pc, #72]	; (8000ee0 <_sbrk+0x68>)
 8000e98:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000e9a:	4b10      	ldr	r3, [pc, #64]	; (8000edc <_sbrk+0x64>)
 8000e9c:	681a      	ldr	r2, [r3, #0]
 8000e9e:	687b      	ldr	r3, [r7, #4]
 8000ea0:	4413      	add	r3, r2
 8000ea2:	693a      	ldr	r2, [r7, #16]
 8000ea4:	429a      	cmp	r2, r3
 8000ea6:	d207      	bcs.n	8000eb8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000ea8:	f000 fab2 	bl	8001410 <__errno>
 8000eac:	4602      	mov	r2, r0
 8000eae:	230c      	movs	r3, #12
 8000eb0:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 8000eb2:	f04f 33ff 	mov.w	r3, #4294967295
 8000eb6:	e009      	b.n	8000ecc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000eb8:	4b08      	ldr	r3, [pc, #32]	; (8000edc <_sbrk+0x64>)
 8000eba:	681b      	ldr	r3, [r3, #0]
 8000ebc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000ebe:	4b07      	ldr	r3, [pc, #28]	; (8000edc <_sbrk+0x64>)
 8000ec0:	681a      	ldr	r2, [r3, #0]
 8000ec2:	687b      	ldr	r3, [r7, #4]
 8000ec4:	4413      	add	r3, r2
 8000ec6:	4a05      	ldr	r2, [pc, #20]	; (8000edc <_sbrk+0x64>)
 8000ec8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000eca:	68fb      	ldr	r3, [r7, #12]
}
 8000ecc:	4618      	mov	r0, r3
 8000ece:	3718      	adds	r7, #24
 8000ed0:	46bd      	mov	sp, r7
 8000ed2:	bd80      	pop	{r7, pc}
 8000ed4:	20018000 	.word	0x20018000
 8000ed8:	00000400 	.word	0x00000400
 8000edc:	200001f0 	.word	0x200001f0
 8000ee0:	20000318 	.word	0x20000318

08000ee4 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000ee4:	b480      	push	{r7}
 8000ee6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000ee8:	4b06      	ldr	r3, [pc, #24]	; (8000f04 <SystemInit+0x20>)
 8000eea:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000eee:	4a05      	ldr	r2, [pc, #20]	; (8000f04 <SystemInit+0x20>)
 8000ef0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000ef4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000ef8:	bf00      	nop
 8000efa:	46bd      	mov	sp, r7
 8000efc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f00:	4770      	bx	lr
 8000f02:	bf00      	nop
 8000f04:	e000ed00 	.word	0xe000ed00

08000f08 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000f08:	b480      	push	{r7}
 8000f0a:	b083      	sub	sp, #12
 8000f0c:	af00      	add	r7, sp, #0
 8000f0e:	4603      	mov	r3, r0
 8000f10:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000f12:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f16:	2b00      	cmp	r3, #0
 8000f18:	db0b      	blt.n	8000f32 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f1a:	79fb      	ldrb	r3, [r7, #7]
 8000f1c:	f003 021f 	and.w	r2, r3, #31
 8000f20:	4907      	ldr	r1, [pc, #28]	; (8000f40 <__NVIC_EnableIRQ+0x38>)
 8000f22:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f26:	095b      	lsrs	r3, r3, #5
 8000f28:	2001      	movs	r0, #1
 8000f2a:	fa00 f202 	lsl.w	r2, r0, r2
 8000f2e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000f32:	bf00      	nop
 8000f34:	370c      	adds	r7, #12
 8000f36:	46bd      	mov	sp, r7
 8000f38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f3c:	4770      	bx	lr
 8000f3e:	bf00      	nop
 8000f40:	e000e100 	.word	0xe000e100

08000f44 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000f44:	b480      	push	{r7}
 8000f46:	b083      	sub	sp, #12
 8000f48:	af00      	add	r7, sp, #0
 8000f4a:	4603      	mov	r3, r0
 8000f4c:	6039      	str	r1, [r7, #0]
 8000f4e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000f50:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f54:	2b00      	cmp	r3, #0
 8000f56:	db0a      	blt.n	8000f6e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f58:	683b      	ldr	r3, [r7, #0]
 8000f5a:	b2da      	uxtb	r2, r3
 8000f5c:	490c      	ldr	r1, [pc, #48]	; (8000f90 <__NVIC_SetPriority+0x4c>)
 8000f5e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f62:	0112      	lsls	r2, r2, #4
 8000f64:	b2d2      	uxtb	r2, r2
 8000f66:	440b      	add	r3, r1
 8000f68:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000f6c:	e00a      	b.n	8000f84 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f6e:	683b      	ldr	r3, [r7, #0]
 8000f70:	b2da      	uxtb	r2, r3
 8000f72:	4908      	ldr	r1, [pc, #32]	; (8000f94 <__NVIC_SetPriority+0x50>)
 8000f74:	79fb      	ldrb	r3, [r7, #7]
 8000f76:	f003 030f 	and.w	r3, r3, #15
 8000f7a:	3b04      	subs	r3, #4
 8000f7c:	0112      	lsls	r2, r2, #4
 8000f7e:	b2d2      	uxtb	r2, r2
 8000f80:	440b      	add	r3, r1
 8000f82:	761a      	strb	r2, [r3, #24]
}
 8000f84:	bf00      	nop
 8000f86:	370c      	adds	r7, #12
 8000f88:	46bd      	mov	sp, r7
 8000f8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f8e:	4770      	bx	lr
 8000f90:	e000e100 	.word	0xe000e100
 8000f94:	e000ed00 	.word	0xe000ed00

08000f98 <TIM3_IRQHandler>:

	index=0;


}
void TIM3_IRQHandler(void){
 8000f98:	b580      	push	{r7, lr}
 8000f9a:	af00      	add	r7, sp, #0
//	/* teste si le drapeau relatif à l'interruption est à '1'et test si l'interruption relative à ce drapeau est autorisée*/
 	if((TIM3->SR & TIM_SR_UIF) && (TIM3->DIER & TIM_DIER_UIE)){
 8000f9c:	4b13      	ldr	r3, [pc, #76]	; (8000fec <TIM3_IRQHandler+0x54>)
 8000f9e:	691b      	ldr	r3, [r3, #16]
 8000fa0:	f003 0301 	and.w	r3, r3, #1
 8000fa4:	2b00      	cmp	r3, #0
 8000fa6:	d019      	beq.n	8000fdc <TIM3_IRQHandler+0x44>
 8000fa8:	4b10      	ldr	r3, [pc, #64]	; (8000fec <TIM3_IRQHandler+0x54>)
 8000faa:	68db      	ldr	r3, [r3, #12]
 8000fac:	f003 0301 	and.w	r3, r3, #1
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	d013      	beq.n	8000fdc <TIM3_IRQHandler+0x44>
 		TIM2_set_PWM(index*100);
 8000fb4:	4b0e      	ldr	r3, [pc, #56]	; (8000ff0 <TIM3_IRQHandler+0x58>)
 8000fb6:	681b      	ldr	r3, [r3, #0]
 8000fb8:	2264      	movs	r2, #100	; 0x64
 8000fba:	fb02 f303 	mul.w	r3, r2, r3
 8000fbe:	4618      	mov	r0, r3
 8000fc0:	f7ff fef0 	bl	8000da4 <TIM2_set_PWM>
 		index++;
 8000fc4:	4b0a      	ldr	r3, [pc, #40]	; (8000ff0 <TIM3_IRQHandler+0x58>)
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	3301      	adds	r3, #1
 8000fca:	4a09      	ldr	r2, [pc, #36]	; (8000ff0 <TIM3_IRQHandler+0x58>)
 8000fcc:	6013      	str	r3, [r2, #0]
		if(index>10)
 8000fce:	4b08      	ldr	r3, [pc, #32]	; (8000ff0 <TIM3_IRQHandler+0x58>)
 8000fd0:	681b      	ldr	r3, [r3, #0]
 8000fd2:	2b0a      	cmp	r3, #10
 8000fd4:	dd02      	ble.n	8000fdc <TIM3_IRQHandler+0x44>
			index=0;
 8000fd6:	4b06      	ldr	r3, [pc, #24]	; (8000ff0 <TIM3_IRQHandler+0x58>)
 8000fd8:	2200      	movs	r2, #0
 8000fda:	601a      	str	r2, [r3, #0]
 	}
 	/*remise à 0 du drapeau d'état*/
 	TIM3->SR &= ~TIM_SR_UIF;
 8000fdc:	4b03      	ldr	r3, [pc, #12]	; (8000fec <TIM3_IRQHandler+0x54>)
 8000fde:	691b      	ldr	r3, [r3, #16]
 8000fe0:	4a02      	ldr	r2, [pc, #8]	; (8000fec <TIM3_IRQHandler+0x54>)
 8000fe2:	f023 0301 	bic.w	r3, r3, #1
 8000fe6:	6113      	str	r3, [r2, #16]
}
 8000fe8:	bf00      	nop
 8000fea:	bd80      	pop	{r7, pc}
 8000fec:	40000400 	.word	0x40000400
 8000ff0:	2000030c 	.word	0x2000030c

08000ff4 <TIM4_set_periodic_IRQ>:

void TIM4_set_periodic_IRQ(uint32_t ms){
 8000ff4:	b580      	push	{r7, lr}
 8000ff6:	b082      	sub	sp, #8
 8000ff8:	af00      	add	r7, sp, #0
 8000ffa:	6078      	str	r0, [r7, #4]

	/* définit piorité de prise en compte de l'interruption au niveau du NVIC*/
	NVIC_SetPriority(TIM4_IRQn,10);
 8000ffc:	210a      	movs	r1, #10
 8000ffe:	201e      	movs	r0, #30
 8001000:	f7ff ffa0 	bl	8000f44 <__NVIC_SetPriority>
	/* autorise les interruptions au niveau du NVIC*/
	NVIC_EnableIRQ(TIM4_IRQn);
 8001004:	201e      	movs	r0, #30
 8001006:	f7ff ff7f 	bl	8000f08 <__NVIC_EnableIRQ>

	/*autorise IRQ sur le flag CC2IF*/
	TIM4->DIER |= TIM_DIER_CC2IE;
 800100a:	4b15      	ldr	r3, [pc, #84]	; (8001060 <TIM4_set_periodic_IRQ+0x6c>)
 800100c:	68db      	ldr	r3, [r3, #12]
 800100e:	4a14      	ldr	r2, [pc, #80]	; (8001060 <TIM4_set_periodic_IRQ+0x6c>)
 8001010:	f043 0304 	orr.w	r3, r3, #4
 8001014:	60d3      	str	r3, [r2, #12]
	/*autorise IRQ sur le flag CC2IF*/
	TIM4->DIER |= TIM_DIER_CC1IE;
 8001016:	4b12      	ldr	r3, [pc, #72]	; (8001060 <TIM4_set_periodic_IRQ+0x6c>)
 8001018:	68db      	ldr	r3, [r3, #12]
 800101a:	4a11      	ldr	r2, [pc, #68]	; (8001060 <TIM4_set_periodic_IRQ+0x6c>)
 800101c:	f043 0302 	orr.w	r3, r3, #2
 8001020:	60d3      	str	r3, [r2, #12]
	/*autorise IRQ sur le flag UIF*/
	TIM4->DIER |= TIM_DIER_UIE;
 8001022:	4b0f      	ldr	r3, [pc, #60]	; (8001060 <TIM4_set_periodic_IRQ+0x6c>)
 8001024:	68db      	ldr	r3, [r3, #12]
 8001026:	4a0e      	ldr	r2, [pc, #56]	; (8001060 <TIM4_set_periodic_IRQ+0x6c>)
 8001028:	f043 0301 	orr.w	r3, r3, #1
 800102c:	60d3      	str	r3, [r2, #12]


	TIM_set_periodic_event(ms, TIM4);
 800102e:	490c      	ldr	r1, [pc, #48]	; (8001060 <TIM4_set_periodic_IRQ+0x6c>)
 8001030:	6878      	ldr	r0, [r7, #4]
 8001032:	f000 f8d5 	bl	80011e0 <TIM_set_periodic_event>

	duration=0;
 8001036:	4b0b      	ldr	r3, [pc, #44]	; (8001064 <TIM4_set_periodic_IRQ+0x70>)
 8001038:	f04f 0200 	mov.w	r2, #0
 800103c:	601a      	str	r2, [r3, #0]
	begin=0;
 800103e:	4b0a      	ldr	r3, [pc, #40]	; (8001068 <TIM4_set_periodic_IRQ+0x74>)
 8001040:	2200      	movs	r2, #0
 8001042:	801a      	strh	r2, [r3, #0]
	end=0;
 8001044:	4b09      	ldr	r3, [pc, #36]	; (800106c <TIM4_set_periodic_IRQ+0x78>)
 8001046:	2200      	movs	r2, #0
 8001048:	801a      	strh	r2, [r3, #0]
	nb_overflows=0;
 800104a:	4b09      	ldr	r3, [pc, #36]	; (8001070 <TIM4_set_periodic_IRQ+0x7c>)
 800104c:	2200      	movs	r2, #0
 800104e:	801a      	strh	r2, [r3, #0]

	tim_freq=ms;
 8001050:	687b      	ldr	r3, [r7, #4]
 8001052:	4a08      	ldr	r2, [pc, #32]	; (8001074 <TIM4_set_periodic_IRQ+0x80>)
 8001054:	6013      	str	r3, [r2, #0]


}
 8001056:	bf00      	nop
 8001058:	3708      	adds	r7, #8
 800105a:	46bd      	mov	sp, r7
 800105c:	bd80      	pop	{r7, pc}
 800105e:	bf00      	nop
 8001060:	40000800 	.word	0x40000800
 8001064:	20000200 	.word	0x20000200
 8001068:	20000304 	.word	0x20000304
 800106c:	200001fe 	.word	0x200001fe
 8001070:	200001fc 	.word	0x200001fc
 8001074:	20000308 	.word	0x20000308

08001078 <TIM4_IRQHandler>:
void TIM4_IRQHandler(void){
 8001078:	b5b0      	push	{r4, r5, r7, lr}
 800107a:	b082      	sub	sp, #8
 800107c:	af02      	add	r7, sp, #8
	/* pour detecter font descendant
	 * teste si le drapeau relatif à l'interruption est à '1' et  teste si l'interruption relative à ce drapeau est autorisée*/
 	if((TIM4->SR & TIM_SR_CC2IF) && (TIM4->DIER & TIM_DIER_CC2IE)){
 800107e:	4b4c      	ldr	r3, [pc, #304]	; (80011b0 <TIM4_IRQHandler+0x138>)
 8001080:	691b      	ldr	r3, [r3, #16]
 8001082:	f003 0304 	and.w	r3, r3, #4
 8001086:	2b00      	cmp	r3, #0
 8001088:	d016      	beq.n	80010b8 <TIM4_IRQHandler+0x40>
 800108a:	4b49      	ldr	r3, [pc, #292]	; (80011b0 <TIM4_IRQHandler+0x138>)
 800108c:	68db      	ldr	r3, [r3, #12]
 800108e:	f003 0304 	and.w	r3, r3, #4
 8001092:	2b00      	cmp	r3, #0
 8001094:	d010      	beq.n	80010b8 <TIM4_IRQHandler+0x40>
 		begin = TIM4->CCR2;
 8001096:	4b46      	ldr	r3, [pc, #280]	; (80011b0 <TIM4_IRQHandler+0x138>)
 8001098:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800109a:	b29a      	uxth	r2, r3
 800109c:	4b45      	ldr	r3, [pc, #276]	; (80011b4 <TIM4_IRQHandler+0x13c>)
 800109e:	801a      	strh	r2, [r3, #0]
		USART2_Print("falling edge\r\n");
 80010a0:	4845      	ldr	r0, [pc, #276]	; (80011b8 <TIM4_IRQHandler+0x140>)
 80010a2:	f000 f979 	bl	8001398 <USART2_Print>

 	/*remise à 0 du drapeau d'état*/
	TIM3->SR &= ~TIM_SR_CC2IF;
 80010a6:	4b45      	ldr	r3, [pc, #276]	; (80011bc <TIM4_IRQHandler+0x144>)
 80010a8:	691b      	ldr	r3, [r3, #16]
 80010aa:	4a44      	ldr	r2, [pc, #272]	; (80011bc <TIM4_IRQHandler+0x144>)
 80010ac:	f023 0304 	bic.w	r3, r3, #4
 80010b0:	6113      	str	r3, [r2, #16]
	nb_overflows=0;
 80010b2:	4b43      	ldr	r3, [pc, #268]	; (80011c0 <TIM4_IRQHandler+0x148>)
 80010b4:	2200      	movs	r2, #0
 80010b6:	801a      	strh	r2, [r3, #0]

 	}


 	if((TIM4->SR & TIM_SR_UIF) && (TIM4->DIER & TIM_DIER_UIE)){
 80010b8:	4b3d      	ldr	r3, [pc, #244]	; (80011b0 <TIM4_IRQHandler+0x138>)
 80010ba:	691b      	ldr	r3, [r3, #16]
 80010bc:	f003 0301 	and.w	r3, r3, #1
 80010c0:	2b00      	cmp	r3, #0
 80010c2:	d011      	beq.n	80010e8 <TIM4_IRQHandler+0x70>
 80010c4:	4b3a      	ldr	r3, [pc, #232]	; (80011b0 <TIM4_IRQHandler+0x138>)
 80010c6:	68db      	ldr	r3, [r3, #12]
 80010c8:	f003 0301 	and.w	r3, r3, #1
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	d00b      	beq.n	80010e8 <TIM4_IRQHandler+0x70>
 		nb_overflows++;
 80010d0:	4b3b      	ldr	r3, [pc, #236]	; (80011c0 <TIM4_IRQHandler+0x148>)
 80010d2:	881b      	ldrh	r3, [r3, #0]
 80010d4:	3301      	adds	r3, #1
 80010d6:	b29a      	uxth	r2, r3
 80010d8:	4b39      	ldr	r3, [pc, #228]	; (80011c0 <TIM4_IRQHandler+0x148>)
 80010da:	801a      	strh	r2, [r3, #0]

 	/*remise à 0 du drapeau d'état*/
 		TIM4->SR &= ~TIM_SR_UIF;
 80010dc:	4b34      	ldr	r3, [pc, #208]	; (80011b0 <TIM4_IRQHandler+0x138>)
 80010de:	691b      	ldr	r3, [r3, #16]
 80010e0:	4a33      	ldr	r2, [pc, #204]	; (80011b0 <TIM4_IRQHandler+0x138>)
 80010e2:	f023 0301 	bic.w	r3, r3, #1
 80010e6:	6113      	str	r3, [r2, #16]



 	/* pour detecter font montant
 	* teste si le drapeau relatif à l'interruption est à '1' et  teste si l'interruption relative à ce drapeau est autorisée*/
 	if((TIM4->SR & TIM_SR_CC1IF_Msk) && (TIM4->DIER & TIM_DIER_CC1IE)){
 80010e8:	4b31      	ldr	r3, [pc, #196]	; (80011b0 <TIM4_IRQHandler+0x138>)
 80010ea:	691b      	ldr	r3, [r3, #16]
 80010ec:	f003 0302 	and.w	r3, r3, #2
 80010f0:	2b00      	cmp	r3, #0
 80010f2:	d05a      	beq.n	80011aa <TIM4_IRQHandler+0x132>
 80010f4:	4b2e      	ldr	r3, [pc, #184]	; (80011b0 <TIM4_IRQHandler+0x138>)
 80010f6:	68db      	ldr	r3, [r3, #12]
 80010f8:	f003 0302 	and.w	r3, r3, #2
 80010fc:	2b00      	cmp	r3, #0
 80010fe:	d054      	beq.n	80011aa <TIM4_IRQHandler+0x132>

		end = TIM4->CCR1;//récupération de la valeur de compteur stockée dans CCR2
 8001100:	4b2b      	ldr	r3, [pc, #172]	; (80011b0 <TIM4_IRQHandler+0x138>)
 8001102:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001104:	b29a      	uxth	r2, r3
 8001106:	4b2f      	ldr	r3, [pc, #188]	; (80011c4 <TIM4_IRQHandler+0x14c>)
 8001108:	801a      	strh	r2, [r3, #0]
		USART2_Print("rising edge\n");
 800110a:	482f      	ldr	r0, [pc, #188]	; (80011c8 <TIM4_IRQHandler+0x150>)
 800110c:	f000 f944 	bl	8001398 <USART2_Print>

		sprintf(buffer, "begin = %d, nb_of_overflows = %d, end = %d\r\n", begin, nb_overflows, end);
 8001110:	4b28      	ldr	r3, [pc, #160]	; (80011b4 <TIM4_IRQHandler+0x13c>)
 8001112:	881b      	ldrh	r3, [r3, #0]
 8001114:	461a      	mov	r2, r3
 8001116:	4b2a      	ldr	r3, [pc, #168]	; (80011c0 <TIM4_IRQHandler+0x148>)
 8001118:	881b      	ldrh	r3, [r3, #0]
 800111a:	4619      	mov	r1, r3
 800111c:	4b29      	ldr	r3, [pc, #164]	; (80011c4 <TIM4_IRQHandler+0x14c>)
 800111e:	881b      	ldrh	r3, [r3, #0]
 8001120:	9300      	str	r3, [sp, #0]
 8001122:	460b      	mov	r3, r1
 8001124:	4929      	ldr	r1, [pc, #164]	; (80011cc <TIM4_IRQHandler+0x154>)
 8001126:	482a      	ldr	r0, [pc, #168]	; (80011d0 <TIM4_IRQHandler+0x158>)
 8001128:	f000 fe00 	bl	8001d2c <siprintf>
		USART2_Print(buffer);
 800112c:	4828      	ldr	r0, [pc, #160]	; (80011d0 <TIM4_IRQHandler+0x158>)
 800112e:	f000 f933 	bl	8001398 <USART2_Print>
		//la fréquence d'update = SystemCoreClock/(TIM4->ARR * (TIM4->PSC+1))
		duration = compute_duration(begin, end, nb_overflows, TIM4->ARR,tim_freq*1000 );
 8001132:	4b20      	ldr	r3, [pc, #128]	; (80011b4 <TIM4_IRQHandler+0x13c>)
 8001134:	8818      	ldrh	r0, [r3, #0]
 8001136:	4b23      	ldr	r3, [pc, #140]	; (80011c4 <TIM4_IRQHandler+0x14c>)
 8001138:	8819      	ldrh	r1, [r3, #0]
 800113a:	4b21      	ldr	r3, [pc, #132]	; (80011c0 <TIM4_IRQHandler+0x148>)
 800113c:	881c      	ldrh	r4, [r3, #0]
 800113e:	4b1c      	ldr	r3, [pc, #112]	; (80011b0 <TIM4_IRQHandler+0x138>)
 8001140:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001142:	461d      	mov	r5, r3
 8001144:	4b23      	ldr	r3, [pc, #140]	; (80011d4 <TIM4_IRQHandler+0x15c>)
 8001146:	681b      	ldr	r3, [r3, #0]
 8001148:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800114c:	fb02 f303 	mul.w	r3, r2, r3
 8001150:	9300      	str	r3, [sp, #0]
 8001152:	462b      	mov	r3, r5
 8001154:	4622      	mov	r2, r4
 8001156:	f7ff fe3f 	bl	8000dd8 <compute_duration>
 800115a:	eef0 7a40 	vmov.f32	s15, s0
 800115e:	4b1e      	ldr	r3, [pc, #120]	; (80011d8 <TIM4_IRQHandler+0x160>)
 8001160:	edc3 7a00 	vstr	s15, [r3]
		sprintf(buffer, "duration = %f\r\n", duration);
 8001164:	4b1c      	ldr	r3, [pc, #112]	; (80011d8 <TIM4_IRQHandler+0x160>)
 8001166:	681b      	ldr	r3, [r3, #0]
 8001168:	4618      	mov	r0, r3
 800116a:	f7ff f9f5 	bl	8000558 <__aeabi_f2d>
 800116e:	4603      	mov	r3, r0
 8001170:	460c      	mov	r4, r1
 8001172:	461a      	mov	r2, r3
 8001174:	4623      	mov	r3, r4
 8001176:	4919      	ldr	r1, [pc, #100]	; (80011dc <TIM4_IRQHandler+0x164>)
 8001178:	4815      	ldr	r0, [pc, #84]	; (80011d0 <TIM4_IRQHandler+0x158>)
 800117a:	f000 fdd7 	bl	8001d2c <siprintf>
		USART2_Print(buffer);
 800117e:	4814      	ldr	r0, [pc, #80]	; (80011d0 <TIM4_IRQHandler+0x158>)
 8001180:	f000 f90a 	bl	8001398 <USART2_Print>

		duration=0;
 8001184:	4b14      	ldr	r3, [pc, #80]	; (80011d8 <TIM4_IRQHandler+0x160>)
 8001186:	f04f 0200 	mov.w	r2, #0
 800118a:	601a      	str	r2, [r3, #0]
		begin=0;
 800118c:	4b09      	ldr	r3, [pc, #36]	; (80011b4 <TIM4_IRQHandler+0x13c>)
 800118e:	2200      	movs	r2, #0
 8001190:	801a      	strh	r2, [r3, #0]
		end=0;
 8001192:	4b0c      	ldr	r3, [pc, #48]	; (80011c4 <TIM4_IRQHandler+0x14c>)
 8001194:	2200      	movs	r2, #0
 8001196:	801a      	strh	r2, [r3, #0]
		nb_overflows=0;
 8001198:	4b09      	ldr	r3, [pc, #36]	; (80011c0 <TIM4_IRQHandler+0x148>)
 800119a:	2200      	movs	r2, #0
 800119c:	801a      	strh	r2, [r3, #0]

 	/*remise à 0 du drapeau d'état*/
	TIM4->SR &= ~TIM_SR_CC1IF_Msk;
 800119e:	4b04      	ldr	r3, [pc, #16]	; (80011b0 <TIM4_IRQHandler+0x138>)
 80011a0:	691b      	ldr	r3, [r3, #16]
 80011a2:	4a03      	ldr	r2, [pc, #12]	; (80011b0 <TIM4_IRQHandler+0x138>)
 80011a4:	f023 0302 	bic.w	r3, r3, #2
 80011a8:	6113      	str	r3, [r2, #16]
 	}


}
 80011aa:	bf00      	nop
 80011ac:	46bd      	mov	sp, r7
 80011ae:	bdb0      	pop	{r4, r5, r7, pc}
 80011b0:	40000800 	.word	0x40000800
 80011b4:	20000304 	.word	0x20000304
 80011b8:	08003540 	.word	0x08003540
 80011bc:	40000400 	.word	0x40000400
 80011c0:	200001fc 	.word	0x200001fc
 80011c4:	200001fe 	.word	0x200001fe
 80011c8:	08003550 	.word	0x08003550
 80011cc:	08003560 	.word	0x08003560
 80011d0:	20000204 	.word	0x20000204
 80011d4:	20000308 	.word	0x20000308
 80011d8:	20000200 	.word	0x20000200
 80011dc:	08003590 	.word	0x08003590

080011e0 <TIM_set_periodic_event>:
 *         so ms can go up to 65535/10 ms (65,535 secondes)
 * @param  ms : duration of the cycle
 * @retval None
 */
 void TIM_set_periodic_event(uint32_t ms, TIM_TypeDef* tim)
 {
 80011e0:	b480      	push	{r7}
 80011e2:	b085      	sub	sp, #20
 80011e4:	af00      	add	r7, sp, #0
 80011e6:	6078      	str	r0, [r7, #4]
 80011e8:	6039      	str	r1, [r7, #0]
	/* choose the counter clock frequency. */
	uint32_t ck_cnt_f = 10000;
 80011ea:	f242 7310 	movw	r3, #10000	; 0x2710
 80011ee:	60fb      	str	r3, [r7, #12]

	/* enable tim peripheral clock on APB1 */
	RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;		/* activate TIM3 Clock */
 80011f0:	4b15      	ldr	r3, [pc, #84]	; (8001248 <TIM_set_periodic_event+0x68>)
 80011f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011f4:	4a14      	ldr	r2, [pc, #80]	; (8001248 <TIM_set_periodic_event+0x68>)
 80011f6:	f043 0302 	orr.w	r3, r3, #2
 80011fa:	6413      	str	r3, [r2, #64]	; 0x40

	/* set prescaler to generate a clock with ck_cnt_f frequency,
	 * it is supposed here that ck_psc frequency = SystemCoreClock */
	tim->PSC = (SystemCoreClock / ck_cnt_f ) - 1;
 80011fc:	4b13      	ldr	r3, [pc, #76]	; (800124c <TIM_set_periodic_event+0x6c>)
 80011fe:	681a      	ldr	r2, [r3, #0]
 8001200:	68fb      	ldr	r3, [r7, #12]
 8001202:	fbb2 f3f3 	udiv	r3, r2, r3
 8001206:	1e5a      	subs	r2, r3, #1
 8001208:	683b      	ldr	r3, [r7, #0]
 800120a:	629a      	str	r2, [r3, #40]	; 0x28
	 * 			= (ARR+1) / 10000
	 * in ms : Tms = 1000 * (ARR+1) /10000 = (ARR+1)/10
	 * => ARR = 10*Tms - 1
	 * note that the autoreload register is 16 bits for TIM3 and TIM4 and
	 *  32 bits for TIM2 and TIM5 */
	tim->ARR = 10*ms - 1 ;
 800120c:	687a      	ldr	r2, [r7, #4]
 800120e:	4613      	mov	r3, r2
 8001210:	009b      	lsls	r3, r3, #2
 8001212:	4413      	add	r3, r2
 8001214:	005b      	lsls	r3, r3, #1
 8001216:	1e5a      	subs	r2, r3, #1
 8001218:	683b      	ldr	r3, [r7, #0]
 800121a:	62da      	str	r2, [r3, #44]	; 0x2c
	/* update counter and prescaler : it clear prescaler and counter, to start
	 * with a full cycle. It will set the Update flag  (UIF), note that it can
	 * be avoided by setting the UDIS bit in CR1
	 * see TIM3_clear_periodic_event() */
	tim->EGR = TIM_EGR_UG;
 800121c:	683b      	ldr	r3, [r7, #0]
 800121e:	2201      	movs	r2, #1
 8001220:	615a      	str	r2, [r3, #20]
	/* As an update has been generated by software,
	 * clear the bit in the status register, all flags can also be cleared
	 * here
	 */
	tim->SR &= ~ TIM_SR_UIF ;
 8001222:	683b      	ldr	r3, [r7, #0]
 8001224:	691b      	ldr	r3, [r3, #16]
 8001226:	f023 0201 	bic.w	r2, r3, #1
 800122a:	683b      	ldr	r3, [r7, #0]
 800122c:	611a      	str	r2, [r3, #16]
	/* enable the counter (start counting) */
	tim->CR1 |= TIM_CR1_CEN ;
 800122e:	683b      	ldr	r3, [r7, #0]
 8001230:	681b      	ldr	r3, [r3, #0]
 8001232:	f043 0201 	orr.w	r2, r3, #1
 8001236:	683b      	ldr	r3, [r7, #0]
 8001238:	601a      	str	r2, [r3, #0]
 }
 800123a:	bf00      	nop
 800123c:	3714      	adds	r7, #20
 800123e:	46bd      	mov	sp, r7
 8001240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001244:	4770      	bx	lr
 8001246:	bf00      	nop
 8001248:	40023800 	.word	0x40023800
 800124c:	20000000 	.word	0x20000000

08001250 <USART2_Init>:
  * @brief  Init USART2 @ baud,8,1,n
  * @param  baud rate
  * @retval None
  * */
void USART2_Init(uint32_t baud)
{
 8001250:	b480      	push	{r7}
 8001252:	b087      	sub	sp, #28
 8001254:	af00      	add	r7, sp, #0
 8001256:	6078      	str	r0, [r7, #4]
uint32_t tmp = 0, divmantissa, divfraction, apbclk;
 8001258:	2300      	movs	r3, #0
 800125a:	60bb      	str	r3, [r7, #8]

	/* initialisation de l'USART2 : baud,8,1,n */

	/* reset/de-reset USART2 */
	RCC->APB1RSTR |= RCC_APB1RSTR_USART2RST;
 800125c:	4b38      	ldr	r3, [pc, #224]	; (8001340 <USART2_Init+0xf0>)
 800125e:	6a1b      	ldr	r3, [r3, #32]
 8001260:	4a37      	ldr	r2, [pc, #220]	; (8001340 <USART2_Init+0xf0>)
 8001262:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001266:	6213      	str	r3, [r2, #32]
	RCC->APB1RSTR &= ~RCC_APB1RSTR_USART2RST;
 8001268:	4b35      	ldr	r3, [pc, #212]	; (8001340 <USART2_Init+0xf0>)
 800126a:	6a1b      	ldr	r3, [r3, #32]
 800126c:	4a34      	ldr	r2, [pc, #208]	; (8001340 <USART2_Init+0xf0>)
 800126e:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8001272:	6213      	str	r3, [r2, #32]
	/* enable USART2 clk */
	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8001274:	4b32      	ldr	r3, [pc, #200]	; (8001340 <USART2_Init+0xf0>)
 8001276:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001278:	4a31      	ldr	r2, [pc, #196]	; (8001340 <USART2_Init+0xf0>)
 800127a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800127e:	6413      	str	r3, [r2, #64]	; 0x40

	/*-------------- UART parameters configuration --------------- */
	USART2->CR1 &= ~USART_CR1_UE;
 8001280:	4b30      	ldr	r3, [pc, #192]	; (8001344 <USART2_Init+0xf4>)
 8001282:	68db      	ldr	r3, [r3, #12]
 8001284:	4a2f      	ldr	r2, [pc, #188]	; (8001344 <USART2_Init+0xf4>)
 8001286:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800128a:	60d3      	str	r3, [r2, #12]
	/* USART CR1 Configuration : tx and rx enable; oversampling = 16 */
	USART2->CR1 = USART_CR1_TE | USART_CR1_RE;
 800128c:	4b2d      	ldr	r3, [pc, #180]	; (8001344 <USART2_Init+0xf4>)
 800128e:	220c      	movs	r2, #12
 8001290:	60da      	str	r2, [r3, #12]
	/* USART CR2 Configuration : 1 stop bit*/
	USART2->CR2 = 0 ;
 8001292:	4b2c      	ldr	r3, [pc, #176]	; (8001344 <USART2_Init+0xf4>)
 8001294:	2200      	movs	r2, #0
 8001296:	611a      	str	r2, [r3, #16]
	/* USART CR3 Configuration : no flow control*/
	USART2->CR3 = 0;
 8001298:	4b2a      	ldr	r3, [pc, #168]	; (8001344 <USART2_Init+0xf4>)
 800129a:	2200      	movs	r2, #0
 800129c:	615a      	str	r2, [r3, #20]
	/* USART BRR Configuration : depend on the bus frequency*/
	/* get APB1 prescaler to determine the USART clock frequency apbclk*/
	tmp = (RCC->CFGR & RCC_CFGR_PPRE1)>>10;
 800129e:	4b28      	ldr	r3, [pc, #160]	; (8001340 <USART2_Init+0xf0>)
 80012a0:	689b      	ldr	r3, [r3, #8]
 80012a2:	0a9b      	lsrs	r3, r3, #10
 80012a4:	f003 0307 	and.w	r3, r3, #7
 80012a8:	60bb      	str	r3, [r7, #8]
	if (tmp & 4){
 80012aa:	68bb      	ldr	r3, [r7, #8]
 80012ac:	f003 0304 	and.w	r3, r3, #4
 80012b0:	2b00      	cmp	r3, #0
 80012b2:	d00b      	beq.n	80012cc <USART2_Init+0x7c>
		tmp =  (tmp & 3) + 1;
 80012b4:	68bb      	ldr	r3, [r7, #8]
 80012b6:	f003 0303 	and.w	r3, r3, #3
 80012ba:	3301      	adds	r3, #1
 80012bc:	60bb      	str	r3, [r7, #8]
		apbclk = SystemCoreClock >> tmp;
 80012be:	4b22      	ldr	r3, [pc, #136]	; (8001348 <USART2_Init+0xf8>)
 80012c0:	681a      	ldr	r2, [r3, #0]
 80012c2:	68bb      	ldr	r3, [r7, #8]
 80012c4:	fa22 f303 	lsr.w	r3, r2, r3
 80012c8:	60fb      	str	r3, [r7, #12]
 80012ca:	e002      	b.n	80012d2 <USART2_Init+0x82>
	}
	else {
		apbclk = SystemCoreClock;
 80012cc:	4b1e      	ldr	r3, [pc, #120]	; (8001348 <USART2_Init+0xf8>)
 80012ce:	681b      	ldr	r3, [r3, #0]
 80012d0:	60fb      	str	r3, [r7, #12]
	}

	/* compute baud rate from the apbclock frequency
	 *  baud = apbclk /(8*(2-OVER8)*USARTDIV) */

	tmp = (USART2->CR1 & USART_CR1_OVER8)>>15;
 80012d2:	4b1c      	ldr	r3, [pc, #112]	; (8001344 <USART2_Init+0xf4>)
 80012d4:	68db      	ldr	r3, [r3, #12]
 80012d6:	0bdb      	lsrs	r3, r3, #15
 80012d8:	f003 0301 	and.w	r3, r3, #1
 80012dc:	60bb      	str	r3, [r7, #8]
	if (tmp == 0) {
 80012de:	68bb      	ldr	r3, [r7, #8]
 80012e0:	2b00      	cmp	r3, #0
 80012e2:	d10d      	bne.n	8001300 <USART2_Init+0xb0>
		/* OVER8 = 0, div by 16 */
		divmantissa = (apbclk/baud) >> 4;
 80012e4:	68fa      	ldr	r2, [r7, #12]
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	fbb2 f3f3 	udiv	r3, r2, r3
 80012ec:	091b      	lsrs	r3, r3, #4
 80012ee:	617b      	str	r3, [r7, #20]
		divfraction = (apbclk/baud) & 0xF;
 80012f0:	68fa      	ldr	r2, [r7, #12]
 80012f2:	687b      	ldr	r3, [r7, #4]
 80012f4:	fbb2 f3f3 	udiv	r3, r2, r3
 80012f8:	f003 030f 	and.w	r3, r3, #15
 80012fc:	613b      	str	r3, [r7, #16]
 80012fe:	e00c      	b.n	800131a <USART2_Init+0xca>
	}
	else {
		/* OVER8 = 0, div by 8 */
		divmantissa = (apbclk/baud) >> 3;
 8001300:	68fa      	ldr	r2, [r7, #12]
 8001302:	687b      	ldr	r3, [r7, #4]
 8001304:	fbb2 f3f3 	udiv	r3, r2, r3
 8001308:	08db      	lsrs	r3, r3, #3
 800130a:	617b      	str	r3, [r7, #20]
		divfraction = (apbclk/baud) & 3;
 800130c:	68fa      	ldr	r2, [r7, #12]
 800130e:	687b      	ldr	r3, [r7, #4]
 8001310:	fbb2 f3f3 	udiv	r3, r2, r3
 8001314:	f003 0303 	and.w	r3, r3, #3
 8001318:	613b      	str	r3, [r7, #16]
	}
	/*USART2->BRR = mantissa and fraction part*/
	USART2->BRR = (divmantissa << 4) | divfraction ;
 800131a:	697b      	ldr	r3, [r7, #20]
 800131c:	011a      	lsls	r2, r3, #4
 800131e:	4909      	ldr	r1, [pc, #36]	; (8001344 <USART2_Init+0xf4>)
 8001320:	693b      	ldr	r3, [r7, #16]
 8001322:	4313      	orrs	r3, r2
 8001324:	608b      	str	r3, [r1, #8]


	/* enable USART */
	USART2->CR1 |= USART_CR1_UE;
 8001326:	4b07      	ldr	r3, [pc, #28]	; (8001344 <USART2_Init+0xf4>)
 8001328:	68db      	ldr	r3, [r3, #12]
 800132a:	4a06      	ldr	r2, [pc, #24]	; (8001344 <USART2_Init+0xf4>)
 800132c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001330:	60d3      	str	r3, [r2, #12]

	/*-------------- interrupt --------------- */
	//NVIC_SetPriority(USART2_IRQn,0x15); /*  priority */
	//NVIC_EnableIRQ(USART2_IRQn);
}
 8001332:	bf00      	nop
 8001334:	371c      	adds	r7, #28
 8001336:	46bd      	mov	sp, r7
 8001338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800133c:	4770      	bx	lr
 800133e:	bf00      	nop
 8001340:	40023800 	.word	0x40023800
 8001344:	40004400 	.word	0x40004400
 8001348:	20000000 	.word	0x20000000

0800134c <USART2_Transmit>:
  * @param  data address
  * 		len (in bytes = nbr of data)
  * @retval nbr of data sent
  * */
uint32_t USART2_Transmit(uint8_t * data, uint32_t len)
{
 800134c:	b480      	push	{r7}
 800134e:	b085      	sub	sp, #20
 8001350:	af00      	add	r7, sp, #0
 8001352:	6078      	str	r0, [r7, #4]
 8001354:	6039      	str	r1, [r7, #0]
	uint32_t Nrdata = 0;
 8001356:	2300      	movs	r3, #0
 8001358:	60fb      	str	r3, [r7, #12]

	while (Nrdata < len){
 800135a:	e00f      	b.n	800137c <USART2_Transmit+0x30>
		while (!(USART2->SR & USART_SR_TXE)){
 800135c:	bf00      	nop
 800135e:	4b0d      	ldr	r3, [pc, #52]	; (8001394 <USART2_Transmit+0x48>)
 8001360:	681b      	ldr	r3, [r3, #0]
 8001362:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001366:	2b00      	cmp	r3, #0
 8001368:	d0f9      	beq.n	800135e <USART2_Transmit+0x12>
			/* wait for TXE to be set */
		}
		/* store the datum in TDR */
		USART2->DR = *data++;
 800136a:	687b      	ldr	r3, [r7, #4]
 800136c:	1c5a      	adds	r2, r3, #1
 800136e:	607a      	str	r2, [r7, #4]
 8001370:	781a      	ldrb	r2, [r3, #0]
 8001372:	4b08      	ldr	r3, [pc, #32]	; (8001394 <USART2_Transmit+0x48>)
 8001374:	605a      	str	r2, [r3, #4]
		/* increment the data counter */
		Nrdata++;
 8001376:	68fb      	ldr	r3, [r7, #12]
 8001378:	3301      	adds	r3, #1
 800137a:	60fb      	str	r3, [r7, #12]
	while (Nrdata < len){
 800137c:	68fa      	ldr	r2, [r7, #12]
 800137e:	683b      	ldr	r3, [r7, #0]
 8001380:	429a      	cmp	r2, r3
 8001382:	d3eb      	bcc.n	800135c <USART2_Transmit+0x10>
	}
	/* wait last data to be completely sent (Optionnal) */
	//while (!(USART2->SR & USART_SR_TC));

	return Nrdata;
 8001384:	68fb      	ldr	r3, [r7, #12]
}
 8001386:	4618      	mov	r0, r3
 8001388:	3714      	adds	r7, #20
 800138a:	46bd      	mov	sp, r7
 800138c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001390:	4770      	bx	lr
 8001392:	bf00      	nop
 8001394:	40004400 	.word	0x40004400

08001398 <USART2_Print>:

uint32_t USART2_Print(char* str){
 8001398:	b580      	push	{r7, lr}
 800139a:	b082      	sub	sp, #8
 800139c:	af00      	add	r7, sp, #0
 800139e:	6078      	str	r0, [r7, #4]
    return USART2_Transmit((uint8_t*) str, strlen(str));
 80013a0:	6878      	ldr	r0, [r7, #4]
 80013a2:	f7fe ff1d 	bl	80001e0 <strlen>
 80013a6:	4603      	mov	r3, r0
 80013a8:	4619      	mov	r1, r3
 80013aa:	6878      	ldr	r0, [r7, #4]
 80013ac:	f7ff ffce 	bl	800134c <USART2_Transmit>
 80013b0:	4603      	mov	r3, r0
}
 80013b2:	4618      	mov	r0, r3
 80013b4:	3708      	adds	r7, #8
 80013b6:	46bd      	mov	sp, r7
 80013b8:	bd80      	pop	{r7, pc}
	...

080013bc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 80013bc:	f8df d034 	ldr.w	sp, [pc, #52]	; 80013f4 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80013c0:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80013c2:	e003      	b.n	80013cc <LoopCopyDataInit>

080013c4 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80013c4:	4b0c      	ldr	r3, [pc, #48]	; (80013f8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80013c6:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80013c8:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80013ca:	3104      	adds	r1, #4

080013cc <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80013cc:	480b      	ldr	r0, [pc, #44]	; (80013fc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80013ce:	4b0c      	ldr	r3, [pc, #48]	; (8001400 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80013d0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80013d2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80013d4:	d3f6      	bcc.n	80013c4 <CopyDataInit>
  ldr  r2, =_sbss
 80013d6:	4a0b      	ldr	r2, [pc, #44]	; (8001404 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80013d8:	e002      	b.n	80013e0 <LoopFillZerobss>

080013da <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80013da:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80013dc:	f842 3b04 	str.w	r3, [r2], #4

080013e0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80013e0:	4b09      	ldr	r3, [pc, #36]	; (8001408 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80013e2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80013e4:	d3f9      	bcc.n	80013da <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80013e6:	f7ff fd7d 	bl	8000ee4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80013ea:	f000 f817 	bl	800141c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80013ee:	f7ff fbe3 	bl	8000bb8 <main>
  bx  lr    
 80013f2:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 80013f4:	20018000 	.word	0x20018000
  ldr  r3, =_sidata
 80013f8:	08003808 	.word	0x08003808
  ldr  r0, =_sdata
 80013fc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001400:	200001d4 	.word	0x200001d4
  ldr  r2, =_sbss
 8001404:	200001d4 	.word	0x200001d4
  ldr  r3, = _ebss
 8001408:	20000318 	.word	0x20000318

0800140c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800140c:	e7fe      	b.n	800140c <ADC_IRQHandler>
	...

08001410 <__errno>:
 8001410:	4b01      	ldr	r3, [pc, #4]	; (8001418 <__errno+0x8>)
 8001412:	6818      	ldr	r0, [r3, #0]
 8001414:	4770      	bx	lr
 8001416:	bf00      	nop
 8001418:	20000004 	.word	0x20000004

0800141c <__libc_init_array>:
 800141c:	b570      	push	{r4, r5, r6, lr}
 800141e:	4e0d      	ldr	r6, [pc, #52]	; (8001454 <__libc_init_array+0x38>)
 8001420:	4c0d      	ldr	r4, [pc, #52]	; (8001458 <__libc_init_array+0x3c>)
 8001422:	1ba4      	subs	r4, r4, r6
 8001424:	10a4      	asrs	r4, r4, #2
 8001426:	2500      	movs	r5, #0
 8001428:	42a5      	cmp	r5, r4
 800142a:	d109      	bne.n	8001440 <__libc_init_array+0x24>
 800142c:	4e0b      	ldr	r6, [pc, #44]	; (800145c <__libc_init_array+0x40>)
 800142e:	4c0c      	ldr	r4, [pc, #48]	; (8001460 <__libc_init_array+0x44>)
 8001430:	f002 f85e 	bl	80034f0 <_init>
 8001434:	1ba4      	subs	r4, r4, r6
 8001436:	10a4      	asrs	r4, r4, #2
 8001438:	2500      	movs	r5, #0
 800143a:	42a5      	cmp	r5, r4
 800143c:	d105      	bne.n	800144a <__libc_init_array+0x2e>
 800143e:	bd70      	pop	{r4, r5, r6, pc}
 8001440:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001444:	4798      	blx	r3
 8001446:	3501      	adds	r5, #1
 8001448:	e7ee      	b.n	8001428 <__libc_init_array+0xc>
 800144a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800144e:	4798      	blx	r3
 8001450:	3501      	adds	r5, #1
 8001452:	e7f2      	b.n	800143a <__libc_init_array+0x1e>
 8001454:	08003800 	.word	0x08003800
 8001458:	08003800 	.word	0x08003800
 800145c:	08003800 	.word	0x08003800
 8001460:	08003804 	.word	0x08003804

08001464 <memset>:
 8001464:	4402      	add	r2, r0
 8001466:	4603      	mov	r3, r0
 8001468:	4293      	cmp	r3, r2
 800146a:	d100      	bne.n	800146e <memset+0xa>
 800146c:	4770      	bx	lr
 800146e:	f803 1b01 	strb.w	r1, [r3], #1
 8001472:	e7f9      	b.n	8001468 <memset+0x4>

08001474 <__cvt>:
 8001474:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001478:	ec55 4b10 	vmov	r4, r5, d0
 800147c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800147e:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8001482:	2d00      	cmp	r5, #0
 8001484:	460e      	mov	r6, r1
 8001486:	4691      	mov	r9, r2
 8001488:	4619      	mov	r1, r3
 800148a:	bfb8      	it	lt
 800148c:	4622      	movlt	r2, r4
 800148e:	462b      	mov	r3, r5
 8001490:	f027 0720 	bic.w	r7, r7, #32
 8001494:	bfbb      	ittet	lt
 8001496:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800149a:	461d      	movlt	r5, r3
 800149c:	2300      	movge	r3, #0
 800149e:	232d      	movlt	r3, #45	; 0x2d
 80014a0:	bfb8      	it	lt
 80014a2:	4614      	movlt	r4, r2
 80014a4:	2f46      	cmp	r7, #70	; 0x46
 80014a6:	700b      	strb	r3, [r1, #0]
 80014a8:	d004      	beq.n	80014b4 <__cvt+0x40>
 80014aa:	2f45      	cmp	r7, #69	; 0x45
 80014ac:	d100      	bne.n	80014b0 <__cvt+0x3c>
 80014ae:	3601      	adds	r6, #1
 80014b0:	2102      	movs	r1, #2
 80014b2:	e000      	b.n	80014b6 <__cvt+0x42>
 80014b4:	2103      	movs	r1, #3
 80014b6:	ab03      	add	r3, sp, #12
 80014b8:	9301      	str	r3, [sp, #4]
 80014ba:	ab02      	add	r3, sp, #8
 80014bc:	9300      	str	r3, [sp, #0]
 80014be:	4632      	mov	r2, r6
 80014c0:	4653      	mov	r3, sl
 80014c2:	ec45 4b10 	vmov	d0, r4, r5
 80014c6:	f000 fcdf 	bl	8001e88 <_dtoa_r>
 80014ca:	2f47      	cmp	r7, #71	; 0x47
 80014cc:	4680      	mov	r8, r0
 80014ce:	d102      	bne.n	80014d6 <__cvt+0x62>
 80014d0:	f019 0f01 	tst.w	r9, #1
 80014d4:	d026      	beq.n	8001524 <__cvt+0xb0>
 80014d6:	2f46      	cmp	r7, #70	; 0x46
 80014d8:	eb08 0906 	add.w	r9, r8, r6
 80014dc:	d111      	bne.n	8001502 <__cvt+0x8e>
 80014de:	f898 3000 	ldrb.w	r3, [r8]
 80014e2:	2b30      	cmp	r3, #48	; 0x30
 80014e4:	d10a      	bne.n	80014fc <__cvt+0x88>
 80014e6:	2200      	movs	r2, #0
 80014e8:	2300      	movs	r3, #0
 80014ea:	4620      	mov	r0, r4
 80014ec:	4629      	mov	r1, r5
 80014ee:	f7ff faf3 	bl	8000ad8 <__aeabi_dcmpeq>
 80014f2:	b918      	cbnz	r0, 80014fc <__cvt+0x88>
 80014f4:	f1c6 0601 	rsb	r6, r6, #1
 80014f8:	f8ca 6000 	str.w	r6, [sl]
 80014fc:	f8da 3000 	ldr.w	r3, [sl]
 8001500:	4499      	add	r9, r3
 8001502:	2200      	movs	r2, #0
 8001504:	2300      	movs	r3, #0
 8001506:	4620      	mov	r0, r4
 8001508:	4629      	mov	r1, r5
 800150a:	f7ff fae5 	bl	8000ad8 <__aeabi_dcmpeq>
 800150e:	b938      	cbnz	r0, 8001520 <__cvt+0xac>
 8001510:	2230      	movs	r2, #48	; 0x30
 8001512:	9b03      	ldr	r3, [sp, #12]
 8001514:	454b      	cmp	r3, r9
 8001516:	d205      	bcs.n	8001524 <__cvt+0xb0>
 8001518:	1c59      	adds	r1, r3, #1
 800151a:	9103      	str	r1, [sp, #12]
 800151c:	701a      	strb	r2, [r3, #0]
 800151e:	e7f8      	b.n	8001512 <__cvt+0x9e>
 8001520:	f8cd 900c 	str.w	r9, [sp, #12]
 8001524:	9b03      	ldr	r3, [sp, #12]
 8001526:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001528:	eba3 0308 	sub.w	r3, r3, r8
 800152c:	4640      	mov	r0, r8
 800152e:	6013      	str	r3, [r2, #0]
 8001530:	b004      	add	sp, #16
 8001532:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001536 <__exponent>:
 8001536:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001538:	2900      	cmp	r1, #0
 800153a:	4604      	mov	r4, r0
 800153c:	bfba      	itte	lt
 800153e:	4249      	neglt	r1, r1
 8001540:	232d      	movlt	r3, #45	; 0x2d
 8001542:	232b      	movge	r3, #43	; 0x2b
 8001544:	2909      	cmp	r1, #9
 8001546:	f804 2b02 	strb.w	r2, [r4], #2
 800154a:	7043      	strb	r3, [r0, #1]
 800154c:	dd20      	ble.n	8001590 <__exponent+0x5a>
 800154e:	f10d 0307 	add.w	r3, sp, #7
 8001552:	461f      	mov	r7, r3
 8001554:	260a      	movs	r6, #10
 8001556:	fb91 f5f6 	sdiv	r5, r1, r6
 800155a:	fb06 1115 	mls	r1, r6, r5, r1
 800155e:	3130      	adds	r1, #48	; 0x30
 8001560:	2d09      	cmp	r5, #9
 8001562:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001566:	f103 32ff 	add.w	r2, r3, #4294967295
 800156a:	4629      	mov	r1, r5
 800156c:	dc09      	bgt.n	8001582 <__exponent+0x4c>
 800156e:	3130      	adds	r1, #48	; 0x30
 8001570:	3b02      	subs	r3, #2
 8001572:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001576:	42bb      	cmp	r3, r7
 8001578:	4622      	mov	r2, r4
 800157a:	d304      	bcc.n	8001586 <__exponent+0x50>
 800157c:	1a10      	subs	r0, r2, r0
 800157e:	b003      	add	sp, #12
 8001580:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001582:	4613      	mov	r3, r2
 8001584:	e7e7      	b.n	8001556 <__exponent+0x20>
 8001586:	f813 2b01 	ldrb.w	r2, [r3], #1
 800158a:	f804 2b01 	strb.w	r2, [r4], #1
 800158e:	e7f2      	b.n	8001576 <__exponent+0x40>
 8001590:	2330      	movs	r3, #48	; 0x30
 8001592:	4419      	add	r1, r3
 8001594:	7083      	strb	r3, [r0, #2]
 8001596:	1d02      	adds	r2, r0, #4
 8001598:	70c1      	strb	r1, [r0, #3]
 800159a:	e7ef      	b.n	800157c <__exponent+0x46>

0800159c <_printf_float>:
 800159c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80015a0:	b08d      	sub	sp, #52	; 0x34
 80015a2:	460c      	mov	r4, r1
 80015a4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80015a8:	4616      	mov	r6, r2
 80015aa:	461f      	mov	r7, r3
 80015ac:	4605      	mov	r5, r0
 80015ae:	f001 fa23 	bl	80029f8 <_localeconv_r>
 80015b2:	6803      	ldr	r3, [r0, #0]
 80015b4:	9304      	str	r3, [sp, #16]
 80015b6:	4618      	mov	r0, r3
 80015b8:	f7fe fe12 	bl	80001e0 <strlen>
 80015bc:	2300      	movs	r3, #0
 80015be:	930a      	str	r3, [sp, #40]	; 0x28
 80015c0:	f8d8 3000 	ldr.w	r3, [r8]
 80015c4:	9005      	str	r0, [sp, #20]
 80015c6:	3307      	adds	r3, #7
 80015c8:	f023 0307 	bic.w	r3, r3, #7
 80015cc:	f103 0208 	add.w	r2, r3, #8
 80015d0:	f894 a018 	ldrb.w	sl, [r4, #24]
 80015d4:	f8d4 b000 	ldr.w	fp, [r4]
 80015d8:	f8c8 2000 	str.w	r2, [r8]
 80015dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015e0:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80015e4:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 80015e8:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80015ec:	9307      	str	r3, [sp, #28]
 80015ee:	f8cd 8018 	str.w	r8, [sp, #24]
 80015f2:	f04f 32ff 	mov.w	r2, #4294967295
 80015f6:	4ba7      	ldr	r3, [pc, #668]	; (8001894 <_printf_float+0x2f8>)
 80015f8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80015fc:	f7ff fa9e 	bl	8000b3c <__aeabi_dcmpun>
 8001600:	bb70      	cbnz	r0, 8001660 <_printf_float+0xc4>
 8001602:	f04f 32ff 	mov.w	r2, #4294967295
 8001606:	4ba3      	ldr	r3, [pc, #652]	; (8001894 <_printf_float+0x2f8>)
 8001608:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800160c:	f7ff fa78 	bl	8000b00 <__aeabi_dcmple>
 8001610:	bb30      	cbnz	r0, 8001660 <_printf_float+0xc4>
 8001612:	2200      	movs	r2, #0
 8001614:	2300      	movs	r3, #0
 8001616:	4640      	mov	r0, r8
 8001618:	4649      	mov	r1, r9
 800161a:	f7ff fa67 	bl	8000aec <__aeabi_dcmplt>
 800161e:	b110      	cbz	r0, 8001626 <_printf_float+0x8a>
 8001620:	232d      	movs	r3, #45	; 0x2d
 8001622:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001626:	4a9c      	ldr	r2, [pc, #624]	; (8001898 <_printf_float+0x2fc>)
 8001628:	4b9c      	ldr	r3, [pc, #624]	; (800189c <_printf_float+0x300>)
 800162a:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 800162e:	bf8c      	ite	hi
 8001630:	4690      	movhi	r8, r2
 8001632:	4698      	movls	r8, r3
 8001634:	2303      	movs	r3, #3
 8001636:	f02b 0204 	bic.w	r2, fp, #4
 800163a:	6123      	str	r3, [r4, #16]
 800163c:	6022      	str	r2, [r4, #0]
 800163e:	f04f 0900 	mov.w	r9, #0
 8001642:	9700      	str	r7, [sp, #0]
 8001644:	4633      	mov	r3, r6
 8001646:	aa0b      	add	r2, sp, #44	; 0x2c
 8001648:	4621      	mov	r1, r4
 800164a:	4628      	mov	r0, r5
 800164c:	f000 f9e6 	bl	8001a1c <_printf_common>
 8001650:	3001      	adds	r0, #1
 8001652:	f040 808d 	bne.w	8001770 <_printf_float+0x1d4>
 8001656:	f04f 30ff 	mov.w	r0, #4294967295
 800165a:	b00d      	add	sp, #52	; 0x34
 800165c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001660:	4642      	mov	r2, r8
 8001662:	464b      	mov	r3, r9
 8001664:	4640      	mov	r0, r8
 8001666:	4649      	mov	r1, r9
 8001668:	f7ff fa68 	bl	8000b3c <__aeabi_dcmpun>
 800166c:	b110      	cbz	r0, 8001674 <_printf_float+0xd8>
 800166e:	4a8c      	ldr	r2, [pc, #560]	; (80018a0 <_printf_float+0x304>)
 8001670:	4b8c      	ldr	r3, [pc, #560]	; (80018a4 <_printf_float+0x308>)
 8001672:	e7da      	b.n	800162a <_printf_float+0x8e>
 8001674:	6861      	ldr	r1, [r4, #4]
 8001676:	1c4b      	adds	r3, r1, #1
 8001678:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
 800167c:	a80a      	add	r0, sp, #40	; 0x28
 800167e:	d13e      	bne.n	80016fe <_printf_float+0x162>
 8001680:	2306      	movs	r3, #6
 8001682:	6063      	str	r3, [r4, #4]
 8001684:	2300      	movs	r3, #0
 8001686:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800168a:	ab09      	add	r3, sp, #36	; 0x24
 800168c:	9300      	str	r3, [sp, #0]
 800168e:	ec49 8b10 	vmov	d0, r8, r9
 8001692:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001696:	6022      	str	r2, [r4, #0]
 8001698:	f8cd a004 	str.w	sl, [sp, #4]
 800169c:	6861      	ldr	r1, [r4, #4]
 800169e:	4628      	mov	r0, r5
 80016a0:	f7ff fee8 	bl	8001474 <__cvt>
 80016a4:	f00a 03df 	and.w	r3, sl, #223	; 0xdf
 80016a8:	2b47      	cmp	r3, #71	; 0x47
 80016aa:	4680      	mov	r8, r0
 80016ac:	d109      	bne.n	80016c2 <_printf_float+0x126>
 80016ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80016b0:	1cd8      	adds	r0, r3, #3
 80016b2:	db02      	blt.n	80016ba <_printf_float+0x11e>
 80016b4:	6862      	ldr	r2, [r4, #4]
 80016b6:	4293      	cmp	r3, r2
 80016b8:	dd47      	ble.n	800174a <_printf_float+0x1ae>
 80016ba:	f1aa 0a02 	sub.w	sl, sl, #2
 80016be:	fa5f fa8a 	uxtb.w	sl, sl
 80016c2:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 80016c6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80016c8:	d824      	bhi.n	8001714 <_printf_float+0x178>
 80016ca:	3901      	subs	r1, #1
 80016cc:	4652      	mov	r2, sl
 80016ce:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80016d2:	9109      	str	r1, [sp, #36]	; 0x24
 80016d4:	f7ff ff2f 	bl	8001536 <__exponent>
 80016d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80016da:	1813      	adds	r3, r2, r0
 80016dc:	2a01      	cmp	r2, #1
 80016de:	4681      	mov	r9, r0
 80016e0:	6123      	str	r3, [r4, #16]
 80016e2:	dc02      	bgt.n	80016ea <_printf_float+0x14e>
 80016e4:	6822      	ldr	r2, [r4, #0]
 80016e6:	07d1      	lsls	r1, r2, #31
 80016e8:	d501      	bpl.n	80016ee <_printf_float+0x152>
 80016ea:	3301      	adds	r3, #1
 80016ec:	6123      	str	r3, [r4, #16]
 80016ee:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80016f2:	2b00      	cmp	r3, #0
 80016f4:	d0a5      	beq.n	8001642 <_printf_float+0xa6>
 80016f6:	232d      	movs	r3, #45	; 0x2d
 80016f8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80016fc:	e7a1      	b.n	8001642 <_printf_float+0xa6>
 80016fe:	f1ba 0f67 	cmp.w	sl, #103	; 0x67
 8001702:	f000 8177 	beq.w	80019f4 <_printf_float+0x458>
 8001706:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 800170a:	d1bb      	bne.n	8001684 <_printf_float+0xe8>
 800170c:	2900      	cmp	r1, #0
 800170e:	d1b9      	bne.n	8001684 <_printf_float+0xe8>
 8001710:	2301      	movs	r3, #1
 8001712:	e7b6      	b.n	8001682 <_printf_float+0xe6>
 8001714:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
 8001718:	d119      	bne.n	800174e <_printf_float+0x1b2>
 800171a:	2900      	cmp	r1, #0
 800171c:	6863      	ldr	r3, [r4, #4]
 800171e:	dd0c      	ble.n	800173a <_printf_float+0x19e>
 8001720:	6121      	str	r1, [r4, #16]
 8001722:	b913      	cbnz	r3, 800172a <_printf_float+0x18e>
 8001724:	6822      	ldr	r2, [r4, #0]
 8001726:	07d2      	lsls	r2, r2, #31
 8001728:	d502      	bpl.n	8001730 <_printf_float+0x194>
 800172a:	3301      	adds	r3, #1
 800172c:	440b      	add	r3, r1
 800172e:	6123      	str	r3, [r4, #16]
 8001730:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001732:	65a3      	str	r3, [r4, #88]	; 0x58
 8001734:	f04f 0900 	mov.w	r9, #0
 8001738:	e7d9      	b.n	80016ee <_printf_float+0x152>
 800173a:	b913      	cbnz	r3, 8001742 <_printf_float+0x1a6>
 800173c:	6822      	ldr	r2, [r4, #0]
 800173e:	07d0      	lsls	r0, r2, #31
 8001740:	d501      	bpl.n	8001746 <_printf_float+0x1aa>
 8001742:	3302      	adds	r3, #2
 8001744:	e7f3      	b.n	800172e <_printf_float+0x192>
 8001746:	2301      	movs	r3, #1
 8001748:	e7f1      	b.n	800172e <_printf_float+0x192>
 800174a:	f04f 0a67 	mov.w	sl, #103	; 0x67
 800174e:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8001752:	4293      	cmp	r3, r2
 8001754:	db05      	blt.n	8001762 <_printf_float+0x1c6>
 8001756:	6822      	ldr	r2, [r4, #0]
 8001758:	6123      	str	r3, [r4, #16]
 800175a:	07d1      	lsls	r1, r2, #31
 800175c:	d5e8      	bpl.n	8001730 <_printf_float+0x194>
 800175e:	3301      	adds	r3, #1
 8001760:	e7e5      	b.n	800172e <_printf_float+0x192>
 8001762:	2b00      	cmp	r3, #0
 8001764:	bfd4      	ite	le
 8001766:	f1c3 0302 	rsble	r3, r3, #2
 800176a:	2301      	movgt	r3, #1
 800176c:	4413      	add	r3, r2
 800176e:	e7de      	b.n	800172e <_printf_float+0x192>
 8001770:	6823      	ldr	r3, [r4, #0]
 8001772:	055a      	lsls	r2, r3, #21
 8001774:	d407      	bmi.n	8001786 <_printf_float+0x1ea>
 8001776:	6923      	ldr	r3, [r4, #16]
 8001778:	4642      	mov	r2, r8
 800177a:	4631      	mov	r1, r6
 800177c:	4628      	mov	r0, r5
 800177e:	47b8      	blx	r7
 8001780:	3001      	adds	r0, #1
 8001782:	d12b      	bne.n	80017dc <_printf_float+0x240>
 8001784:	e767      	b.n	8001656 <_printf_float+0xba>
 8001786:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 800178a:	f240 80dc 	bls.w	8001946 <_printf_float+0x3aa>
 800178e:	2200      	movs	r2, #0
 8001790:	2300      	movs	r3, #0
 8001792:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001796:	f7ff f99f 	bl	8000ad8 <__aeabi_dcmpeq>
 800179a:	2800      	cmp	r0, #0
 800179c:	d033      	beq.n	8001806 <_printf_float+0x26a>
 800179e:	2301      	movs	r3, #1
 80017a0:	4a41      	ldr	r2, [pc, #260]	; (80018a8 <_printf_float+0x30c>)
 80017a2:	4631      	mov	r1, r6
 80017a4:	4628      	mov	r0, r5
 80017a6:	47b8      	blx	r7
 80017a8:	3001      	adds	r0, #1
 80017aa:	f43f af54 	beq.w	8001656 <_printf_float+0xba>
 80017ae:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80017b2:	429a      	cmp	r2, r3
 80017b4:	db02      	blt.n	80017bc <_printf_float+0x220>
 80017b6:	6823      	ldr	r3, [r4, #0]
 80017b8:	07d8      	lsls	r0, r3, #31
 80017ba:	d50f      	bpl.n	80017dc <_printf_float+0x240>
 80017bc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80017c0:	4631      	mov	r1, r6
 80017c2:	4628      	mov	r0, r5
 80017c4:	47b8      	blx	r7
 80017c6:	3001      	adds	r0, #1
 80017c8:	f43f af45 	beq.w	8001656 <_printf_float+0xba>
 80017cc:	f04f 0800 	mov.w	r8, #0
 80017d0:	f104 091a 	add.w	r9, r4, #26
 80017d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80017d6:	3b01      	subs	r3, #1
 80017d8:	4543      	cmp	r3, r8
 80017da:	dc09      	bgt.n	80017f0 <_printf_float+0x254>
 80017dc:	6823      	ldr	r3, [r4, #0]
 80017de:	079b      	lsls	r3, r3, #30
 80017e0:	f100 8103 	bmi.w	80019ea <_printf_float+0x44e>
 80017e4:	68e0      	ldr	r0, [r4, #12]
 80017e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80017e8:	4298      	cmp	r0, r3
 80017ea:	bfb8      	it	lt
 80017ec:	4618      	movlt	r0, r3
 80017ee:	e734      	b.n	800165a <_printf_float+0xbe>
 80017f0:	2301      	movs	r3, #1
 80017f2:	464a      	mov	r2, r9
 80017f4:	4631      	mov	r1, r6
 80017f6:	4628      	mov	r0, r5
 80017f8:	47b8      	blx	r7
 80017fa:	3001      	adds	r0, #1
 80017fc:	f43f af2b 	beq.w	8001656 <_printf_float+0xba>
 8001800:	f108 0801 	add.w	r8, r8, #1
 8001804:	e7e6      	b.n	80017d4 <_printf_float+0x238>
 8001806:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001808:	2b00      	cmp	r3, #0
 800180a:	dc2b      	bgt.n	8001864 <_printf_float+0x2c8>
 800180c:	2301      	movs	r3, #1
 800180e:	4a26      	ldr	r2, [pc, #152]	; (80018a8 <_printf_float+0x30c>)
 8001810:	4631      	mov	r1, r6
 8001812:	4628      	mov	r0, r5
 8001814:	47b8      	blx	r7
 8001816:	3001      	adds	r0, #1
 8001818:	f43f af1d 	beq.w	8001656 <_printf_float+0xba>
 800181c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800181e:	b923      	cbnz	r3, 800182a <_printf_float+0x28e>
 8001820:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001822:	b913      	cbnz	r3, 800182a <_printf_float+0x28e>
 8001824:	6823      	ldr	r3, [r4, #0]
 8001826:	07d9      	lsls	r1, r3, #31
 8001828:	d5d8      	bpl.n	80017dc <_printf_float+0x240>
 800182a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800182e:	4631      	mov	r1, r6
 8001830:	4628      	mov	r0, r5
 8001832:	47b8      	blx	r7
 8001834:	3001      	adds	r0, #1
 8001836:	f43f af0e 	beq.w	8001656 <_printf_float+0xba>
 800183a:	f04f 0900 	mov.w	r9, #0
 800183e:	f104 0a1a 	add.w	sl, r4, #26
 8001842:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001844:	425b      	negs	r3, r3
 8001846:	454b      	cmp	r3, r9
 8001848:	dc01      	bgt.n	800184e <_printf_float+0x2b2>
 800184a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800184c:	e794      	b.n	8001778 <_printf_float+0x1dc>
 800184e:	2301      	movs	r3, #1
 8001850:	4652      	mov	r2, sl
 8001852:	4631      	mov	r1, r6
 8001854:	4628      	mov	r0, r5
 8001856:	47b8      	blx	r7
 8001858:	3001      	adds	r0, #1
 800185a:	f43f aefc 	beq.w	8001656 <_printf_float+0xba>
 800185e:	f109 0901 	add.w	r9, r9, #1
 8001862:	e7ee      	b.n	8001842 <_printf_float+0x2a6>
 8001864:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001866:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001868:	429a      	cmp	r2, r3
 800186a:	bfa8      	it	ge
 800186c:	461a      	movge	r2, r3
 800186e:	2a00      	cmp	r2, #0
 8001870:	4691      	mov	r9, r2
 8001872:	dd07      	ble.n	8001884 <_printf_float+0x2e8>
 8001874:	4613      	mov	r3, r2
 8001876:	4631      	mov	r1, r6
 8001878:	4642      	mov	r2, r8
 800187a:	4628      	mov	r0, r5
 800187c:	47b8      	blx	r7
 800187e:	3001      	adds	r0, #1
 8001880:	f43f aee9 	beq.w	8001656 <_printf_float+0xba>
 8001884:	f104 031a 	add.w	r3, r4, #26
 8001888:	f04f 0b00 	mov.w	fp, #0
 800188c:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001890:	9306      	str	r3, [sp, #24]
 8001892:	e015      	b.n	80018c0 <_printf_float+0x324>
 8001894:	7fefffff 	.word	0x7fefffff
 8001898:	080035a4 	.word	0x080035a4
 800189c:	080035a0 	.word	0x080035a0
 80018a0:	080035ac 	.word	0x080035ac
 80018a4:	080035a8 	.word	0x080035a8
 80018a8:	080035b0 	.word	0x080035b0
 80018ac:	2301      	movs	r3, #1
 80018ae:	9a06      	ldr	r2, [sp, #24]
 80018b0:	4631      	mov	r1, r6
 80018b2:	4628      	mov	r0, r5
 80018b4:	47b8      	blx	r7
 80018b6:	3001      	adds	r0, #1
 80018b8:	f43f aecd 	beq.w	8001656 <_printf_float+0xba>
 80018bc:	f10b 0b01 	add.w	fp, fp, #1
 80018c0:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 80018c4:	ebaa 0309 	sub.w	r3, sl, r9
 80018c8:	455b      	cmp	r3, fp
 80018ca:	dcef      	bgt.n	80018ac <_printf_float+0x310>
 80018cc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80018d0:	429a      	cmp	r2, r3
 80018d2:	44d0      	add	r8, sl
 80018d4:	db15      	blt.n	8001902 <_printf_float+0x366>
 80018d6:	6823      	ldr	r3, [r4, #0]
 80018d8:	07da      	lsls	r2, r3, #31
 80018da:	d412      	bmi.n	8001902 <_printf_float+0x366>
 80018dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80018de:	9909      	ldr	r1, [sp, #36]	; 0x24
 80018e0:	eba3 020a 	sub.w	r2, r3, sl
 80018e4:	eba3 0a01 	sub.w	sl, r3, r1
 80018e8:	4592      	cmp	sl, r2
 80018ea:	bfa8      	it	ge
 80018ec:	4692      	movge	sl, r2
 80018ee:	f1ba 0f00 	cmp.w	sl, #0
 80018f2:	dc0e      	bgt.n	8001912 <_printf_float+0x376>
 80018f4:	f04f 0800 	mov.w	r8, #0
 80018f8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80018fc:	f104 091a 	add.w	r9, r4, #26
 8001900:	e019      	b.n	8001936 <_printf_float+0x39a>
 8001902:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001906:	4631      	mov	r1, r6
 8001908:	4628      	mov	r0, r5
 800190a:	47b8      	blx	r7
 800190c:	3001      	adds	r0, #1
 800190e:	d1e5      	bne.n	80018dc <_printf_float+0x340>
 8001910:	e6a1      	b.n	8001656 <_printf_float+0xba>
 8001912:	4653      	mov	r3, sl
 8001914:	4642      	mov	r2, r8
 8001916:	4631      	mov	r1, r6
 8001918:	4628      	mov	r0, r5
 800191a:	47b8      	blx	r7
 800191c:	3001      	adds	r0, #1
 800191e:	d1e9      	bne.n	80018f4 <_printf_float+0x358>
 8001920:	e699      	b.n	8001656 <_printf_float+0xba>
 8001922:	2301      	movs	r3, #1
 8001924:	464a      	mov	r2, r9
 8001926:	4631      	mov	r1, r6
 8001928:	4628      	mov	r0, r5
 800192a:	47b8      	blx	r7
 800192c:	3001      	adds	r0, #1
 800192e:	f43f ae92 	beq.w	8001656 <_printf_float+0xba>
 8001932:	f108 0801 	add.w	r8, r8, #1
 8001936:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800193a:	1a9b      	subs	r3, r3, r2
 800193c:	eba3 030a 	sub.w	r3, r3, sl
 8001940:	4543      	cmp	r3, r8
 8001942:	dcee      	bgt.n	8001922 <_printf_float+0x386>
 8001944:	e74a      	b.n	80017dc <_printf_float+0x240>
 8001946:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001948:	2a01      	cmp	r2, #1
 800194a:	dc01      	bgt.n	8001950 <_printf_float+0x3b4>
 800194c:	07db      	lsls	r3, r3, #31
 800194e:	d53a      	bpl.n	80019c6 <_printf_float+0x42a>
 8001950:	2301      	movs	r3, #1
 8001952:	4642      	mov	r2, r8
 8001954:	4631      	mov	r1, r6
 8001956:	4628      	mov	r0, r5
 8001958:	47b8      	blx	r7
 800195a:	3001      	adds	r0, #1
 800195c:	f43f ae7b 	beq.w	8001656 <_printf_float+0xba>
 8001960:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001964:	4631      	mov	r1, r6
 8001966:	4628      	mov	r0, r5
 8001968:	47b8      	blx	r7
 800196a:	3001      	adds	r0, #1
 800196c:	f108 0801 	add.w	r8, r8, #1
 8001970:	f43f ae71 	beq.w	8001656 <_printf_float+0xba>
 8001974:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001976:	2200      	movs	r2, #0
 8001978:	f103 3aff 	add.w	sl, r3, #4294967295
 800197c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001980:	2300      	movs	r3, #0
 8001982:	f7ff f8a9 	bl	8000ad8 <__aeabi_dcmpeq>
 8001986:	b9c8      	cbnz	r0, 80019bc <_printf_float+0x420>
 8001988:	4653      	mov	r3, sl
 800198a:	4642      	mov	r2, r8
 800198c:	4631      	mov	r1, r6
 800198e:	4628      	mov	r0, r5
 8001990:	47b8      	blx	r7
 8001992:	3001      	adds	r0, #1
 8001994:	d10e      	bne.n	80019b4 <_printf_float+0x418>
 8001996:	e65e      	b.n	8001656 <_printf_float+0xba>
 8001998:	2301      	movs	r3, #1
 800199a:	4652      	mov	r2, sl
 800199c:	4631      	mov	r1, r6
 800199e:	4628      	mov	r0, r5
 80019a0:	47b8      	blx	r7
 80019a2:	3001      	adds	r0, #1
 80019a4:	f43f ae57 	beq.w	8001656 <_printf_float+0xba>
 80019a8:	f108 0801 	add.w	r8, r8, #1
 80019ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80019ae:	3b01      	subs	r3, #1
 80019b0:	4543      	cmp	r3, r8
 80019b2:	dcf1      	bgt.n	8001998 <_printf_float+0x3fc>
 80019b4:	464b      	mov	r3, r9
 80019b6:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80019ba:	e6de      	b.n	800177a <_printf_float+0x1de>
 80019bc:	f04f 0800 	mov.w	r8, #0
 80019c0:	f104 0a1a 	add.w	sl, r4, #26
 80019c4:	e7f2      	b.n	80019ac <_printf_float+0x410>
 80019c6:	2301      	movs	r3, #1
 80019c8:	e7df      	b.n	800198a <_printf_float+0x3ee>
 80019ca:	2301      	movs	r3, #1
 80019cc:	464a      	mov	r2, r9
 80019ce:	4631      	mov	r1, r6
 80019d0:	4628      	mov	r0, r5
 80019d2:	47b8      	blx	r7
 80019d4:	3001      	adds	r0, #1
 80019d6:	f43f ae3e 	beq.w	8001656 <_printf_float+0xba>
 80019da:	f108 0801 	add.w	r8, r8, #1
 80019de:	68e3      	ldr	r3, [r4, #12]
 80019e0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80019e2:	1a9b      	subs	r3, r3, r2
 80019e4:	4543      	cmp	r3, r8
 80019e6:	dcf0      	bgt.n	80019ca <_printf_float+0x42e>
 80019e8:	e6fc      	b.n	80017e4 <_printf_float+0x248>
 80019ea:	f04f 0800 	mov.w	r8, #0
 80019ee:	f104 0919 	add.w	r9, r4, #25
 80019f2:	e7f4      	b.n	80019de <_printf_float+0x442>
 80019f4:	2900      	cmp	r1, #0
 80019f6:	f43f ae8b 	beq.w	8001710 <_printf_float+0x174>
 80019fa:	2300      	movs	r3, #0
 80019fc:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8001a00:	ab09      	add	r3, sp, #36	; 0x24
 8001a02:	9300      	str	r3, [sp, #0]
 8001a04:	ec49 8b10 	vmov	d0, r8, r9
 8001a08:	6022      	str	r2, [r4, #0]
 8001a0a:	f8cd a004 	str.w	sl, [sp, #4]
 8001a0e:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001a12:	4628      	mov	r0, r5
 8001a14:	f7ff fd2e 	bl	8001474 <__cvt>
 8001a18:	4680      	mov	r8, r0
 8001a1a:	e648      	b.n	80016ae <_printf_float+0x112>

08001a1c <_printf_common>:
 8001a1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001a20:	4691      	mov	r9, r2
 8001a22:	461f      	mov	r7, r3
 8001a24:	688a      	ldr	r2, [r1, #8]
 8001a26:	690b      	ldr	r3, [r1, #16]
 8001a28:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001a2c:	4293      	cmp	r3, r2
 8001a2e:	bfb8      	it	lt
 8001a30:	4613      	movlt	r3, r2
 8001a32:	f8c9 3000 	str.w	r3, [r9]
 8001a36:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001a3a:	4606      	mov	r6, r0
 8001a3c:	460c      	mov	r4, r1
 8001a3e:	b112      	cbz	r2, 8001a46 <_printf_common+0x2a>
 8001a40:	3301      	adds	r3, #1
 8001a42:	f8c9 3000 	str.w	r3, [r9]
 8001a46:	6823      	ldr	r3, [r4, #0]
 8001a48:	0699      	lsls	r1, r3, #26
 8001a4a:	bf42      	ittt	mi
 8001a4c:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001a50:	3302      	addmi	r3, #2
 8001a52:	f8c9 3000 	strmi.w	r3, [r9]
 8001a56:	6825      	ldr	r5, [r4, #0]
 8001a58:	f015 0506 	ands.w	r5, r5, #6
 8001a5c:	d107      	bne.n	8001a6e <_printf_common+0x52>
 8001a5e:	f104 0a19 	add.w	sl, r4, #25
 8001a62:	68e3      	ldr	r3, [r4, #12]
 8001a64:	f8d9 2000 	ldr.w	r2, [r9]
 8001a68:	1a9b      	subs	r3, r3, r2
 8001a6a:	42ab      	cmp	r3, r5
 8001a6c:	dc28      	bgt.n	8001ac0 <_printf_common+0xa4>
 8001a6e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001a72:	6822      	ldr	r2, [r4, #0]
 8001a74:	3300      	adds	r3, #0
 8001a76:	bf18      	it	ne
 8001a78:	2301      	movne	r3, #1
 8001a7a:	0692      	lsls	r2, r2, #26
 8001a7c:	d42d      	bmi.n	8001ada <_printf_common+0xbe>
 8001a7e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001a82:	4639      	mov	r1, r7
 8001a84:	4630      	mov	r0, r6
 8001a86:	47c0      	blx	r8
 8001a88:	3001      	adds	r0, #1
 8001a8a:	d020      	beq.n	8001ace <_printf_common+0xb2>
 8001a8c:	6823      	ldr	r3, [r4, #0]
 8001a8e:	68e5      	ldr	r5, [r4, #12]
 8001a90:	f8d9 2000 	ldr.w	r2, [r9]
 8001a94:	f003 0306 	and.w	r3, r3, #6
 8001a98:	2b04      	cmp	r3, #4
 8001a9a:	bf08      	it	eq
 8001a9c:	1aad      	subeq	r5, r5, r2
 8001a9e:	68a3      	ldr	r3, [r4, #8]
 8001aa0:	6922      	ldr	r2, [r4, #16]
 8001aa2:	bf0c      	ite	eq
 8001aa4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001aa8:	2500      	movne	r5, #0
 8001aaa:	4293      	cmp	r3, r2
 8001aac:	bfc4      	itt	gt
 8001aae:	1a9b      	subgt	r3, r3, r2
 8001ab0:	18ed      	addgt	r5, r5, r3
 8001ab2:	f04f 0900 	mov.w	r9, #0
 8001ab6:	341a      	adds	r4, #26
 8001ab8:	454d      	cmp	r5, r9
 8001aba:	d11a      	bne.n	8001af2 <_printf_common+0xd6>
 8001abc:	2000      	movs	r0, #0
 8001abe:	e008      	b.n	8001ad2 <_printf_common+0xb6>
 8001ac0:	2301      	movs	r3, #1
 8001ac2:	4652      	mov	r2, sl
 8001ac4:	4639      	mov	r1, r7
 8001ac6:	4630      	mov	r0, r6
 8001ac8:	47c0      	blx	r8
 8001aca:	3001      	adds	r0, #1
 8001acc:	d103      	bne.n	8001ad6 <_printf_common+0xba>
 8001ace:	f04f 30ff 	mov.w	r0, #4294967295
 8001ad2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001ad6:	3501      	adds	r5, #1
 8001ad8:	e7c3      	b.n	8001a62 <_printf_common+0x46>
 8001ada:	18e1      	adds	r1, r4, r3
 8001adc:	1c5a      	adds	r2, r3, #1
 8001ade:	2030      	movs	r0, #48	; 0x30
 8001ae0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001ae4:	4422      	add	r2, r4
 8001ae6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001aea:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001aee:	3302      	adds	r3, #2
 8001af0:	e7c5      	b.n	8001a7e <_printf_common+0x62>
 8001af2:	2301      	movs	r3, #1
 8001af4:	4622      	mov	r2, r4
 8001af6:	4639      	mov	r1, r7
 8001af8:	4630      	mov	r0, r6
 8001afa:	47c0      	blx	r8
 8001afc:	3001      	adds	r0, #1
 8001afe:	d0e6      	beq.n	8001ace <_printf_common+0xb2>
 8001b00:	f109 0901 	add.w	r9, r9, #1
 8001b04:	e7d8      	b.n	8001ab8 <_printf_common+0x9c>
	...

08001b08 <_printf_i>:
 8001b08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001b0c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001b10:	460c      	mov	r4, r1
 8001b12:	7e09      	ldrb	r1, [r1, #24]
 8001b14:	b085      	sub	sp, #20
 8001b16:	296e      	cmp	r1, #110	; 0x6e
 8001b18:	4617      	mov	r7, r2
 8001b1a:	4606      	mov	r6, r0
 8001b1c:	4698      	mov	r8, r3
 8001b1e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001b20:	f000 80b3 	beq.w	8001c8a <_printf_i+0x182>
 8001b24:	d822      	bhi.n	8001b6c <_printf_i+0x64>
 8001b26:	2963      	cmp	r1, #99	; 0x63
 8001b28:	d036      	beq.n	8001b98 <_printf_i+0x90>
 8001b2a:	d80a      	bhi.n	8001b42 <_printf_i+0x3a>
 8001b2c:	2900      	cmp	r1, #0
 8001b2e:	f000 80b9 	beq.w	8001ca4 <_printf_i+0x19c>
 8001b32:	2958      	cmp	r1, #88	; 0x58
 8001b34:	f000 8083 	beq.w	8001c3e <_printf_i+0x136>
 8001b38:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001b3c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001b40:	e032      	b.n	8001ba8 <_printf_i+0xa0>
 8001b42:	2964      	cmp	r1, #100	; 0x64
 8001b44:	d001      	beq.n	8001b4a <_printf_i+0x42>
 8001b46:	2969      	cmp	r1, #105	; 0x69
 8001b48:	d1f6      	bne.n	8001b38 <_printf_i+0x30>
 8001b4a:	6820      	ldr	r0, [r4, #0]
 8001b4c:	6813      	ldr	r3, [r2, #0]
 8001b4e:	0605      	lsls	r5, r0, #24
 8001b50:	f103 0104 	add.w	r1, r3, #4
 8001b54:	d52a      	bpl.n	8001bac <_printf_i+0xa4>
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	6011      	str	r1, [r2, #0]
 8001b5a:	2b00      	cmp	r3, #0
 8001b5c:	da03      	bge.n	8001b66 <_printf_i+0x5e>
 8001b5e:	222d      	movs	r2, #45	; 0x2d
 8001b60:	425b      	negs	r3, r3
 8001b62:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8001b66:	486f      	ldr	r0, [pc, #444]	; (8001d24 <_printf_i+0x21c>)
 8001b68:	220a      	movs	r2, #10
 8001b6a:	e039      	b.n	8001be0 <_printf_i+0xd8>
 8001b6c:	2973      	cmp	r1, #115	; 0x73
 8001b6e:	f000 809d 	beq.w	8001cac <_printf_i+0x1a4>
 8001b72:	d808      	bhi.n	8001b86 <_printf_i+0x7e>
 8001b74:	296f      	cmp	r1, #111	; 0x6f
 8001b76:	d020      	beq.n	8001bba <_printf_i+0xb2>
 8001b78:	2970      	cmp	r1, #112	; 0x70
 8001b7a:	d1dd      	bne.n	8001b38 <_printf_i+0x30>
 8001b7c:	6823      	ldr	r3, [r4, #0]
 8001b7e:	f043 0320 	orr.w	r3, r3, #32
 8001b82:	6023      	str	r3, [r4, #0]
 8001b84:	e003      	b.n	8001b8e <_printf_i+0x86>
 8001b86:	2975      	cmp	r1, #117	; 0x75
 8001b88:	d017      	beq.n	8001bba <_printf_i+0xb2>
 8001b8a:	2978      	cmp	r1, #120	; 0x78
 8001b8c:	d1d4      	bne.n	8001b38 <_printf_i+0x30>
 8001b8e:	2378      	movs	r3, #120	; 0x78
 8001b90:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001b94:	4864      	ldr	r0, [pc, #400]	; (8001d28 <_printf_i+0x220>)
 8001b96:	e055      	b.n	8001c44 <_printf_i+0x13c>
 8001b98:	6813      	ldr	r3, [r2, #0]
 8001b9a:	1d19      	adds	r1, r3, #4
 8001b9c:	681b      	ldr	r3, [r3, #0]
 8001b9e:	6011      	str	r1, [r2, #0]
 8001ba0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001ba4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001ba8:	2301      	movs	r3, #1
 8001baa:	e08c      	b.n	8001cc6 <_printf_i+0x1be>
 8001bac:	681b      	ldr	r3, [r3, #0]
 8001bae:	6011      	str	r1, [r2, #0]
 8001bb0:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001bb4:	bf18      	it	ne
 8001bb6:	b21b      	sxthne	r3, r3
 8001bb8:	e7cf      	b.n	8001b5a <_printf_i+0x52>
 8001bba:	6813      	ldr	r3, [r2, #0]
 8001bbc:	6825      	ldr	r5, [r4, #0]
 8001bbe:	1d18      	adds	r0, r3, #4
 8001bc0:	6010      	str	r0, [r2, #0]
 8001bc2:	0628      	lsls	r0, r5, #24
 8001bc4:	d501      	bpl.n	8001bca <_printf_i+0xc2>
 8001bc6:	681b      	ldr	r3, [r3, #0]
 8001bc8:	e002      	b.n	8001bd0 <_printf_i+0xc8>
 8001bca:	0668      	lsls	r0, r5, #25
 8001bcc:	d5fb      	bpl.n	8001bc6 <_printf_i+0xbe>
 8001bce:	881b      	ldrh	r3, [r3, #0]
 8001bd0:	4854      	ldr	r0, [pc, #336]	; (8001d24 <_printf_i+0x21c>)
 8001bd2:	296f      	cmp	r1, #111	; 0x6f
 8001bd4:	bf14      	ite	ne
 8001bd6:	220a      	movne	r2, #10
 8001bd8:	2208      	moveq	r2, #8
 8001bda:	2100      	movs	r1, #0
 8001bdc:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001be0:	6865      	ldr	r5, [r4, #4]
 8001be2:	60a5      	str	r5, [r4, #8]
 8001be4:	2d00      	cmp	r5, #0
 8001be6:	f2c0 8095 	blt.w	8001d14 <_printf_i+0x20c>
 8001bea:	6821      	ldr	r1, [r4, #0]
 8001bec:	f021 0104 	bic.w	r1, r1, #4
 8001bf0:	6021      	str	r1, [r4, #0]
 8001bf2:	2b00      	cmp	r3, #0
 8001bf4:	d13d      	bne.n	8001c72 <_printf_i+0x16a>
 8001bf6:	2d00      	cmp	r5, #0
 8001bf8:	f040 808e 	bne.w	8001d18 <_printf_i+0x210>
 8001bfc:	4665      	mov	r5, ip
 8001bfe:	2a08      	cmp	r2, #8
 8001c00:	d10b      	bne.n	8001c1a <_printf_i+0x112>
 8001c02:	6823      	ldr	r3, [r4, #0]
 8001c04:	07db      	lsls	r3, r3, #31
 8001c06:	d508      	bpl.n	8001c1a <_printf_i+0x112>
 8001c08:	6923      	ldr	r3, [r4, #16]
 8001c0a:	6862      	ldr	r2, [r4, #4]
 8001c0c:	429a      	cmp	r2, r3
 8001c0e:	bfde      	ittt	le
 8001c10:	2330      	movle	r3, #48	; 0x30
 8001c12:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001c16:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001c1a:	ebac 0305 	sub.w	r3, ip, r5
 8001c1e:	6123      	str	r3, [r4, #16]
 8001c20:	f8cd 8000 	str.w	r8, [sp]
 8001c24:	463b      	mov	r3, r7
 8001c26:	aa03      	add	r2, sp, #12
 8001c28:	4621      	mov	r1, r4
 8001c2a:	4630      	mov	r0, r6
 8001c2c:	f7ff fef6 	bl	8001a1c <_printf_common>
 8001c30:	3001      	adds	r0, #1
 8001c32:	d14d      	bne.n	8001cd0 <_printf_i+0x1c8>
 8001c34:	f04f 30ff 	mov.w	r0, #4294967295
 8001c38:	b005      	add	sp, #20
 8001c3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001c3e:	4839      	ldr	r0, [pc, #228]	; (8001d24 <_printf_i+0x21c>)
 8001c40:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8001c44:	6813      	ldr	r3, [r2, #0]
 8001c46:	6821      	ldr	r1, [r4, #0]
 8001c48:	1d1d      	adds	r5, r3, #4
 8001c4a:	681b      	ldr	r3, [r3, #0]
 8001c4c:	6015      	str	r5, [r2, #0]
 8001c4e:	060a      	lsls	r2, r1, #24
 8001c50:	d50b      	bpl.n	8001c6a <_printf_i+0x162>
 8001c52:	07ca      	lsls	r2, r1, #31
 8001c54:	bf44      	itt	mi
 8001c56:	f041 0120 	orrmi.w	r1, r1, #32
 8001c5a:	6021      	strmi	r1, [r4, #0]
 8001c5c:	b91b      	cbnz	r3, 8001c66 <_printf_i+0x15e>
 8001c5e:	6822      	ldr	r2, [r4, #0]
 8001c60:	f022 0220 	bic.w	r2, r2, #32
 8001c64:	6022      	str	r2, [r4, #0]
 8001c66:	2210      	movs	r2, #16
 8001c68:	e7b7      	b.n	8001bda <_printf_i+0xd2>
 8001c6a:	064d      	lsls	r5, r1, #25
 8001c6c:	bf48      	it	mi
 8001c6e:	b29b      	uxthmi	r3, r3
 8001c70:	e7ef      	b.n	8001c52 <_printf_i+0x14a>
 8001c72:	4665      	mov	r5, ip
 8001c74:	fbb3 f1f2 	udiv	r1, r3, r2
 8001c78:	fb02 3311 	mls	r3, r2, r1, r3
 8001c7c:	5cc3      	ldrb	r3, [r0, r3]
 8001c7e:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8001c82:	460b      	mov	r3, r1
 8001c84:	2900      	cmp	r1, #0
 8001c86:	d1f5      	bne.n	8001c74 <_printf_i+0x16c>
 8001c88:	e7b9      	b.n	8001bfe <_printf_i+0xf6>
 8001c8a:	6813      	ldr	r3, [r2, #0]
 8001c8c:	6825      	ldr	r5, [r4, #0]
 8001c8e:	6961      	ldr	r1, [r4, #20]
 8001c90:	1d18      	adds	r0, r3, #4
 8001c92:	6010      	str	r0, [r2, #0]
 8001c94:	0628      	lsls	r0, r5, #24
 8001c96:	681b      	ldr	r3, [r3, #0]
 8001c98:	d501      	bpl.n	8001c9e <_printf_i+0x196>
 8001c9a:	6019      	str	r1, [r3, #0]
 8001c9c:	e002      	b.n	8001ca4 <_printf_i+0x19c>
 8001c9e:	066a      	lsls	r2, r5, #25
 8001ca0:	d5fb      	bpl.n	8001c9a <_printf_i+0x192>
 8001ca2:	8019      	strh	r1, [r3, #0]
 8001ca4:	2300      	movs	r3, #0
 8001ca6:	6123      	str	r3, [r4, #16]
 8001ca8:	4665      	mov	r5, ip
 8001caa:	e7b9      	b.n	8001c20 <_printf_i+0x118>
 8001cac:	6813      	ldr	r3, [r2, #0]
 8001cae:	1d19      	adds	r1, r3, #4
 8001cb0:	6011      	str	r1, [r2, #0]
 8001cb2:	681d      	ldr	r5, [r3, #0]
 8001cb4:	6862      	ldr	r2, [r4, #4]
 8001cb6:	2100      	movs	r1, #0
 8001cb8:	4628      	mov	r0, r5
 8001cba:	f7fe fa99 	bl	80001f0 <memchr>
 8001cbe:	b108      	cbz	r0, 8001cc4 <_printf_i+0x1bc>
 8001cc0:	1b40      	subs	r0, r0, r5
 8001cc2:	6060      	str	r0, [r4, #4]
 8001cc4:	6863      	ldr	r3, [r4, #4]
 8001cc6:	6123      	str	r3, [r4, #16]
 8001cc8:	2300      	movs	r3, #0
 8001cca:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001cce:	e7a7      	b.n	8001c20 <_printf_i+0x118>
 8001cd0:	6923      	ldr	r3, [r4, #16]
 8001cd2:	462a      	mov	r2, r5
 8001cd4:	4639      	mov	r1, r7
 8001cd6:	4630      	mov	r0, r6
 8001cd8:	47c0      	blx	r8
 8001cda:	3001      	adds	r0, #1
 8001cdc:	d0aa      	beq.n	8001c34 <_printf_i+0x12c>
 8001cde:	6823      	ldr	r3, [r4, #0]
 8001ce0:	079b      	lsls	r3, r3, #30
 8001ce2:	d413      	bmi.n	8001d0c <_printf_i+0x204>
 8001ce4:	68e0      	ldr	r0, [r4, #12]
 8001ce6:	9b03      	ldr	r3, [sp, #12]
 8001ce8:	4298      	cmp	r0, r3
 8001cea:	bfb8      	it	lt
 8001cec:	4618      	movlt	r0, r3
 8001cee:	e7a3      	b.n	8001c38 <_printf_i+0x130>
 8001cf0:	2301      	movs	r3, #1
 8001cf2:	464a      	mov	r2, r9
 8001cf4:	4639      	mov	r1, r7
 8001cf6:	4630      	mov	r0, r6
 8001cf8:	47c0      	blx	r8
 8001cfa:	3001      	adds	r0, #1
 8001cfc:	d09a      	beq.n	8001c34 <_printf_i+0x12c>
 8001cfe:	3501      	adds	r5, #1
 8001d00:	68e3      	ldr	r3, [r4, #12]
 8001d02:	9a03      	ldr	r2, [sp, #12]
 8001d04:	1a9b      	subs	r3, r3, r2
 8001d06:	42ab      	cmp	r3, r5
 8001d08:	dcf2      	bgt.n	8001cf0 <_printf_i+0x1e8>
 8001d0a:	e7eb      	b.n	8001ce4 <_printf_i+0x1dc>
 8001d0c:	2500      	movs	r5, #0
 8001d0e:	f104 0919 	add.w	r9, r4, #25
 8001d12:	e7f5      	b.n	8001d00 <_printf_i+0x1f8>
 8001d14:	2b00      	cmp	r3, #0
 8001d16:	d1ac      	bne.n	8001c72 <_printf_i+0x16a>
 8001d18:	7803      	ldrb	r3, [r0, #0]
 8001d1a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001d1e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001d22:	e76c      	b.n	8001bfe <_printf_i+0xf6>
 8001d24:	080035b2 	.word	0x080035b2
 8001d28:	080035c3 	.word	0x080035c3

08001d2c <siprintf>:
 8001d2c:	b40e      	push	{r1, r2, r3}
 8001d2e:	b500      	push	{lr}
 8001d30:	b09c      	sub	sp, #112	; 0x70
 8001d32:	ab1d      	add	r3, sp, #116	; 0x74
 8001d34:	9002      	str	r0, [sp, #8]
 8001d36:	9006      	str	r0, [sp, #24]
 8001d38:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8001d3c:	4809      	ldr	r0, [pc, #36]	; (8001d64 <siprintf+0x38>)
 8001d3e:	9107      	str	r1, [sp, #28]
 8001d40:	9104      	str	r1, [sp, #16]
 8001d42:	4909      	ldr	r1, [pc, #36]	; (8001d68 <siprintf+0x3c>)
 8001d44:	f853 2b04 	ldr.w	r2, [r3], #4
 8001d48:	9105      	str	r1, [sp, #20]
 8001d4a:	6800      	ldr	r0, [r0, #0]
 8001d4c:	9301      	str	r3, [sp, #4]
 8001d4e:	a902      	add	r1, sp, #8
 8001d50:	f001 fa5e 	bl	8003210 <_svfiprintf_r>
 8001d54:	9b02      	ldr	r3, [sp, #8]
 8001d56:	2200      	movs	r2, #0
 8001d58:	701a      	strb	r2, [r3, #0]
 8001d5a:	b01c      	add	sp, #112	; 0x70
 8001d5c:	f85d eb04 	ldr.w	lr, [sp], #4
 8001d60:	b003      	add	sp, #12
 8001d62:	4770      	bx	lr
 8001d64:	20000004 	.word	0x20000004
 8001d68:	ffff0208 	.word	0xffff0208

08001d6c <quorem>:
 8001d6c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001d70:	6903      	ldr	r3, [r0, #16]
 8001d72:	690c      	ldr	r4, [r1, #16]
 8001d74:	42a3      	cmp	r3, r4
 8001d76:	4680      	mov	r8, r0
 8001d78:	f2c0 8082 	blt.w	8001e80 <quorem+0x114>
 8001d7c:	3c01      	subs	r4, #1
 8001d7e:	f101 0714 	add.w	r7, r1, #20
 8001d82:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 8001d86:	f100 0614 	add.w	r6, r0, #20
 8001d8a:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8001d8e:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8001d92:	eb06 030c 	add.w	r3, r6, ip
 8001d96:	3501      	adds	r5, #1
 8001d98:	eb07 090c 	add.w	r9, r7, ip
 8001d9c:	9301      	str	r3, [sp, #4]
 8001d9e:	fbb0 f5f5 	udiv	r5, r0, r5
 8001da2:	b395      	cbz	r5, 8001e0a <quorem+0x9e>
 8001da4:	f04f 0a00 	mov.w	sl, #0
 8001da8:	4638      	mov	r0, r7
 8001daa:	46b6      	mov	lr, r6
 8001dac:	46d3      	mov	fp, sl
 8001dae:	f850 2b04 	ldr.w	r2, [r0], #4
 8001db2:	b293      	uxth	r3, r2
 8001db4:	fb05 a303 	mla	r3, r5, r3, sl
 8001db8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8001dbc:	b29b      	uxth	r3, r3
 8001dbe:	ebab 0303 	sub.w	r3, fp, r3
 8001dc2:	0c12      	lsrs	r2, r2, #16
 8001dc4:	f8de b000 	ldr.w	fp, [lr]
 8001dc8:	fb05 a202 	mla	r2, r5, r2, sl
 8001dcc:	fa13 f38b 	uxtah	r3, r3, fp
 8001dd0:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8001dd4:	fa1f fb82 	uxth.w	fp, r2
 8001dd8:	f8de 2000 	ldr.w	r2, [lr]
 8001ddc:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 8001de0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8001de4:	b29b      	uxth	r3, r3
 8001de6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001dea:	4581      	cmp	r9, r0
 8001dec:	ea4f 4b22 	mov.w	fp, r2, asr #16
 8001df0:	f84e 3b04 	str.w	r3, [lr], #4
 8001df4:	d2db      	bcs.n	8001dae <quorem+0x42>
 8001df6:	f856 300c 	ldr.w	r3, [r6, ip]
 8001dfa:	b933      	cbnz	r3, 8001e0a <quorem+0x9e>
 8001dfc:	9b01      	ldr	r3, [sp, #4]
 8001dfe:	3b04      	subs	r3, #4
 8001e00:	429e      	cmp	r6, r3
 8001e02:	461a      	mov	r2, r3
 8001e04:	d330      	bcc.n	8001e68 <quorem+0xfc>
 8001e06:	f8c8 4010 	str.w	r4, [r8, #16]
 8001e0a:	4640      	mov	r0, r8
 8001e0c:	f001 f82a 	bl	8002e64 <__mcmp>
 8001e10:	2800      	cmp	r0, #0
 8001e12:	db25      	blt.n	8001e60 <quorem+0xf4>
 8001e14:	3501      	adds	r5, #1
 8001e16:	4630      	mov	r0, r6
 8001e18:	f04f 0c00 	mov.w	ip, #0
 8001e1c:	f857 2b04 	ldr.w	r2, [r7], #4
 8001e20:	f8d0 e000 	ldr.w	lr, [r0]
 8001e24:	b293      	uxth	r3, r2
 8001e26:	ebac 0303 	sub.w	r3, ip, r3
 8001e2a:	0c12      	lsrs	r2, r2, #16
 8001e2c:	fa13 f38e 	uxtah	r3, r3, lr
 8001e30:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8001e34:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8001e38:	b29b      	uxth	r3, r3
 8001e3a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001e3e:	45b9      	cmp	r9, r7
 8001e40:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8001e44:	f840 3b04 	str.w	r3, [r0], #4
 8001e48:	d2e8      	bcs.n	8001e1c <quorem+0xb0>
 8001e4a:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8001e4e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8001e52:	b92a      	cbnz	r2, 8001e60 <quorem+0xf4>
 8001e54:	3b04      	subs	r3, #4
 8001e56:	429e      	cmp	r6, r3
 8001e58:	461a      	mov	r2, r3
 8001e5a:	d30b      	bcc.n	8001e74 <quorem+0x108>
 8001e5c:	f8c8 4010 	str.w	r4, [r8, #16]
 8001e60:	4628      	mov	r0, r5
 8001e62:	b003      	add	sp, #12
 8001e64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001e68:	6812      	ldr	r2, [r2, #0]
 8001e6a:	3b04      	subs	r3, #4
 8001e6c:	2a00      	cmp	r2, #0
 8001e6e:	d1ca      	bne.n	8001e06 <quorem+0x9a>
 8001e70:	3c01      	subs	r4, #1
 8001e72:	e7c5      	b.n	8001e00 <quorem+0x94>
 8001e74:	6812      	ldr	r2, [r2, #0]
 8001e76:	3b04      	subs	r3, #4
 8001e78:	2a00      	cmp	r2, #0
 8001e7a:	d1ef      	bne.n	8001e5c <quorem+0xf0>
 8001e7c:	3c01      	subs	r4, #1
 8001e7e:	e7ea      	b.n	8001e56 <quorem+0xea>
 8001e80:	2000      	movs	r0, #0
 8001e82:	e7ee      	b.n	8001e62 <quorem+0xf6>
 8001e84:	0000      	movs	r0, r0
	...

08001e88 <_dtoa_r>:
 8001e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001e8c:	ec57 6b10 	vmov	r6, r7, d0
 8001e90:	b097      	sub	sp, #92	; 0x5c
 8001e92:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8001e94:	9106      	str	r1, [sp, #24]
 8001e96:	4604      	mov	r4, r0
 8001e98:	920b      	str	r2, [sp, #44]	; 0x2c
 8001e9a:	9312      	str	r3, [sp, #72]	; 0x48
 8001e9c:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8001ea0:	e9cd 6700 	strd	r6, r7, [sp]
 8001ea4:	b93d      	cbnz	r5, 8001eb6 <_dtoa_r+0x2e>
 8001ea6:	2010      	movs	r0, #16
 8001ea8:	f000 fdb4 	bl	8002a14 <malloc>
 8001eac:	6260      	str	r0, [r4, #36]	; 0x24
 8001eae:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8001eb2:	6005      	str	r5, [r0, #0]
 8001eb4:	60c5      	str	r5, [r0, #12]
 8001eb6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001eb8:	6819      	ldr	r1, [r3, #0]
 8001eba:	b151      	cbz	r1, 8001ed2 <_dtoa_r+0x4a>
 8001ebc:	685a      	ldr	r2, [r3, #4]
 8001ebe:	604a      	str	r2, [r1, #4]
 8001ec0:	2301      	movs	r3, #1
 8001ec2:	4093      	lsls	r3, r2
 8001ec4:	608b      	str	r3, [r1, #8]
 8001ec6:	4620      	mov	r0, r4
 8001ec8:	f000 fdeb 	bl	8002aa2 <_Bfree>
 8001ecc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ece:	2200      	movs	r2, #0
 8001ed0:	601a      	str	r2, [r3, #0]
 8001ed2:	1e3b      	subs	r3, r7, #0
 8001ed4:	bfbb      	ittet	lt
 8001ed6:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8001eda:	9301      	strlt	r3, [sp, #4]
 8001edc:	2300      	movge	r3, #0
 8001ede:	2201      	movlt	r2, #1
 8001ee0:	bfac      	ite	ge
 8001ee2:	f8c8 3000 	strge.w	r3, [r8]
 8001ee6:	f8c8 2000 	strlt.w	r2, [r8]
 8001eea:	4baf      	ldr	r3, [pc, #700]	; (80021a8 <_dtoa_r+0x320>)
 8001eec:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8001ef0:	ea33 0308 	bics.w	r3, r3, r8
 8001ef4:	d114      	bne.n	8001f20 <_dtoa_r+0x98>
 8001ef6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001ef8:	f242 730f 	movw	r3, #9999	; 0x270f
 8001efc:	6013      	str	r3, [r2, #0]
 8001efe:	9b00      	ldr	r3, [sp, #0]
 8001f00:	b923      	cbnz	r3, 8001f0c <_dtoa_r+0x84>
 8001f02:	f3c8 0013 	ubfx	r0, r8, #0, #20
 8001f06:	2800      	cmp	r0, #0
 8001f08:	f000 8542 	beq.w	8002990 <_dtoa_r+0xb08>
 8001f0c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8001f0e:	f8df b2ac 	ldr.w	fp, [pc, #684]	; 80021bc <_dtoa_r+0x334>
 8001f12:	2b00      	cmp	r3, #0
 8001f14:	f000 8544 	beq.w	80029a0 <_dtoa_r+0xb18>
 8001f18:	f10b 0303 	add.w	r3, fp, #3
 8001f1c:	f000 bd3e 	b.w	800299c <_dtoa_r+0xb14>
 8001f20:	e9dd 6700 	ldrd	r6, r7, [sp]
 8001f24:	2200      	movs	r2, #0
 8001f26:	2300      	movs	r3, #0
 8001f28:	4630      	mov	r0, r6
 8001f2a:	4639      	mov	r1, r7
 8001f2c:	f7fe fdd4 	bl	8000ad8 <__aeabi_dcmpeq>
 8001f30:	4681      	mov	r9, r0
 8001f32:	b168      	cbz	r0, 8001f50 <_dtoa_r+0xc8>
 8001f34:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001f36:	2301      	movs	r3, #1
 8001f38:	6013      	str	r3, [r2, #0]
 8001f3a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8001f3c:	2b00      	cmp	r3, #0
 8001f3e:	f000 8524 	beq.w	800298a <_dtoa_r+0xb02>
 8001f42:	4b9a      	ldr	r3, [pc, #616]	; (80021ac <_dtoa_r+0x324>)
 8001f44:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8001f46:	f103 3bff 	add.w	fp, r3, #4294967295
 8001f4a:	6013      	str	r3, [r2, #0]
 8001f4c:	f000 bd28 	b.w	80029a0 <_dtoa_r+0xb18>
 8001f50:	aa14      	add	r2, sp, #80	; 0x50
 8001f52:	a915      	add	r1, sp, #84	; 0x54
 8001f54:	ec47 6b10 	vmov	d0, r6, r7
 8001f58:	4620      	mov	r0, r4
 8001f5a:	f000 fffa 	bl	8002f52 <__d2b>
 8001f5e:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8001f62:	9004      	str	r0, [sp, #16]
 8001f64:	2d00      	cmp	r5, #0
 8001f66:	d07c      	beq.n	8002062 <_dtoa_r+0x1da>
 8001f68:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8001f6c:	f043 5b7f 	orr.w	fp, r3, #1069547520	; 0x3fc00000
 8001f70:	46b2      	mov	sl, r6
 8001f72:	f44b 1b40 	orr.w	fp, fp, #3145728	; 0x300000
 8001f76:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8001f7a:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
 8001f7e:	2200      	movs	r2, #0
 8001f80:	4b8b      	ldr	r3, [pc, #556]	; (80021b0 <_dtoa_r+0x328>)
 8001f82:	4650      	mov	r0, sl
 8001f84:	4659      	mov	r1, fp
 8001f86:	f7fe f987 	bl	8000298 <__aeabi_dsub>
 8001f8a:	a381      	add	r3, pc, #516	; (adr r3, 8002190 <_dtoa_r+0x308>)
 8001f8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f90:	f7fe fb3a 	bl	8000608 <__aeabi_dmul>
 8001f94:	a380      	add	r3, pc, #512	; (adr r3, 8002198 <_dtoa_r+0x310>)
 8001f96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f9a:	f7fe f97f 	bl	800029c <__adddf3>
 8001f9e:	4606      	mov	r6, r0
 8001fa0:	4628      	mov	r0, r5
 8001fa2:	460f      	mov	r7, r1
 8001fa4:	f7fe fac6 	bl	8000534 <__aeabi_i2d>
 8001fa8:	a37d      	add	r3, pc, #500	; (adr r3, 80021a0 <_dtoa_r+0x318>)
 8001faa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fae:	f7fe fb2b 	bl	8000608 <__aeabi_dmul>
 8001fb2:	4602      	mov	r2, r0
 8001fb4:	460b      	mov	r3, r1
 8001fb6:	4630      	mov	r0, r6
 8001fb8:	4639      	mov	r1, r7
 8001fba:	f7fe f96f 	bl	800029c <__adddf3>
 8001fbe:	4606      	mov	r6, r0
 8001fc0:	460f      	mov	r7, r1
 8001fc2:	f7fe fdd1 	bl	8000b68 <__aeabi_d2iz>
 8001fc6:	2200      	movs	r2, #0
 8001fc8:	4682      	mov	sl, r0
 8001fca:	2300      	movs	r3, #0
 8001fcc:	4630      	mov	r0, r6
 8001fce:	4639      	mov	r1, r7
 8001fd0:	f7fe fd8c 	bl	8000aec <__aeabi_dcmplt>
 8001fd4:	b148      	cbz	r0, 8001fea <_dtoa_r+0x162>
 8001fd6:	4650      	mov	r0, sl
 8001fd8:	f7fe faac 	bl	8000534 <__aeabi_i2d>
 8001fdc:	4632      	mov	r2, r6
 8001fde:	463b      	mov	r3, r7
 8001fe0:	f7fe fd7a 	bl	8000ad8 <__aeabi_dcmpeq>
 8001fe4:	b908      	cbnz	r0, 8001fea <_dtoa_r+0x162>
 8001fe6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001fea:	f1ba 0f16 	cmp.w	sl, #22
 8001fee:	d859      	bhi.n	80020a4 <_dtoa_r+0x21c>
 8001ff0:	4970      	ldr	r1, [pc, #448]	; (80021b4 <_dtoa_r+0x32c>)
 8001ff2:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8001ff6:	e9dd 2300 	ldrd	r2, r3, [sp]
 8001ffa:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001ffe:	f7fe fd93 	bl	8000b28 <__aeabi_dcmpgt>
 8002002:	2800      	cmp	r0, #0
 8002004:	d050      	beq.n	80020a8 <_dtoa_r+0x220>
 8002006:	f10a 3aff 	add.w	sl, sl, #4294967295
 800200a:	2300      	movs	r3, #0
 800200c:	930f      	str	r3, [sp, #60]	; 0x3c
 800200e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8002010:	1b5d      	subs	r5, r3, r5
 8002012:	f1b5 0801 	subs.w	r8, r5, #1
 8002016:	bf49      	itett	mi
 8002018:	f1c5 0301 	rsbmi	r3, r5, #1
 800201c:	2300      	movpl	r3, #0
 800201e:	9305      	strmi	r3, [sp, #20]
 8002020:	f04f 0800 	movmi.w	r8, #0
 8002024:	bf58      	it	pl
 8002026:	9305      	strpl	r3, [sp, #20]
 8002028:	f1ba 0f00 	cmp.w	sl, #0
 800202c:	db3e      	blt.n	80020ac <_dtoa_r+0x224>
 800202e:	2300      	movs	r3, #0
 8002030:	44d0      	add	r8, sl
 8002032:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 8002036:	9307      	str	r3, [sp, #28]
 8002038:	9b06      	ldr	r3, [sp, #24]
 800203a:	2b09      	cmp	r3, #9
 800203c:	f200 8090 	bhi.w	8002160 <_dtoa_r+0x2d8>
 8002040:	2b05      	cmp	r3, #5
 8002042:	bfc4      	itt	gt
 8002044:	3b04      	subgt	r3, #4
 8002046:	9306      	strgt	r3, [sp, #24]
 8002048:	9b06      	ldr	r3, [sp, #24]
 800204a:	f1a3 0302 	sub.w	r3, r3, #2
 800204e:	bfcc      	ite	gt
 8002050:	2500      	movgt	r5, #0
 8002052:	2501      	movle	r5, #1
 8002054:	2b03      	cmp	r3, #3
 8002056:	f200 808f 	bhi.w	8002178 <_dtoa_r+0x2f0>
 800205a:	e8df f003 	tbb	[pc, r3]
 800205e:	7f7d      	.short	0x7f7d
 8002060:	7131      	.short	0x7131
 8002062:	e9dd 5314 	ldrd	r5, r3, [sp, #80]	; 0x50
 8002066:	441d      	add	r5, r3
 8002068:	f205 4032 	addw	r0, r5, #1074	; 0x432
 800206c:	2820      	cmp	r0, #32
 800206e:	dd13      	ble.n	8002098 <_dtoa_r+0x210>
 8002070:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 8002074:	9b00      	ldr	r3, [sp, #0]
 8002076:	fa08 f800 	lsl.w	r8, r8, r0
 800207a:	f205 4012 	addw	r0, r5, #1042	; 0x412
 800207e:	fa23 f000 	lsr.w	r0, r3, r0
 8002082:	ea48 0000 	orr.w	r0, r8, r0
 8002086:	f7fe fa45 	bl	8000514 <__aeabi_ui2d>
 800208a:	2301      	movs	r3, #1
 800208c:	4682      	mov	sl, r0
 800208e:	f1a1 7bf8 	sub.w	fp, r1, #32505856	; 0x1f00000
 8002092:	3d01      	subs	r5, #1
 8002094:	9313      	str	r3, [sp, #76]	; 0x4c
 8002096:	e772      	b.n	8001f7e <_dtoa_r+0xf6>
 8002098:	9b00      	ldr	r3, [sp, #0]
 800209a:	f1c0 0020 	rsb	r0, r0, #32
 800209e:	fa03 f000 	lsl.w	r0, r3, r0
 80020a2:	e7f0      	b.n	8002086 <_dtoa_r+0x1fe>
 80020a4:	2301      	movs	r3, #1
 80020a6:	e7b1      	b.n	800200c <_dtoa_r+0x184>
 80020a8:	900f      	str	r0, [sp, #60]	; 0x3c
 80020aa:	e7b0      	b.n	800200e <_dtoa_r+0x186>
 80020ac:	9b05      	ldr	r3, [sp, #20]
 80020ae:	eba3 030a 	sub.w	r3, r3, sl
 80020b2:	9305      	str	r3, [sp, #20]
 80020b4:	f1ca 0300 	rsb	r3, sl, #0
 80020b8:	9307      	str	r3, [sp, #28]
 80020ba:	2300      	movs	r3, #0
 80020bc:	930e      	str	r3, [sp, #56]	; 0x38
 80020be:	e7bb      	b.n	8002038 <_dtoa_r+0x1b0>
 80020c0:	2301      	movs	r3, #1
 80020c2:	930a      	str	r3, [sp, #40]	; 0x28
 80020c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80020c6:	2b00      	cmp	r3, #0
 80020c8:	dd59      	ble.n	800217e <_dtoa_r+0x2f6>
 80020ca:	9302      	str	r3, [sp, #8]
 80020cc:	4699      	mov	r9, r3
 80020ce:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80020d0:	2200      	movs	r2, #0
 80020d2:	6072      	str	r2, [r6, #4]
 80020d4:	2204      	movs	r2, #4
 80020d6:	f102 0014 	add.w	r0, r2, #20
 80020da:	4298      	cmp	r0, r3
 80020dc:	6871      	ldr	r1, [r6, #4]
 80020de:	d953      	bls.n	8002188 <_dtoa_r+0x300>
 80020e0:	4620      	mov	r0, r4
 80020e2:	f000 fcaa 	bl	8002a3a <_Balloc>
 80020e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80020e8:	6030      	str	r0, [r6, #0]
 80020ea:	f1b9 0f0e 	cmp.w	r9, #14
 80020ee:	f8d3 b000 	ldr.w	fp, [r3]
 80020f2:	f200 80e6 	bhi.w	80022c2 <_dtoa_r+0x43a>
 80020f6:	2d00      	cmp	r5, #0
 80020f8:	f000 80e3 	beq.w	80022c2 <_dtoa_r+0x43a>
 80020fc:	ed9d 7b00 	vldr	d7, [sp]
 8002100:	f1ba 0f00 	cmp.w	sl, #0
 8002104:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
 8002108:	dd74      	ble.n	80021f4 <_dtoa_r+0x36c>
 800210a:	4a2a      	ldr	r2, [pc, #168]	; (80021b4 <_dtoa_r+0x32c>)
 800210c:	f00a 030f 	and.w	r3, sl, #15
 8002110:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002114:	ed93 7b00 	vldr	d7, [r3]
 8002118:	ea4f 162a 	mov.w	r6, sl, asr #4
 800211c:	06f0      	lsls	r0, r6, #27
 800211e:	ed8d 7b08 	vstr	d7, [sp, #32]
 8002122:	d565      	bpl.n	80021f0 <_dtoa_r+0x368>
 8002124:	4b24      	ldr	r3, [pc, #144]	; (80021b8 <_dtoa_r+0x330>)
 8002126:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800212a:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800212e:	f7fe fb95 	bl	800085c <__aeabi_ddiv>
 8002132:	e9cd 0100 	strd	r0, r1, [sp]
 8002136:	f006 060f 	and.w	r6, r6, #15
 800213a:	2503      	movs	r5, #3
 800213c:	4f1e      	ldr	r7, [pc, #120]	; (80021b8 <_dtoa_r+0x330>)
 800213e:	e04c      	b.n	80021da <_dtoa_r+0x352>
 8002140:	2301      	movs	r3, #1
 8002142:	930a      	str	r3, [sp, #40]	; 0x28
 8002144:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002146:	4453      	add	r3, sl
 8002148:	f103 0901 	add.w	r9, r3, #1
 800214c:	9302      	str	r3, [sp, #8]
 800214e:	464b      	mov	r3, r9
 8002150:	2b01      	cmp	r3, #1
 8002152:	bfb8      	it	lt
 8002154:	2301      	movlt	r3, #1
 8002156:	e7ba      	b.n	80020ce <_dtoa_r+0x246>
 8002158:	2300      	movs	r3, #0
 800215a:	e7b2      	b.n	80020c2 <_dtoa_r+0x23a>
 800215c:	2300      	movs	r3, #0
 800215e:	e7f0      	b.n	8002142 <_dtoa_r+0x2ba>
 8002160:	2501      	movs	r5, #1
 8002162:	2300      	movs	r3, #0
 8002164:	9306      	str	r3, [sp, #24]
 8002166:	950a      	str	r5, [sp, #40]	; 0x28
 8002168:	f04f 33ff 	mov.w	r3, #4294967295
 800216c:	9302      	str	r3, [sp, #8]
 800216e:	4699      	mov	r9, r3
 8002170:	2200      	movs	r2, #0
 8002172:	2312      	movs	r3, #18
 8002174:	920b      	str	r2, [sp, #44]	; 0x2c
 8002176:	e7aa      	b.n	80020ce <_dtoa_r+0x246>
 8002178:	2301      	movs	r3, #1
 800217a:	930a      	str	r3, [sp, #40]	; 0x28
 800217c:	e7f4      	b.n	8002168 <_dtoa_r+0x2e0>
 800217e:	2301      	movs	r3, #1
 8002180:	9302      	str	r3, [sp, #8]
 8002182:	4699      	mov	r9, r3
 8002184:	461a      	mov	r2, r3
 8002186:	e7f5      	b.n	8002174 <_dtoa_r+0x2ec>
 8002188:	3101      	adds	r1, #1
 800218a:	6071      	str	r1, [r6, #4]
 800218c:	0052      	lsls	r2, r2, #1
 800218e:	e7a2      	b.n	80020d6 <_dtoa_r+0x24e>
 8002190:	636f4361 	.word	0x636f4361
 8002194:	3fd287a7 	.word	0x3fd287a7
 8002198:	8b60c8b3 	.word	0x8b60c8b3
 800219c:	3fc68a28 	.word	0x3fc68a28
 80021a0:	509f79fb 	.word	0x509f79fb
 80021a4:	3fd34413 	.word	0x3fd34413
 80021a8:	7ff00000 	.word	0x7ff00000
 80021ac:	080035b1 	.word	0x080035b1
 80021b0:	3ff80000 	.word	0x3ff80000
 80021b4:	08003610 	.word	0x08003610
 80021b8:	080035e8 	.word	0x080035e8
 80021bc:	080035dd 	.word	0x080035dd
 80021c0:	07f1      	lsls	r1, r6, #31
 80021c2:	d508      	bpl.n	80021d6 <_dtoa_r+0x34e>
 80021c4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80021c8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80021cc:	f7fe fa1c 	bl	8000608 <__aeabi_dmul>
 80021d0:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80021d4:	3501      	adds	r5, #1
 80021d6:	1076      	asrs	r6, r6, #1
 80021d8:	3708      	adds	r7, #8
 80021da:	2e00      	cmp	r6, #0
 80021dc:	d1f0      	bne.n	80021c0 <_dtoa_r+0x338>
 80021de:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80021e2:	e9dd 0100 	ldrd	r0, r1, [sp]
 80021e6:	f7fe fb39 	bl	800085c <__aeabi_ddiv>
 80021ea:	e9cd 0100 	strd	r0, r1, [sp]
 80021ee:	e01a      	b.n	8002226 <_dtoa_r+0x39e>
 80021f0:	2502      	movs	r5, #2
 80021f2:	e7a3      	b.n	800213c <_dtoa_r+0x2b4>
 80021f4:	f000 80a0 	beq.w	8002338 <_dtoa_r+0x4b0>
 80021f8:	f1ca 0600 	rsb	r6, sl, #0
 80021fc:	4b9f      	ldr	r3, [pc, #636]	; (800247c <_dtoa_r+0x5f4>)
 80021fe:	4fa0      	ldr	r7, [pc, #640]	; (8002480 <_dtoa_r+0x5f8>)
 8002200:	f006 020f 	and.w	r2, r6, #15
 8002204:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002208:	e9d3 2300 	ldrd	r2, r3, [r3]
 800220c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002210:	f7fe f9fa 	bl	8000608 <__aeabi_dmul>
 8002214:	e9cd 0100 	strd	r0, r1, [sp]
 8002218:	1136      	asrs	r6, r6, #4
 800221a:	2300      	movs	r3, #0
 800221c:	2502      	movs	r5, #2
 800221e:	2e00      	cmp	r6, #0
 8002220:	d17f      	bne.n	8002322 <_dtoa_r+0x49a>
 8002222:	2b00      	cmp	r3, #0
 8002224:	d1e1      	bne.n	80021ea <_dtoa_r+0x362>
 8002226:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002228:	2b00      	cmp	r3, #0
 800222a:	f000 8087 	beq.w	800233c <_dtoa_r+0x4b4>
 800222e:	e9dd 6700 	ldrd	r6, r7, [sp]
 8002232:	2200      	movs	r2, #0
 8002234:	4b93      	ldr	r3, [pc, #588]	; (8002484 <_dtoa_r+0x5fc>)
 8002236:	4630      	mov	r0, r6
 8002238:	4639      	mov	r1, r7
 800223a:	f7fe fc57 	bl	8000aec <__aeabi_dcmplt>
 800223e:	2800      	cmp	r0, #0
 8002240:	d07c      	beq.n	800233c <_dtoa_r+0x4b4>
 8002242:	f1b9 0f00 	cmp.w	r9, #0
 8002246:	d079      	beq.n	800233c <_dtoa_r+0x4b4>
 8002248:	9b02      	ldr	r3, [sp, #8]
 800224a:	2b00      	cmp	r3, #0
 800224c:	dd35      	ble.n	80022ba <_dtoa_r+0x432>
 800224e:	f10a 33ff 	add.w	r3, sl, #4294967295
 8002252:	9308      	str	r3, [sp, #32]
 8002254:	4639      	mov	r1, r7
 8002256:	2200      	movs	r2, #0
 8002258:	4b8b      	ldr	r3, [pc, #556]	; (8002488 <_dtoa_r+0x600>)
 800225a:	4630      	mov	r0, r6
 800225c:	f7fe f9d4 	bl	8000608 <__aeabi_dmul>
 8002260:	e9cd 0100 	strd	r0, r1, [sp]
 8002264:	9f02      	ldr	r7, [sp, #8]
 8002266:	3501      	adds	r5, #1
 8002268:	4628      	mov	r0, r5
 800226a:	f7fe f963 	bl	8000534 <__aeabi_i2d>
 800226e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002272:	f7fe f9c9 	bl	8000608 <__aeabi_dmul>
 8002276:	2200      	movs	r2, #0
 8002278:	4b84      	ldr	r3, [pc, #528]	; (800248c <_dtoa_r+0x604>)
 800227a:	f7fe f80f 	bl	800029c <__adddf3>
 800227e:	4605      	mov	r5, r0
 8002280:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8002284:	2f00      	cmp	r7, #0
 8002286:	d15d      	bne.n	8002344 <_dtoa_r+0x4bc>
 8002288:	2200      	movs	r2, #0
 800228a:	4b81      	ldr	r3, [pc, #516]	; (8002490 <_dtoa_r+0x608>)
 800228c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002290:	f7fe f802 	bl	8000298 <__aeabi_dsub>
 8002294:	462a      	mov	r2, r5
 8002296:	4633      	mov	r3, r6
 8002298:	e9cd 0100 	strd	r0, r1, [sp]
 800229c:	f7fe fc44 	bl	8000b28 <__aeabi_dcmpgt>
 80022a0:	2800      	cmp	r0, #0
 80022a2:	f040 8288 	bne.w	80027b6 <_dtoa_r+0x92e>
 80022a6:	462a      	mov	r2, r5
 80022a8:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 80022ac:	e9dd 0100 	ldrd	r0, r1, [sp]
 80022b0:	f7fe fc1c 	bl	8000aec <__aeabi_dcmplt>
 80022b4:	2800      	cmp	r0, #0
 80022b6:	f040 827c 	bne.w	80027b2 <_dtoa_r+0x92a>
 80022ba:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80022be:	e9cd 2300 	strd	r2, r3, [sp]
 80022c2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	f2c0 8150 	blt.w	800256a <_dtoa_r+0x6e2>
 80022ca:	f1ba 0f0e 	cmp.w	sl, #14
 80022ce:	f300 814c 	bgt.w	800256a <_dtoa_r+0x6e2>
 80022d2:	4b6a      	ldr	r3, [pc, #424]	; (800247c <_dtoa_r+0x5f4>)
 80022d4:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80022d8:	ed93 7b00 	vldr	d7, [r3]
 80022dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80022de:	2b00      	cmp	r3, #0
 80022e0:	ed8d 7b02 	vstr	d7, [sp, #8]
 80022e4:	f280 80d8 	bge.w	8002498 <_dtoa_r+0x610>
 80022e8:	f1b9 0f00 	cmp.w	r9, #0
 80022ec:	f300 80d4 	bgt.w	8002498 <_dtoa_r+0x610>
 80022f0:	f040 825e 	bne.w	80027b0 <_dtoa_r+0x928>
 80022f4:	2200      	movs	r2, #0
 80022f6:	4b66      	ldr	r3, [pc, #408]	; (8002490 <_dtoa_r+0x608>)
 80022f8:	ec51 0b17 	vmov	r0, r1, d7
 80022fc:	f7fe f984 	bl	8000608 <__aeabi_dmul>
 8002300:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002304:	f7fe fc06 	bl	8000b14 <__aeabi_dcmpge>
 8002308:	464f      	mov	r7, r9
 800230a:	464e      	mov	r6, r9
 800230c:	2800      	cmp	r0, #0
 800230e:	f040 8234 	bne.w	800277a <_dtoa_r+0x8f2>
 8002312:	2331      	movs	r3, #49	; 0x31
 8002314:	f10b 0501 	add.w	r5, fp, #1
 8002318:	f88b 3000 	strb.w	r3, [fp]
 800231c:	f10a 0a01 	add.w	sl, sl, #1
 8002320:	e22f      	b.n	8002782 <_dtoa_r+0x8fa>
 8002322:	07f2      	lsls	r2, r6, #31
 8002324:	d505      	bpl.n	8002332 <_dtoa_r+0x4aa>
 8002326:	e9d7 2300 	ldrd	r2, r3, [r7]
 800232a:	f7fe f96d 	bl	8000608 <__aeabi_dmul>
 800232e:	3501      	adds	r5, #1
 8002330:	2301      	movs	r3, #1
 8002332:	1076      	asrs	r6, r6, #1
 8002334:	3708      	adds	r7, #8
 8002336:	e772      	b.n	800221e <_dtoa_r+0x396>
 8002338:	2502      	movs	r5, #2
 800233a:	e774      	b.n	8002226 <_dtoa_r+0x39e>
 800233c:	f8cd a020 	str.w	sl, [sp, #32]
 8002340:	464f      	mov	r7, r9
 8002342:	e791      	b.n	8002268 <_dtoa_r+0x3e0>
 8002344:	4b4d      	ldr	r3, [pc, #308]	; (800247c <_dtoa_r+0x5f4>)
 8002346:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800234a:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 800234e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002350:	2b00      	cmp	r3, #0
 8002352:	d047      	beq.n	80023e4 <_dtoa_r+0x55c>
 8002354:	4602      	mov	r2, r0
 8002356:	460b      	mov	r3, r1
 8002358:	2000      	movs	r0, #0
 800235a:	494e      	ldr	r1, [pc, #312]	; (8002494 <_dtoa_r+0x60c>)
 800235c:	f7fe fa7e 	bl	800085c <__aeabi_ddiv>
 8002360:	462a      	mov	r2, r5
 8002362:	4633      	mov	r3, r6
 8002364:	f7fd ff98 	bl	8000298 <__aeabi_dsub>
 8002368:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 800236c:	465d      	mov	r5, fp
 800236e:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002372:	f7fe fbf9 	bl	8000b68 <__aeabi_d2iz>
 8002376:	4606      	mov	r6, r0
 8002378:	f7fe f8dc 	bl	8000534 <__aeabi_i2d>
 800237c:	4602      	mov	r2, r0
 800237e:	460b      	mov	r3, r1
 8002380:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002384:	f7fd ff88 	bl	8000298 <__aeabi_dsub>
 8002388:	3630      	adds	r6, #48	; 0x30
 800238a:	f805 6b01 	strb.w	r6, [r5], #1
 800238e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8002392:	e9cd 0100 	strd	r0, r1, [sp]
 8002396:	f7fe fba9 	bl	8000aec <__aeabi_dcmplt>
 800239a:	2800      	cmp	r0, #0
 800239c:	d163      	bne.n	8002466 <_dtoa_r+0x5de>
 800239e:	e9dd 2300 	ldrd	r2, r3, [sp]
 80023a2:	2000      	movs	r0, #0
 80023a4:	4937      	ldr	r1, [pc, #220]	; (8002484 <_dtoa_r+0x5fc>)
 80023a6:	f7fd ff77 	bl	8000298 <__aeabi_dsub>
 80023aa:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80023ae:	f7fe fb9d 	bl	8000aec <__aeabi_dcmplt>
 80023b2:	2800      	cmp	r0, #0
 80023b4:	f040 80b7 	bne.w	8002526 <_dtoa_r+0x69e>
 80023b8:	eba5 030b 	sub.w	r3, r5, fp
 80023bc:	429f      	cmp	r7, r3
 80023be:	f77f af7c 	ble.w	80022ba <_dtoa_r+0x432>
 80023c2:	2200      	movs	r2, #0
 80023c4:	4b30      	ldr	r3, [pc, #192]	; (8002488 <_dtoa_r+0x600>)
 80023c6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80023ca:	f7fe f91d 	bl	8000608 <__aeabi_dmul>
 80023ce:	2200      	movs	r2, #0
 80023d0:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 80023d4:	4b2c      	ldr	r3, [pc, #176]	; (8002488 <_dtoa_r+0x600>)
 80023d6:	e9dd 0100 	ldrd	r0, r1, [sp]
 80023da:	f7fe f915 	bl	8000608 <__aeabi_dmul>
 80023de:	e9cd 0100 	strd	r0, r1, [sp]
 80023e2:	e7c4      	b.n	800236e <_dtoa_r+0x4e6>
 80023e4:	462a      	mov	r2, r5
 80023e6:	4633      	mov	r3, r6
 80023e8:	f7fe f90e 	bl	8000608 <__aeabi_dmul>
 80023ec:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 80023f0:	eb0b 0507 	add.w	r5, fp, r7
 80023f4:	465e      	mov	r6, fp
 80023f6:	e9dd 0100 	ldrd	r0, r1, [sp]
 80023fa:	f7fe fbb5 	bl	8000b68 <__aeabi_d2iz>
 80023fe:	4607      	mov	r7, r0
 8002400:	f7fe f898 	bl	8000534 <__aeabi_i2d>
 8002404:	3730      	adds	r7, #48	; 0x30
 8002406:	4602      	mov	r2, r0
 8002408:	460b      	mov	r3, r1
 800240a:	e9dd 0100 	ldrd	r0, r1, [sp]
 800240e:	f7fd ff43 	bl	8000298 <__aeabi_dsub>
 8002412:	f806 7b01 	strb.w	r7, [r6], #1
 8002416:	42ae      	cmp	r6, r5
 8002418:	e9cd 0100 	strd	r0, r1, [sp]
 800241c:	f04f 0200 	mov.w	r2, #0
 8002420:	d126      	bne.n	8002470 <_dtoa_r+0x5e8>
 8002422:	4b1c      	ldr	r3, [pc, #112]	; (8002494 <_dtoa_r+0x60c>)
 8002424:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002428:	f7fd ff38 	bl	800029c <__adddf3>
 800242c:	4602      	mov	r2, r0
 800242e:	460b      	mov	r3, r1
 8002430:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002434:	f7fe fb78 	bl	8000b28 <__aeabi_dcmpgt>
 8002438:	2800      	cmp	r0, #0
 800243a:	d174      	bne.n	8002526 <_dtoa_r+0x69e>
 800243c:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8002440:	2000      	movs	r0, #0
 8002442:	4914      	ldr	r1, [pc, #80]	; (8002494 <_dtoa_r+0x60c>)
 8002444:	f7fd ff28 	bl	8000298 <__aeabi_dsub>
 8002448:	4602      	mov	r2, r0
 800244a:	460b      	mov	r3, r1
 800244c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002450:	f7fe fb4c 	bl	8000aec <__aeabi_dcmplt>
 8002454:	2800      	cmp	r0, #0
 8002456:	f43f af30 	beq.w	80022ba <_dtoa_r+0x432>
 800245a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800245e:	2b30      	cmp	r3, #48	; 0x30
 8002460:	f105 32ff 	add.w	r2, r5, #4294967295
 8002464:	d002      	beq.n	800246c <_dtoa_r+0x5e4>
 8002466:	f8dd a020 	ldr.w	sl, [sp, #32]
 800246a:	e04a      	b.n	8002502 <_dtoa_r+0x67a>
 800246c:	4615      	mov	r5, r2
 800246e:	e7f4      	b.n	800245a <_dtoa_r+0x5d2>
 8002470:	4b05      	ldr	r3, [pc, #20]	; (8002488 <_dtoa_r+0x600>)
 8002472:	f7fe f8c9 	bl	8000608 <__aeabi_dmul>
 8002476:	e9cd 0100 	strd	r0, r1, [sp]
 800247a:	e7bc      	b.n	80023f6 <_dtoa_r+0x56e>
 800247c:	08003610 	.word	0x08003610
 8002480:	080035e8 	.word	0x080035e8
 8002484:	3ff00000 	.word	0x3ff00000
 8002488:	40240000 	.word	0x40240000
 800248c:	401c0000 	.word	0x401c0000
 8002490:	40140000 	.word	0x40140000
 8002494:	3fe00000 	.word	0x3fe00000
 8002498:	e9dd 6700 	ldrd	r6, r7, [sp]
 800249c:	465d      	mov	r5, fp
 800249e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80024a2:	4630      	mov	r0, r6
 80024a4:	4639      	mov	r1, r7
 80024a6:	f7fe f9d9 	bl	800085c <__aeabi_ddiv>
 80024aa:	f7fe fb5d 	bl	8000b68 <__aeabi_d2iz>
 80024ae:	4680      	mov	r8, r0
 80024b0:	f7fe f840 	bl	8000534 <__aeabi_i2d>
 80024b4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80024b8:	f7fe f8a6 	bl	8000608 <__aeabi_dmul>
 80024bc:	4602      	mov	r2, r0
 80024be:	460b      	mov	r3, r1
 80024c0:	4630      	mov	r0, r6
 80024c2:	4639      	mov	r1, r7
 80024c4:	f108 0630 	add.w	r6, r8, #48	; 0x30
 80024c8:	f7fd fee6 	bl	8000298 <__aeabi_dsub>
 80024cc:	f805 6b01 	strb.w	r6, [r5], #1
 80024d0:	eba5 060b 	sub.w	r6, r5, fp
 80024d4:	45b1      	cmp	r9, r6
 80024d6:	4602      	mov	r2, r0
 80024d8:	460b      	mov	r3, r1
 80024da:	d139      	bne.n	8002550 <_dtoa_r+0x6c8>
 80024dc:	f7fd fede 	bl	800029c <__adddf3>
 80024e0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80024e4:	4606      	mov	r6, r0
 80024e6:	460f      	mov	r7, r1
 80024e8:	f7fe fb1e 	bl	8000b28 <__aeabi_dcmpgt>
 80024ec:	b9c8      	cbnz	r0, 8002522 <_dtoa_r+0x69a>
 80024ee:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80024f2:	4630      	mov	r0, r6
 80024f4:	4639      	mov	r1, r7
 80024f6:	f7fe faef 	bl	8000ad8 <__aeabi_dcmpeq>
 80024fa:	b110      	cbz	r0, 8002502 <_dtoa_r+0x67a>
 80024fc:	f018 0f01 	tst.w	r8, #1
 8002500:	d10f      	bne.n	8002522 <_dtoa_r+0x69a>
 8002502:	9904      	ldr	r1, [sp, #16]
 8002504:	4620      	mov	r0, r4
 8002506:	f000 facc 	bl	8002aa2 <_Bfree>
 800250a:	2300      	movs	r3, #0
 800250c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800250e:	702b      	strb	r3, [r5, #0]
 8002510:	f10a 0301 	add.w	r3, sl, #1
 8002514:	6013      	str	r3, [r2, #0]
 8002516:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002518:	2b00      	cmp	r3, #0
 800251a:	f000 8241 	beq.w	80029a0 <_dtoa_r+0xb18>
 800251e:	601d      	str	r5, [r3, #0]
 8002520:	e23e      	b.n	80029a0 <_dtoa_r+0xb18>
 8002522:	f8cd a020 	str.w	sl, [sp, #32]
 8002526:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800252a:	2a39      	cmp	r2, #57	; 0x39
 800252c:	f105 33ff 	add.w	r3, r5, #4294967295
 8002530:	d108      	bne.n	8002544 <_dtoa_r+0x6bc>
 8002532:	459b      	cmp	fp, r3
 8002534:	d10a      	bne.n	800254c <_dtoa_r+0x6c4>
 8002536:	9b08      	ldr	r3, [sp, #32]
 8002538:	3301      	adds	r3, #1
 800253a:	9308      	str	r3, [sp, #32]
 800253c:	2330      	movs	r3, #48	; 0x30
 800253e:	f88b 3000 	strb.w	r3, [fp]
 8002542:	465b      	mov	r3, fp
 8002544:	781a      	ldrb	r2, [r3, #0]
 8002546:	3201      	adds	r2, #1
 8002548:	701a      	strb	r2, [r3, #0]
 800254a:	e78c      	b.n	8002466 <_dtoa_r+0x5de>
 800254c:	461d      	mov	r5, r3
 800254e:	e7ea      	b.n	8002526 <_dtoa_r+0x69e>
 8002550:	2200      	movs	r2, #0
 8002552:	4b9b      	ldr	r3, [pc, #620]	; (80027c0 <_dtoa_r+0x938>)
 8002554:	f7fe f858 	bl	8000608 <__aeabi_dmul>
 8002558:	2200      	movs	r2, #0
 800255a:	2300      	movs	r3, #0
 800255c:	4606      	mov	r6, r0
 800255e:	460f      	mov	r7, r1
 8002560:	f7fe faba 	bl	8000ad8 <__aeabi_dcmpeq>
 8002564:	2800      	cmp	r0, #0
 8002566:	d09a      	beq.n	800249e <_dtoa_r+0x616>
 8002568:	e7cb      	b.n	8002502 <_dtoa_r+0x67a>
 800256a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800256c:	2a00      	cmp	r2, #0
 800256e:	f000 808b 	beq.w	8002688 <_dtoa_r+0x800>
 8002572:	9a06      	ldr	r2, [sp, #24]
 8002574:	2a01      	cmp	r2, #1
 8002576:	dc6e      	bgt.n	8002656 <_dtoa_r+0x7ce>
 8002578:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800257a:	2a00      	cmp	r2, #0
 800257c:	d067      	beq.n	800264e <_dtoa_r+0x7c6>
 800257e:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8002582:	9f07      	ldr	r7, [sp, #28]
 8002584:	9d05      	ldr	r5, [sp, #20]
 8002586:	9a05      	ldr	r2, [sp, #20]
 8002588:	2101      	movs	r1, #1
 800258a:	441a      	add	r2, r3
 800258c:	4620      	mov	r0, r4
 800258e:	9205      	str	r2, [sp, #20]
 8002590:	4498      	add	r8, r3
 8002592:	f000 fb26 	bl	8002be2 <__i2b>
 8002596:	4606      	mov	r6, r0
 8002598:	2d00      	cmp	r5, #0
 800259a:	dd0c      	ble.n	80025b6 <_dtoa_r+0x72e>
 800259c:	f1b8 0f00 	cmp.w	r8, #0
 80025a0:	dd09      	ble.n	80025b6 <_dtoa_r+0x72e>
 80025a2:	4545      	cmp	r5, r8
 80025a4:	9a05      	ldr	r2, [sp, #20]
 80025a6:	462b      	mov	r3, r5
 80025a8:	bfa8      	it	ge
 80025aa:	4643      	movge	r3, r8
 80025ac:	1ad2      	subs	r2, r2, r3
 80025ae:	9205      	str	r2, [sp, #20]
 80025b0:	1aed      	subs	r5, r5, r3
 80025b2:	eba8 0803 	sub.w	r8, r8, r3
 80025b6:	9b07      	ldr	r3, [sp, #28]
 80025b8:	b1eb      	cbz	r3, 80025f6 <_dtoa_r+0x76e>
 80025ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80025bc:	2b00      	cmp	r3, #0
 80025be:	d067      	beq.n	8002690 <_dtoa_r+0x808>
 80025c0:	b18f      	cbz	r7, 80025e6 <_dtoa_r+0x75e>
 80025c2:	4631      	mov	r1, r6
 80025c4:	463a      	mov	r2, r7
 80025c6:	4620      	mov	r0, r4
 80025c8:	f000 fbaa 	bl	8002d20 <__pow5mult>
 80025cc:	9a04      	ldr	r2, [sp, #16]
 80025ce:	4601      	mov	r1, r0
 80025d0:	4606      	mov	r6, r0
 80025d2:	4620      	mov	r0, r4
 80025d4:	f000 fb0e 	bl	8002bf4 <__multiply>
 80025d8:	9904      	ldr	r1, [sp, #16]
 80025da:	9008      	str	r0, [sp, #32]
 80025dc:	4620      	mov	r0, r4
 80025de:	f000 fa60 	bl	8002aa2 <_Bfree>
 80025e2:	9b08      	ldr	r3, [sp, #32]
 80025e4:	9304      	str	r3, [sp, #16]
 80025e6:	9b07      	ldr	r3, [sp, #28]
 80025e8:	1bda      	subs	r2, r3, r7
 80025ea:	d004      	beq.n	80025f6 <_dtoa_r+0x76e>
 80025ec:	9904      	ldr	r1, [sp, #16]
 80025ee:	4620      	mov	r0, r4
 80025f0:	f000 fb96 	bl	8002d20 <__pow5mult>
 80025f4:	9004      	str	r0, [sp, #16]
 80025f6:	2101      	movs	r1, #1
 80025f8:	4620      	mov	r0, r4
 80025fa:	f000 faf2 	bl	8002be2 <__i2b>
 80025fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002600:	4607      	mov	r7, r0
 8002602:	2b00      	cmp	r3, #0
 8002604:	f000 81d0 	beq.w	80029a8 <_dtoa_r+0xb20>
 8002608:	461a      	mov	r2, r3
 800260a:	4601      	mov	r1, r0
 800260c:	4620      	mov	r0, r4
 800260e:	f000 fb87 	bl	8002d20 <__pow5mult>
 8002612:	9b06      	ldr	r3, [sp, #24]
 8002614:	2b01      	cmp	r3, #1
 8002616:	4607      	mov	r7, r0
 8002618:	dc40      	bgt.n	800269c <_dtoa_r+0x814>
 800261a:	9b00      	ldr	r3, [sp, #0]
 800261c:	2b00      	cmp	r3, #0
 800261e:	d139      	bne.n	8002694 <_dtoa_r+0x80c>
 8002620:	9b01      	ldr	r3, [sp, #4]
 8002622:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002626:	2b00      	cmp	r3, #0
 8002628:	d136      	bne.n	8002698 <_dtoa_r+0x810>
 800262a:	9b01      	ldr	r3, [sp, #4]
 800262c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002630:	0d1b      	lsrs	r3, r3, #20
 8002632:	051b      	lsls	r3, r3, #20
 8002634:	b12b      	cbz	r3, 8002642 <_dtoa_r+0x7ba>
 8002636:	9b05      	ldr	r3, [sp, #20]
 8002638:	3301      	adds	r3, #1
 800263a:	9305      	str	r3, [sp, #20]
 800263c:	f108 0801 	add.w	r8, r8, #1
 8002640:	2301      	movs	r3, #1
 8002642:	9307      	str	r3, [sp, #28]
 8002644:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002646:	2b00      	cmp	r3, #0
 8002648:	d12a      	bne.n	80026a0 <_dtoa_r+0x818>
 800264a:	2001      	movs	r0, #1
 800264c:	e030      	b.n	80026b0 <_dtoa_r+0x828>
 800264e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8002650:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002654:	e795      	b.n	8002582 <_dtoa_r+0x6fa>
 8002656:	9b07      	ldr	r3, [sp, #28]
 8002658:	f109 37ff 	add.w	r7, r9, #4294967295
 800265c:	42bb      	cmp	r3, r7
 800265e:	bfbf      	itttt	lt
 8002660:	9b07      	ldrlt	r3, [sp, #28]
 8002662:	9707      	strlt	r7, [sp, #28]
 8002664:	1afa      	sublt	r2, r7, r3
 8002666:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8002668:	bfbb      	ittet	lt
 800266a:	189b      	addlt	r3, r3, r2
 800266c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800266e:	1bdf      	subge	r7, r3, r7
 8002670:	2700      	movlt	r7, #0
 8002672:	f1b9 0f00 	cmp.w	r9, #0
 8002676:	bfb5      	itete	lt
 8002678:	9b05      	ldrlt	r3, [sp, #20]
 800267a:	9d05      	ldrge	r5, [sp, #20]
 800267c:	eba3 0509 	sublt.w	r5, r3, r9
 8002680:	464b      	movge	r3, r9
 8002682:	bfb8      	it	lt
 8002684:	2300      	movlt	r3, #0
 8002686:	e77e      	b.n	8002586 <_dtoa_r+0x6fe>
 8002688:	9f07      	ldr	r7, [sp, #28]
 800268a:	9d05      	ldr	r5, [sp, #20]
 800268c:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800268e:	e783      	b.n	8002598 <_dtoa_r+0x710>
 8002690:	9a07      	ldr	r2, [sp, #28]
 8002692:	e7ab      	b.n	80025ec <_dtoa_r+0x764>
 8002694:	2300      	movs	r3, #0
 8002696:	e7d4      	b.n	8002642 <_dtoa_r+0x7ba>
 8002698:	9b00      	ldr	r3, [sp, #0]
 800269a:	e7d2      	b.n	8002642 <_dtoa_r+0x7ba>
 800269c:	2300      	movs	r3, #0
 800269e:	9307      	str	r3, [sp, #28]
 80026a0:	693b      	ldr	r3, [r7, #16]
 80026a2:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 80026a6:	6918      	ldr	r0, [r3, #16]
 80026a8:	f000 fa4d 	bl	8002b46 <__hi0bits>
 80026ac:	f1c0 0020 	rsb	r0, r0, #32
 80026b0:	4440      	add	r0, r8
 80026b2:	f010 001f 	ands.w	r0, r0, #31
 80026b6:	d047      	beq.n	8002748 <_dtoa_r+0x8c0>
 80026b8:	f1c0 0320 	rsb	r3, r0, #32
 80026bc:	2b04      	cmp	r3, #4
 80026be:	dd3b      	ble.n	8002738 <_dtoa_r+0x8b0>
 80026c0:	9b05      	ldr	r3, [sp, #20]
 80026c2:	f1c0 001c 	rsb	r0, r0, #28
 80026c6:	4403      	add	r3, r0
 80026c8:	9305      	str	r3, [sp, #20]
 80026ca:	4405      	add	r5, r0
 80026cc:	4480      	add	r8, r0
 80026ce:	9b05      	ldr	r3, [sp, #20]
 80026d0:	2b00      	cmp	r3, #0
 80026d2:	dd05      	ble.n	80026e0 <_dtoa_r+0x858>
 80026d4:	461a      	mov	r2, r3
 80026d6:	9904      	ldr	r1, [sp, #16]
 80026d8:	4620      	mov	r0, r4
 80026da:	f000 fb6f 	bl	8002dbc <__lshift>
 80026de:	9004      	str	r0, [sp, #16]
 80026e0:	f1b8 0f00 	cmp.w	r8, #0
 80026e4:	dd05      	ble.n	80026f2 <_dtoa_r+0x86a>
 80026e6:	4639      	mov	r1, r7
 80026e8:	4642      	mov	r2, r8
 80026ea:	4620      	mov	r0, r4
 80026ec:	f000 fb66 	bl	8002dbc <__lshift>
 80026f0:	4607      	mov	r7, r0
 80026f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80026f4:	b353      	cbz	r3, 800274c <_dtoa_r+0x8c4>
 80026f6:	4639      	mov	r1, r7
 80026f8:	9804      	ldr	r0, [sp, #16]
 80026fa:	f000 fbb3 	bl	8002e64 <__mcmp>
 80026fe:	2800      	cmp	r0, #0
 8002700:	da24      	bge.n	800274c <_dtoa_r+0x8c4>
 8002702:	2300      	movs	r3, #0
 8002704:	220a      	movs	r2, #10
 8002706:	9904      	ldr	r1, [sp, #16]
 8002708:	4620      	mov	r0, r4
 800270a:	f000 f9e1 	bl	8002ad0 <__multadd>
 800270e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002710:	9004      	str	r0, [sp, #16]
 8002712:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002716:	2b00      	cmp	r3, #0
 8002718:	f000 814d 	beq.w	80029b6 <_dtoa_r+0xb2e>
 800271c:	2300      	movs	r3, #0
 800271e:	4631      	mov	r1, r6
 8002720:	220a      	movs	r2, #10
 8002722:	4620      	mov	r0, r4
 8002724:	f000 f9d4 	bl	8002ad0 <__multadd>
 8002728:	9b02      	ldr	r3, [sp, #8]
 800272a:	2b00      	cmp	r3, #0
 800272c:	4606      	mov	r6, r0
 800272e:	dc4f      	bgt.n	80027d0 <_dtoa_r+0x948>
 8002730:	9b06      	ldr	r3, [sp, #24]
 8002732:	2b02      	cmp	r3, #2
 8002734:	dd4c      	ble.n	80027d0 <_dtoa_r+0x948>
 8002736:	e011      	b.n	800275c <_dtoa_r+0x8d4>
 8002738:	d0c9      	beq.n	80026ce <_dtoa_r+0x846>
 800273a:	9a05      	ldr	r2, [sp, #20]
 800273c:	331c      	adds	r3, #28
 800273e:	441a      	add	r2, r3
 8002740:	9205      	str	r2, [sp, #20]
 8002742:	441d      	add	r5, r3
 8002744:	4498      	add	r8, r3
 8002746:	e7c2      	b.n	80026ce <_dtoa_r+0x846>
 8002748:	4603      	mov	r3, r0
 800274a:	e7f6      	b.n	800273a <_dtoa_r+0x8b2>
 800274c:	f1b9 0f00 	cmp.w	r9, #0
 8002750:	dc38      	bgt.n	80027c4 <_dtoa_r+0x93c>
 8002752:	9b06      	ldr	r3, [sp, #24]
 8002754:	2b02      	cmp	r3, #2
 8002756:	dd35      	ble.n	80027c4 <_dtoa_r+0x93c>
 8002758:	f8cd 9008 	str.w	r9, [sp, #8]
 800275c:	9b02      	ldr	r3, [sp, #8]
 800275e:	b963      	cbnz	r3, 800277a <_dtoa_r+0x8f2>
 8002760:	4639      	mov	r1, r7
 8002762:	2205      	movs	r2, #5
 8002764:	4620      	mov	r0, r4
 8002766:	f000 f9b3 	bl	8002ad0 <__multadd>
 800276a:	4601      	mov	r1, r0
 800276c:	4607      	mov	r7, r0
 800276e:	9804      	ldr	r0, [sp, #16]
 8002770:	f000 fb78 	bl	8002e64 <__mcmp>
 8002774:	2800      	cmp	r0, #0
 8002776:	f73f adcc 	bgt.w	8002312 <_dtoa_r+0x48a>
 800277a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800277c:	465d      	mov	r5, fp
 800277e:	ea6f 0a03 	mvn.w	sl, r3
 8002782:	f04f 0900 	mov.w	r9, #0
 8002786:	4639      	mov	r1, r7
 8002788:	4620      	mov	r0, r4
 800278a:	f000 f98a 	bl	8002aa2 <_Bfree>
 800278e:	2e00      	cmp	r6, #0
 8002790:	f43f aeb7 	beq.w	8002502 <_dtoa_r+0x67a>
 8002794:	f1b9 0f00 	cmp.w	r9, #0
 8002798:	d005      	beq.n	80027a6 <_dtoa_r+0x91e>
 800279a:	45b1      	cmp	r9, r6
 800279c:	d003      	beq.n	80027a6 <_dtoa_r+0x91e>
 800279e:	4649      	mov	r1, r9
 80027a0:	4620      	mov	r0, r4
 80027a2:	f000 f97e 	bl	8002aa2 <_Bfree>
 80027a6:	4631      	mov	r1, r6
 80027a8:	4620      	mov	r0, r4
 80027aa:	f000 f97a 	bl	8002aa2 <_Bfree>
 80027ae:	e6a8      	b.n	8002502 <_dtoa_r+0x67a>
 80027b0:	2700      	movs	r7, #0
 80027b2:	463e      	mov	r6, r7
 80027b4:	e7e1      	b.n	800277a <_dtoa_r+0x8f2>
 80027b6:	f8dd a020 	ldr.w	sl, [sp, #32]
 80027ba:	463e      	mov	r6, r7
 80027bc:	e5a9      	b.n	8002312 <_dtoa_r+0x48a>
 80027be:	bf00      	nop
 80027c0:	40240000 	.word	0x40240000
 80027c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80027c6:	f8cd 9008 	str.w	r9, [sp, #8]
 80027ca:	2b00      	cmp	r3, #0
 80027cc:	f000 80fa 	beq.w	80029c4 <_dtoa_r+0xb3c>
 80027d0:	2d00      	cmp	r5, #0
 80027d2:	dd05      	ble.n	80027e0 <_dtoa_r+0x958>
 80027d4:	4631      	mov	r1, r6
 80027d6:	462a      	mov	r2, r5
 80027d8:	4620      	mov	r0, r4
 80027da:	f000 faef 	bl	8002dbc <__lshift>
 80027de:	4606      	mov	r6, r0
 80027e0:	9b07      	ldr	r3, [sp, #28]
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	d04c      	beq.n	8002880 <_dtoa_r+0x9f8>
 80027e6:	6871      	ldr	r1, [r6, #4]
 80027e8:	4620      	mov	r0, r4
 80027ea:	f000 f926 	bl	8002a3a <_Balloc>
 80027ee:	6932      	ldr	r2, [r6, #16]
 80027f0:	3202      	adds	r2, #2
 80027f2:	4605      	mov	r5, r0
 80027f4:	0092      	lsls	r2, r2, #2
 80027f6:	f106 010c 	add.w	r1, r6, #12
 80027fa:	300c      	adds	r0, #12
 80027fc:	f000 f912 	bl	8002a24 <memcpy>
 8002800:	2201      	movs	r2, #1
 8002802:	4629      	mov	r1, r5
 8002804:	4620      	mov	r0, r4
 8002806:	f000 fad9 	bl	8002dbc <__lshift>
 800280a:	9b00      	ldr	r3, [sp, #0]
 800280c:	f8cd b014 	str.w	fp, [sp, #20]
 8002810:	f003 0301 	and.w	r3, r3, #1
 8002814:	46b1      	mov	r9, r6
 8002816:	9307      	str	r3, [sp, #28]
 8002818:	4606      	mov	r6, r0
 800281a:	4639      	mov	r1, r7
 800281c:	9804      	ldr	r0, [sp, #16]
 800281e:	f7ff faa5 	bl	8001d6c <quorem>
 8002822:	4649      	mov	r1, r9
 8002824:	4605      	mov	r5, r0
 8002826:	f100 0830 	add.w	r8, r0, #48	; 0x30
 800282a:	9804      	ldr	r0, [sp, #16]
 800282c:	f000 fb1a 	bl	8002e64 <__mcmp>
 8002830:	4632      	mov	r2, r6
 8002832:	9000      	str	r0, [sp, #0]
 8002834:	4639      	mov	r1, r7
 8002836:	4620      	mov	r0, r4
 8002838:	f000 fb2e 	bl	8002e98 <__mdiff>
 800283c:	68c3      	ldr	r3, [r0, #12]
 800283e:	4602      	mov	r2, r0
 8002840:	bb03      	cbnz	r3, 8002884 <_dtoa_r+0x9fc>
 8002842:	4601      	mov	r1, r0
 8002844:	9008      	str	r0, [sp, #32]
 8002846:	9804      	ldr	r0, [sp, #16]
 8002848:	f000 fb0c 	bl	8002e64 <__mcmp>
 800284c:	9a08      	ldr	r2, [sp, #32]
 800284e:	4603      	mov	r3, r0
 8002850:	4611      	mov	r1, r2
 8002852:	4620      	mov	r0, r4
 8002854:	9308      	str	r3, [sp, #32]
 8002856:	f000 f924 	bl	8002aa2 <_Bfree>
 800285a:	9b08      	ldr	r3, [sp, #32]
 800285c:	b9a3      	cbnz	r3, 8002888 <_dtoa_r+0xa00>
 800285e:	9a06      	ldr	r2, [sp, #24]
 8002860:	b992      	cbnz	r2, 8002888 <_dtoa_r+0xa00>
 8002862:	9a07      	ldr	r2, [sp, #28]
 8002864:	b982      	cbnz	r2, 8002888 <_dtoa_r+0xa00>
 8002866:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 800286a:	d029      	beq.n	80028c0 <_dtoa_r+0xa38>
 800286c:	9b00      	ldr	r3, [sp, #0]
 800286e:	2b00      	cmp	r3, #0
 8002870:	dd01      	ble.n	8002876 <_dtoa_r+0x9ee>
 8002872:	f105 0831 	add.w	r8, r5, #49	; 0x31
 8002876:	9b05      	ldr	r3, [sp, #20]
 8002878:	1c5d      	adds	r5, r3, #1
 800287a:	f883 8000 	strb.w	r8, [r3]
 800287e:	e782      	b.n	8002786 <_dtoa_r+0x8fe>
 8002880:	4630      	mov	r0, r6
 8002882:	e7c2      	b.n	800280a <_dtoa_r+0x982>
 8002884:	2301      	movs	r3, #1
 8002886:	e7e3      	b.n	8002850 <_dtoa_r+0x9c8>
 8002888:	9a00      	ldr	r2, [sp, #0]
 800288a:	2a00      	cmp	r2, #0
 800288c:	db04      	blt.n	8002898 <_dtoa_r+0xa10>
 800288e:	d125      	bne.n	80028dc <_dtoa_r+0xa54>
 8002890:	9a06      	ldr	r2, [sp, #24]
 8002892:	bb1a      	cbnz	r2, 80028dc <_dtoa_r+0xa54>
 8002894:	9a07      	ldr	r2, [sp, #28]
 8002896:	bb0a      	cbnz	r2, 80028dc <_dtoa_r+0xa54>
 8002898:	2b00      	cmp	r3, #0
 800289a:	ddec      	ble.n	8002876 <_dtoa_r+0x9ee>
 800289c:	2201      	movs	r2, #1
 800289e:	9904      	ldr	r1, [sp, #16]
 80028a0:	4620      	mov	r0, r4
 80028a2:	f000 fa8b 	bl	8002dbc <__lshift>
 80028a6:	4639      	mov	r1, r7
 80028a8:	9004      	str	r0, [sp, #16]
 80028aa:	f000 fadb 	bl	8002e64 <__mcmp>
 80028ae:	2800      	cmp	r0, #0
 80028b0:	dc03      	bgt.n	80028ba <_dtoa_r+0xa32>
 80028b2:	d1e0      	bne.n	8002876 <_dtoa_r+0x9ee>
 80028b4:	f018 0f01 	tst.w	r8, #1
 80028b8:	d0dd      	beq.n	8002876 <_dtoa_r+0x9ee>
 80028ba:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80028be:	d1d8      	bne.n	8002872 <_dtoa_r+0x9ea>
 80028c0:	9b05      	ldr	r3, [sp, #20]
 80028c2:	9a05      	ldr	r2, [sp, #20]
 80028c4:	1c5d      	adds	r5, r3, #1
 80028c6:	2339      	movs	r3, #57	; 0x39
 80028c8:	7013      	strb	r3, [r2, #0]
 80028ca:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80028ce:	2b39      	cmp	r3, #57	; 0x39
 80028d0:	f105 32ff 	add.w	r2, r5, #4294967295
 80028d4:	d04f      	beq.n	8002976 <_dtoa_r+0xaee>
 80028d6:	3301      	adds	r3, #1
 80028d8:	7013      	strb	r3, [r2, #0]
 80028da:	e754      	b.n	8002786 <_dtoa_r+0x8fe>
 80028dc:	9a05      	ldr	r2, [sp, #20]
 80028de:	2b00      	cmp	r3, #0
 80028e0:	f102 0501 	add.w	r5, r2, #1
 80028e4:	dd06      	ble.n	80028f4 <_dtoa_r+0xa6c>
 80028e6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80028ea:	d0e9      	beq.n	80028c0 <_dtoa_r+0xa38>
 80028ec:	f108 0801 	add.w	r8, r8, #1
 80028f0:	9b05      	ldr	r3, [sp, #20]
 80028f2:	e7c2      	b.n	800287a <_dtoa_r+0x9f2>
 80028f4:	9a02      	ldr	r2, [sp, #8]
 80028f6:	f805 8c01 	strb.w	r8, [r5, #-1]
 80028fa:	eba5 030b 	sub.w	r3, r5, fp
 80028fe:	4293      	cmp	r3, r2
 8002900:	d021      	beq.n	8002946 <_dtoa_r+0xabe>
 8002902:	2300      	movs	r3, #0
 8002904:	220a      	movs	r2, #10
 8002906:	9904      	ldr	r1, [sp, #16]
 8002908:	4620      	mov	r0, r4
 800290a:	f000 f8e1 	bl	8002ad0 <__multadd>
 800290e:	45b1      	cmp	r9, r6
 8002910:	9004      	str	r0, [sp, #16]
 8002912:	f04f 0300 	mov.w	r3, #0
 8002916:	f04f 020a 	mov.w	r2, #10
 800291a:	4649      	mov	r1, r9
 800291c:	4620      	mov	r0, r4
 800291e:	d105      	bne.n	800292c <_dtoa_r+0xaa4>
 8002920:	f000 f8d6 	bl	8002ad0 <__multadd>
 8002924:	4681      	mov	r9, r0
 8002926:	4606      	mov	r6, r0
 8002928:	9505      	str	r5, [sp, #20]
 800292a:	e776      	b.n	800281a <_dtoa_r+0x992>
 800292c:	f000 f8d0 	bl	8002ad0 <__multadd>
 8002930:	4631      	mov	r1, r6
 8002932:	4681      	mov	r9, r0
 8002934:	2300      	movs	r3, #0
 8002936:	220a      	movs	r2, #10
 8002938:	4620      	mov	r0, r4
 800293a:	f000 f8c9 	bl	8002ad0 <__multadd>
 800293e:	4606      	mov	r6, r0
 8002940:	e7f2      	b.n	8002928 <_dtoa_r+0xaa0>
 8002942:	f04f 0900 	mov.w	r9, #0
 8002946:	2201      	movs	r2, #1
 8002948:	9904      	ldr	r1, [sp, #16]
 800294a:	4620      	mov	r0, r4
 800294c:	f000 fa36 	bl	8002dbc <__lshift>
 8002950:	4639      	mov	r1, r7
 8002952:	9004      	str	r0, [sp, #16]
 8002954:	f000 fa86 	bl	8002e64 <__mcmp>
 8002958:	2800      	cmp	r0, #0
 800295a:	dcb6      	bgt.n	80028ca <_dtoa_r+0xa42>
 800295c:	d102      	bne.n	8002964 <_dtoa_r+0xadc>
 800295e:	f018 0f01 	tst.w	r8, #1
 8002962:	d1b2      	bne.n	80028ca <_dtoa_r+0xa42>
 8002964:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002968:	2b30      	cmp	r3, #48	; 0x30
 800296a:	f105 32ff 	add.w	r2, r5, #4294967295
 800296e:	f47f af0a 	bne.w	8002786 <_dtoa_r+0x8fe>
 8002972:	4615      	mov	r5, r2
 8002974:	e7f6      	b.n	8002964 <_dtoa_r+0xadc>
 8002976:	4593      	cmp	fp, r2
 8002978:	d105      	bne.n	8002986 <_dtoa_r+0xafe>
 800297a:	2331      	movs	r3, #49	; 0x31
 800297c:	f10a 0a01 	add.w	sl, sl, #1
 8002980:	f88b 3000 	strb.w	r3, [fp]
 8002984:	e6ff      	b.n	8002786 <_dtoa_r+0x8fe>
 8002986:	4615      	mov	r5, r2
 8002988:	e79f      	b.n	80028ca <_dtoa_r+0xa42>
 800298a:	f8df b064 	ldr.w	fp, [pc, #100]	; 80029f0 <_dtoa_r+0xb68>
 800298e:	e007      	b.n	80029a0 <_dtoa_r+0xb18>
 8002990:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002992:	f8df b060 	ldr.w	fp, [pc, #96]	; 80029f4 <_dtoa_r+0xb6c>
 8002996:	b11b      	cbz	r3, 80029a0 <_dtoa_r+0xb18>
 8002998:	f10b 0308 	add.w	r3, fp, #8
 800299c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800299e:	6013      	str	r3, [r2, #0]
 80029a0:	4658      	mov	r0, fp
 80029a2:	b017      	add	sp, #92	; 0x5c
 80029a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80029a8:	9b06      	ldr	r3, [sp, #24]
 80029aa:	2b01      	cmp	r3, #1
 80029ac:	f77f ae35 	ble.w	800261a <_dtoa_r+0x792>
 80029b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80029b2:	9307      	str	r3, [sp, #28]
 80029b4:	e649      	b.n	800264a <_dtoa_r+0x7c2>
 80029b6:	9b02      	ldr	r3, [sp, #8]
 80029b8:	2b00      	cmp	r3, #0
 80029ba:	dc03      	bgt.n	80029c4 <_dtoa_r+0xb3c>
 80029bc:	9b06      	ldr	r3, [sp, #24]
 80029be:	2b02      	cmp	r3, #2
 80029c0:	f73f aecc 	bgt.w	800275c <_dtoa_r+0x8d4>
 80029c4:	465d      	mov	r5, fp
 80029c6:	4639      	mov	r1, r7
 80029c8:	9804      	ldr	r0, [sp, #16]
 80029ca:	f7ff f9cf 	bl	8001d6c <quorem>
 80029ce:	f100 0830 	add.w	r8, r0, #48	; 0x30
 80029d2:	f805 8b01 	strb.w	r8, [r5], #1
 80029d6:	9a02      	ldr	r2, [sp, #8]
 80029d8:	eba5 030b 	sub.w	r3, r5, fp
 80029dc:	429a      	cmp	r2, r3
 80029de:	ddb0      	ble.n	8002942 <_dtoa_r+0xaba>
 80029e0:	2300      	movs	r3, #0
 80029e2:	220a      	movs	r2, #10
 80029e4:	9904      	ldr	r1, [sp, #16]
 80029e6:	4620      	mov	r0, r4
 80029e8:	f000 f872 	bl	8002ad0 <__multadd>
 80029ec:	9004      	str	r0, [sp, #16]
 80029ee:	e7ea      	b.n	80029c6 <_dtoa_r+0xb3e>
 80029f0:	080035b0 	.word	0x080035b0
 80029f4:	080035d4 	.word	0x080035d4

080029f8 <_localeconv_r>:
 80029f8:	4b04      	ldr	r3, [pc, #16]	; (8002a0c <_localeconv_r+0x14>)
 80029fa:	681b      	ldr	r3, [r3, #0]
 80029fc:	6a18      	ldr	r0, [r3, #32]
 80029fe:	4b04      	ldr	r3, [pc, #16]	; (8002a10 <_localeconv_r+0x18>)
 8002a00:	2800      	cmp	r0, #0
 8002a02:	bf08      	it	eq
 8002a04:	4618      	moveq	r0, r3
 8002a06:	30f0      	adds	r0, #240	; 0xf0
 8002a08:	4770      	bx	lr
 8002a0a:	bf00      	nop
 8002a0c:	20000004 	.word	0x20000004
 8002a10:	20000068 	.word	0x20000068

08002a14 <malloc>:
 8002a14:	4b02      	ldr	r3, [pc, #8]	; (8002a20 <malloc+0xc>)
 8002a16:	4601      	mov	r1, r0
 8002a18:	6818      	ldr	r0, [r3, #0]
 8002a1a:	f000 bb45 	b.w	80030a8 <_malloc_r>
 8002a1e:	bf00      	nop
 8002a20:	20000004 	.word	0x20000004

08002a24 <memcpy>:
 8002a24:	b510      	push	{r4, lr}
 8002a26:	1e43      	subs	r3, r0, #1
 8002a28:	440a      	add	r2, r1
 8002a2a:	4291      	cmp	r1, r2
 8002a2c:	d100      	bne.n	8002a30 <memcpy+0xc>
 8002a2e:	bd10      	pop	{r4, pc}
 8002a30:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002a34:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002a38:	e7f7      	b.n	8002a2a <memcpy+0x6>

08002a3a <_Balloc>:
 8002a3a:	b570      	push	{r4, r5, r6, lr}
 8002a3c:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8002a3e:	4604      	mov	r4, r0
 8002a40:	460e      	mov	r6, r1
 8002a42:	b93d      	cbnz	r5, 8002a54 <_Balloc+0x1a>
 8002a44:	2010      	movs	r0, #16
 8002a46:	f7ff ffe5 	bl	8002a14 <malloc>
 8002a4a:	6260      	str	r0, [r4, #36]	; 0x24
 8002a4c:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002a50:	6005      	str	r5, [r0, #0]
 8002a52:	60c5      	str	r5, [r0, #12]
 8002a54:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8002a56:	68eb      	ldr	r3, [r5, #12]
 8002a58:	b183      	cbz	r3, 8002a7c <_Balloc+0x42>
 8002a5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002a5c:	68db      	ldr	r3, [r3, #12]
 8002a5e:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8002a62:	b9b8      	cbnz	r0, 8002a94 <_Balloc+0x5a>
 8002a64:	2101      	movs	r1, #1
 8002a66:	fa01 f506 	lsl.w	r5, r1, r6
 8002a6a:	1d6a      	adds	r2, r5, #5
 8002a6c:	0092      	lsls	r2, r2, #2
 8002a6e:	4620      	mov	r0, r4
 8002a70:	f000 fabe 	bl	8002ff0 <_calloc_r>
 8002a74:	b160      	cbz	r0, 8002a90 <_Balloc+0x56>
 8002a76:	e9c0 6501 	strd	r6, r5, [r0, #4]
 8002a7a:	e00e      	b.n	8002a9a <_Balloc+0x60>
 8002a7c:	2221      	movs	r2, #33	; 0x21
 8002a7e:	2104      	movs	r1, #4
 8002a80:	4620      	mov	r0, r4
 8002a82:	f000 fab5 	bl	8002ff0 <_calloc_r>
 8002a86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002a88:	60e8      	str	r0, [r5, #12]
 8002a8a:	68db      	ldr	r3, [r3, #12]
 8002a8c:	2b00      	cmp	r3, #0
 8002a8e:	d1e4      	bne.n	8002a5a <_Balloc+0x20>
 8002a90:	2000      	movs	r0, #0
 8002a92:	bd70      	pop	{r4, r5, r6, pc}
 8002a94:	6802      	ldr	r2, [r0, #0]
 8002a96:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8002a9a:	2300      	movs	r3, #0
 8002a9c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002aa0:	e7f7      	b.n	8002a92 <_Balloc+0x58>

08002aa2 <_Bfree>:
 8002aa2:	b570      	push	{r4, r5, r6, lr}
 8002aa4:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8002aa6:	4606      	mov	r6, r0
 8002aa8:	460d      	mov	r5, r1
 8002aaa:	b93c      	cbnz	r4, 8002abc <_Bfree+0x1a>
 8002aac:	2010      	movs	r0, #16
 8002aae:	f7ff ffb1 	bl	8002a14 <malloc>
 8002ab2:	6270      	str	r0, [r6, #36]	; 0x24
 8002ab4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8002ab8:	6004      	str	r4, [r0, #0]
 8002aba:	60c4      	str	r4, [r0, #12]
 8002abc:	b13d      	cbz	r5, 8002ace <_Bfree+0x2c>
 8002abe:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8002ac0:	686a      	ldr	r2, [r5, #4]
 8002ac2:	68db      	ldr	r3, [r3, #12]
 8002ac4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8002ac8:	6029      	str	r1, [r5, #0]
 8002aca:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8002ace:	bd70      	pop	{r4, r5, r6, pc}

08002ad0 <__multadd>:
 8002ad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ad4:	690d      	ldr	r5, [r1, #16]
 8002ad6:	461f      	mov	r7, r3
 8002ad8:	4606      	mov	r6, r0
 8002ada:	460c      	mov	r4, r1
 8002adc:	f101 0c14 	add.w	ip, r1, #20
 8002ae0:	2300      	movs	r3, #0
 8002ae2:	f8dc 0000 	ldr.w	r0, [ip]
 8002ae6:	b281      	uxth	r1, r0
 8002ae8:	fb02 7101 	mla	r1, r2, r1, r7
 8002aec:	0c0f      	lsrs	r7, r1, #16
 8002aee:	0c00      	lsrs	r0, r0, #16
 8002af0:	fb02 7000 	mla	r0, r2, r0, r7
 8002af4:	b289      	uxth	r1, r1
 8002af6:	3301      	adds	r3, #1
 8002af8:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8002afc:	429d      	cmp	r5, r3
 8002afe:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8002b02:	f84c 1b04 	str.w	r1, [ip], #4
 8002b06:	dcec      	bgt.n	8002ae2 <__multadd+0x12>
 8002b08:	b1d7      	cbz	r7, 8002b40 <__multadd+0x70>
 8002b0a:	68a3      	ldr	r3, [r4, #8]
 8002b0c:	42ab      	cmp	r3, r5
 8002b0e:	dc12      	bgt.n	8002b36 <__multadd+0x66>
 8002b10:	6861      	ldr	r1, [r4, #4]
 8002b12:	4630      	mov	r0, r6
 8002b14:	3101      	adds	r1, #1
 8002b16:	f7ff ff90 	bl	8002a3a <_Balloc>
 8002b1a:	6922      	ldr	r2, [r4, #16]
 8002b1c:	3202      	adds	r2, #2
 8002b1e:	f104 010c 	add.w	r1, r4, #12
 8002b22:	4680      	mov	r8, r0
 8002b24:	0092      	lsls	r2, r2, #2
 8002b26:	300c      	adds	r0, #12
 8002b28:	f7ff ff7c 	bl	8002a24 <memcpy>
 8002b2c:	4621      	mov	r1, r4
 8002b2e:	4630      	mov	r0, r6
 8002b30:	f7ff ffb7 	bl	8002aa2 <_Bfree>
 8002b34:	4644      	mov	r4, r8
 8002b36:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8002b3a:	3501      	adds	r5, #1
 8002b3c:	615f      	str	r7, [r3, #20]
 8002b3e:	6125      	str	r5, [r4, #16]
 8002b40:	4620      	mov	r0, r4
 8002b42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002b46 <__hi0bits>:
 8002b46:	0c02      	lsrs	r2, r0, #16
 8002b48:	0412      	lsls	r2, r2, #16
 8002b4a:	4603      	mov	r3, r0
 8002b4c:	b9b2      	cbnz	r2, 8002b7c <__hi0bits+0x36>
 8002b4e:	0403      	lsls	r3, r0, #16
 8002b50:	2010      	movs	r0, #16
 8002b52:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8002b56:	bf04      	itt	eq
 8002b58:	021b      	lsleq	r3, r3, #8
 8002b5a:	3008      	addeq	r0, #8
 8002b5c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8002b60:	bf04      	itt	eq
 8002b62:	011b      	lsleq	r3, r3, #4
 8002b64:	3004      	addeq	r0, #4
 8002b66:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8002b6a:	bf04      	itt	eq
 8002b6c:	009b      	lsleq	r3, r3, #2
 8002b6e:	3002      	addeq	r0, #2
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	db06      	blt.n	8002b82 <__hi0bits+0x3c>
 8002b74:	005b      	lsls	r3, r3, #1
 8002b76:	d503      	bpl.n	8002b80 <__hi0bits+0x3a>
 8002b78:	3001      	adds	r0, #1
 8002b7a:	4770      	bx	lr
 8002b7c:	2000      	movs	r0, #0
 8002b7e:	e7e8      	b.n	8002b52 <__hi0bits+0xc>
 8002b80:	2020      	movs	r0, #32
 8002b82:	4770      	bx	lr

08002b84 <__lo0bits>:
 8002b84:	6803      	ldr	r3, [r0, #0]
 8002b86:	f013 0207 	ands.w	r2, r3, #7
 8002b8a:	4601      	mov	r1, r0
 8002b8c:	d00b      	beq.n	8002ba6 <__lo0bits+0x22>
 8002b8e:	07da      	lsls	r2, r3, #31
 8002b90:	d423      	bmi.n	8002bda <__lo0bits+0x56>
 8002b92:	0798      	lsls	r0, r3, #30
 8002b94:	bf49      	itett	mi
 8002b96:	085b      	lsrmi	r3, r3, #1
 8002b98:	089b      	lsrpl	r3, r3, #2
 8002b9a:	2001      	movmi	r0, #1
 8002b9c:	600b      	strmi	r3, [r1, #0]
 8002b9e:	bf5c      	itt	pl
 8002ba0:	600b      	strpl	r3, [r1, #0]
 8002ba2:	2002      	movpl	r0, #2
 8002ba4:	4770      	bx	lr
 8002ba6:	b298      	uxth	r0, r3
 8002ba8:	b9a8      	cbnz	r0, 8002bd6 <__lo0bits+0x52>
 8002baa:	0c1b      	lsrs	r3, r3, #16
 8002bac:	2010      	movs	r0, #16
 8002bae:	f013 0fff 	tst.w	r3, #255	; 0xff
 8002bb2:	bf04      	itt	eq
 8002bb4:	0a1b      	lsreq	r3, r3, #8
 8002bb6:	3008      	addeq	r0, #8
 8002bb8:	071a      	lsls	r2, r3, #28
 8002bba:	bf04      	itt	eq
 8002bbc:	091b      	lsreq	r3, r3, #4
 8002bbe:	3004      	addeq	r0, #4
 8002bc0:	079a      	lsls	r2, r3, #30
 8002bc2:	bf04      	itt	eq
 8002bc4:	089b      	lsreq	r3, r3, #2
 8002bc6:	3002      	addeq	r0, #2
 8002bc8:	07da      	lsls	r2, r3, #31
 8002bca:	d402      	bmi.n	8002bd2 <__lo0bits+0x4e>
 8002bcc:	085b      	lsrs	r3, r3, #1
 8002bce:	d006      	beq.n	8002bde <__lo0bits+0x5a>
 8002bd0:	3001      	adds	r0, #1
 8002bd2:	600b      	str	r3, [r1, #0]
 8002bd4:	4770      	bx	lr
 8002bd6:	4610      	mov	r0, r2
 8002bd8:	e7e9      	b.n	8002bae <__lo0bits+0x2a>
 8002bda:	2000      	movs	r0, #0
 8002bdc:	4770      	bx	lr
 8002bde:	2020      	movs	r0, #32
 8002be0:	4770      	bx	lr

08002be2 <__i2b>:
 8002be2:	b510      	push	{r4, lr}
 8002be4:	460c      	mov	r4, r1
 8002be6:	2101      	movs	r1, #1
 8002be8:	f7ff ff27 	bl	8002a3a <_Balloc>
 8002bec:	2201      	movs	r2, #1
 8002bee:	6144      	str	r4, [r0, #20]
 8002bf0:	6102      	str	r2, [r0, #16]
 8002bf2:	bd10      	pop	{r4, pc}

08002bf4 <__multiply>:
 8002bf4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002bf8:	4614      	mov	r4, r2
 8002bfa:	690a      	ldr	r2, [r1, #16]
 8002bfc:	6923      	ldr	r3, [r4, #16]
 8002bfe:	429a      	cmp	r2, r3
 8002c00:	bfb8      	it	lt
 8002c02:	460b      	movlt	r3, r1
 8002c04:	4688      	mov	r8, r1
 8002c06:	bfbc      	itt	lt
 8002c08:	46a0      	movlt	r8, r4
 8002c0a:	461c      	movlt	r4, r3
 8002c0c:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8002c10:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8002c14:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8002c18:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8002c1c:	eb07 0609 	add.w	r6, r7, r9
 8002c20:	42b3      	cmp	r3, r6
 8002c22:	bfb8      	it	lt
 8002c24:	3101      	addlt	r1, #1
 8002c26:	f7ff ff08 	bl	8002a3a <_Balloc>
 8002c2a:	f100 0514 	add.w	r5, r0, #20
 8002c2e:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8002c32:	462b      	mov	r3, r5
 8002c34:	2200      	movs	r2, #0
 8002c36:	4573      	cmp	r3, lr
 8002c38:	d316      	bcc.n	8002c68 <__multiply+0x74>
 8002c3a:	f104 0214 	add.w	r2, r4, #20
 8002c3e:	f108 0114 	add.w	r1, r8, #20
 8002c42:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8002c46:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8002c4a:	9300      	str	r3, [sp, #0]
 8002c4c:	9b00      	ldr	r3, [sp, #0]
 8002c4e:	9201      	str	r2, [sp, #4]
 8002c50:	4293      	cmp	r3, r2
 8002c52:	d80c      	bhi.n	8002c6e <__multiply+0x7a>
 8002c54:	2e00      	cmp	r6, #0
 8002c56:	dd03      	ble.n	8002c60 <__multiply+0x6c>
 8002c58:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8002c5c:	2b00      	cmp	r3, #0
 8002c5e:	d05d      	beq.n	8002d1c <__multiply+0x128>
 8002c60:	6106      	str	r6, [r0, #16]
 8002c62:	b003      	add	sp, #12
 8002c64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c68:	f843 2b04 	str.w	r2, [r3], #4
 8002c6c:	e7e3      	b.n	8002c36 <__multiply+0x42>
 8002c6e:	f8b2 b000 	ldrh.w	fp, [r2]
 8002c72:	f1bb 0f00 	cmp.w	fp, #0
 8002c76:	d023      	beq.n	8002cc0 <__multiply+0xcc>
 8002c78:	4689      	mov	r9, r1
 8002c7a:	46ac      	mov	ip, r5
 8002c7c:	f04f 0800 	mov.w	r8, #0
 8002c80:	f859 4b04 	ldr.w	r4, [r9], #4
 8002c84:	f8dc a000 	ldr.w	sl, [ip]
 8002c88:	b2a3      	uxth	r3, r4
 8002c8a:	fa1f fa8a 	uxth.w	sl, sl
 8002c8e:	fb0b a303 	mla	r3, fp, r3, sl
 8002c92:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8002c96:	f8dc 4000 	ldr.w	r4, [ip]
 8002c9a:	4443      	add	r3, r8
 8002c9c:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8002ca0:	fb0b 840a 	mla	r4, fp, sl, r8
 8002ca4:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8002ca8:	46e2      	mov	sl, ip
 8002caa:	b29b      	uxth	r3, r3
 8002cac:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8002cb0:	454f      	cmp	r7, r9
 8002cb2:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8002cb6:	f84a 3b04 	str.w	r3, [sl], #4
 8002cba:	d82b      	bhi.n	8002d14 <__multiply+0x120>
 8002cbc:	f8cc 8004 	str.w	r8, [ip, #4]
 8002cc0:	9b01      	ldr	r3, [sp, #4]
 8002cc2:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8002cc6:	3204      	adds	r2, #4
 8002cc8:	f1ba 0f00 	cmp.w	sl, #0
 8002ccc:	d020      	beq.n	8002d10 <__multiply+0x11c>
 8002cce:	682b      	ldr	r3, [r5, #0]
 8002cd0:	4689      	mov	r9, r1
 8002cd2:	46a8      	mov	r8, r5
 8002cd4:	f04f 0b00 	mov.w	fp, #0
 8002cd8:	f8b9 c000 	ldrh.w	ip, [r9]
 8002cdc:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8002ce0:	fb0a 440c 	mla	r4, sl, ip, r4
 8002ce4:	445c      	add	r4, fp
 8002ce6:	46c4      	mov	ip, r8
 8002ce8:	b29b      	uxth	r3, r3
 8002cea:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8002cee:	f84c 3b04 	str.w	r3, [ip], #4
 8002cf2:	f859 3b04 	ldr.w	r3, [r9], #4
 8002cf6:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 8002cfa:	0c1b      	lsrs	r3, r3, #16
 8002cfc:	fb0a b303 	mla	r3, sl, r3, fp
 8002d00:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8002d04:	454f      	cmp	r7, r9
 8002d06:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8002d0a:	d805      	bhi.n	8002d18 <__multiply+0x124>
 8002d0c:	f8c8 3004 	str.w	r3, [r8, #4]
 8002d10:	3504      	adds	r5, #4
 8002d12:	e79b      	b.n	8002c4c <__multiply+0x58>
 8002d14:	46d4      	mov	ip, sl
 8002d16:	e7b3      	b.n	8002c80 <__multiply+0x8c>
 8002d18:	46e0      	mov	r8, ip
 8002d1a:	e7dd      	b.n	8002cd8 <__multiply+0xe4>
 8002d1c:	3e01      	subs	r6, #1
 8002d1e:	e799      	b.n	8002c54 <__multiply+0x60>

08002d20 <__pow5mult>:
 8002d20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002d24:	4615      	mov	r5, r2
 8002d26:	f012 0203 	ands.w	r2, r2, #3
 8002d2a:	4606      	mov	r6, r0
 8002d2c:	460f      	mov	r7, r1
 8002d2e:	d007      	beq.n	8002d40 <__pow5mult+0x20>
 8002d30:	3a01      	subs	r2, #1
 8002d32:	4c21      	ldr	r4, [pc, #132]	; (8002db8 <__pow5mult+0x98>)
 8002d34:	2300      	movs	r3, #0
 8002d36:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8002d3a:	f7ff fec9 	bl	8002ad0 <__multadd>
 8002d3e:	4607      	mov	r7, r0
 8002d40:	10ad      	asrs	r5, r5, #2
 8002d42:	d035      	beq.n	8002db0 <__pow5mult+0x90>
 8002d44:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8002d46:	b93c      	cbnz	r4, 8002d58 <__pow5mult+0x38>
 8002d48:	2010      	movs	r0, #16
 8002d4a:	f7ff fe63 	bl	8002a14 <malloc>
 8002d4e:	6270      	str	r0, [r6, #36]	; 0x24
 8002d50:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8002d54:	6004      	str	r4, [r0, #0]
 8002d56:	60c4      	str	r4, [r0, #12]
 8002d58:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8002d5c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8002d60:	b94c      	cbnz	r4, 8002d76 <__pow5mult+0x56>
 8002d62:	f240 2171 	movw	r1, #625	; 0x271
 8002d66:	4630      	mov	r0, r6
 8002d68:	f7ff ff3b 	bl	8002be2 <__i2b>
 8002d6c:	2300      	movs	r3, #0
 8002d6e:	f8c8 0008 	str.w	r0, [r8, #8]
 8002d72:	4604      	mov	r4, r0
 8002d74:	6003      	str	r3, [r0, #0]
 8002d76:	f04f 0800 	mov.w	r8, #0
 8002d7a:	07eb      	lsls	r3, r5, #31
 8002d7c:	d50a      	bpl.n	8002d94 <__pow5mult+0x74>
 8002d7e:	4639      	mov	r1, r7
 8002d80:	4622      	mov	r2, r4
 8002d82:	4630      	mov	r0, r6
 8002d84:	f7ff ff36 	bl	8002bf4 <__multiply>
 8002d88:	4639      	mov	r1, r7
 8002d8a:	4681      	mov	r9, r0
 8002d8c:	4630      	mov	r0, r6
 8002d8e:	f7ff fe88 	bl	8002aa2 <_Bfree>
 8002d92:	464f      	mov	r7, r9
 8002d94:	106d      	asrs	r5, r5, #1
 8002d96:	d00b      	beq.n	8002db0 <__pow5mult+0x90>
 8002d98:	6820      	ldr	r0, [r4, #0]
 8002d9a:	b938      	cbnz	r0, 8002dac <__pow5mult+0x8c>
 8002d9c:	4622      	mov	r2, r4
 8002d9e:	4621      	mov	r1, r4
 8002da0:	4630      	mov	r0, r6
 8002da2:	f7ff ff27 	bl	8002bf4 <__multiply>
 8002da6:	6020      	str	r0, [r4, #0]
 8002da8:	f8c0 8000 	str.w	r8, [r0]
 8002dac:	4604      	mov	r4, r0
 8002dae:	e7e4      	b.n	8002d7a <__pow5mult+0x5a>
 8002db0:	4638      	mov	r0, r7
 8002db2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002db6:	bf00      	nop
 8002db8:	080036d8 	.word	0x080036d8

08002dbc <__lshift>:
 8002dbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002dc0:	460c      	mov	r4, r1
 8002dc2:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8002dc6:	6923      	ldr	r3, [r4, #16]
 8002dc8:	6849      	ldr	r1, [r1, #4]
 8002dca:	eb0a 0903 	add.w	r9, sl, r3
 8002dce:	68a3      	ldr	r3, [r4, #8]
 8002dd0:	4607      	mov	r7, r0
 8002dd2:	4616      	mov	r6, r2
 8002dd4:	f109 0501 	add.w	r5, r9, #1
 8002dd8:	42ab      	cmp	r3, r5
 8002dda:	db32      	blt.n	8002e42 <__lshift+0x86>
 8002ddc:	4638      	mov	r0, r7
 8002dde:	f7ff fe2c 	bl	8002a3a <_Balloc>
 8002de2:	2300      	movs	r3, #0
 8002de4:	4680      	mov	r8, r0
 8002de6:	f100 0114 	add.w	r1, r0, #20
 8002dea:	461a      	mov	r2, r3
 8002dec:	4553      	cmp	r3, sl
 8002dee:	db2b      	blt.n	8002e48 <__lshift+0x8c>
 8002df0:	6920      	ldr	r0, [r4, #16]
 8002df2:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8002df6:	f104 0314 	add.w	r3, r4, #20
 8002dfa:	f016 021f 	ands.w	r2, r6, #31
 8002dfe:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8002e02:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8002e06:	d025      	beq.n	8002e54 <__lshift+0x98>
 8002e08:	f1c2 0e20 	rsb	lr, r2, #32
 8002e0c:	2000      	movs	r0, #0
 8002e0e:	681e      	ldr	r6, [r3, #0]
 8002e10:	468a      	mov	sl, r1
 8002e12:	4096      	lsls	r6, r2
 8002e14:	4330      	orrs	r0, r6
 8002e16:	f84a 0b04 	str.w	r0, [sl], #4
 8002e1a:	f853 0b04 	ldr.w	r0, [r3], #4
 8002e1e:	459c      	cmp	ip, r3
 8002e20:	fa20 f00e 	lsr.w	r0, r0, lr
 8002e24:	d814      	bhi.n	8002e50 <__lshift+0x94>
 8002e26:	6048      	str	r0, [r1, #4]
 8002e28:	b108      	cbz	r0, 8002e2e <__lshift+0x72>
 8002e2a:	f109 0502 	add.w	r5, r9, #2
 8002e2e:	3d01      	subs	r5, #1
 8002e30:	4638      	mov	r0, r7
 8002e32:	f8c8 5010 	str.w	r5, [r8, #16]
 8002e36:	4621      	mov	r1, r4
 8002e38:	f7ff fe33 	bl	8002aa2 <_Bfree>
 8002e3c:	4640      	mov	r0, r8
 8002e3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002e42:	3101      	adds	r1, #1
 8002e44:	005b      	lsls	r3, r3, #1
 8002e46:	e7c7      	b.n	8002dd8 <__lshift+0x1c>
 8002e48:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002e4c:	3301      	adds	r3, #1
 8002e4e:	e7cd      	b.n	8002dec <__lshift+0x30>
 8002e50:	4651      	mov	r1, sl
 8002e52:	e7dc      	b.n	8002e0e <__lshift+0x52>
 8002e54:	3904      	subs	r1, #4
 8002e56:	f853 2b04 	ldr.w	r2, [r3], #4
 8002e5a:	f841 2f04 	str.w	r2, [r1, #4]!
 8002e5e:	459c      	cmp	ip, r3
 8002e60:	d8f9      	bhi.n	8002e56 <__lshift+0x9a>
 8002e62:	e7e4      	b.n	8002e2e <__lshift+0x72>

08002e64 <__mcmp>:
 8002e64:	6903      	ldr	r3, [r0, #16]
 8002e66:	690a      	ldr	r2, [r1, #16]
 8002e68:	1a9b      	subs	r3, r3, r2
 8002e6a:	b530      	push	{r4, r5, lr}
 8002e6c:	d10c      	bne.n	8002e88 <__mcmp+0x24>
 8002e6e:	0092      	lsls	r2, r2, #2
 8002e70:	3014      	adds	r0, #20
 8002e72:	3114      	adds	r1, #20
 8002e74:	1884      	adds	r4, r0, r2
 8002e76:	4411      	add	r1, r2
 8002e78:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8002e7c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8002e80:	4295      	cmp	r5, r2
 8002e82:	d003      	beq.n	8002e8c <__mcmp+0x28>
 8002e84:	d305      	bcc.n	8002e92 <__mcmp+0x2e>
 8002e86:	2301      	movs	r3, #1
 8002e88:	4618      	mov	r0, r3
 8002e8a:	bd30      	pop	{r4, r5, pc}
 8002e8c:	42a0      	cmp	r0, r4
 8002e8e:	d3f3      	bcc.n	8002e78 <__mcmp+0x14>
 8002e90:	e7fa      	b.n	8002e88 <__mcmp+0x24>
 8002e92:	f04f 33ff 	mov.w	r3, #4294967295
 8002e96:	e7f7      	b.n	8002e88 <__mcmp+0x24>

08002e98 <__mdiff>:
 8002e98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002e9c:	460d      	mov	r5, r1
 8002e9e:	4607      	mov	r7, r0
 8002ea0:	4611      	mov	r1, r2
 8002ea2:	4628      	mov	r0, r5
 8002ea4:	4614      	mov	r4, r2
 8002ea6:	f7ff ffdd 	bl	8002e64 <__mcmp>
 8002eaa:	1e06      	subs	r6, r0, #0
 8002eac:	d108      	bne.n	8002ec0 <__mdiff+0x28>
 8002eae:	4631      	mov	r1, r6
 8002eb0:	4638      	mov	r0, r7
 8002eb2:	f7ff fdc2 	bl	8002a3a <_Balloc>
 8002eb6:	2301      	movs	r3, #1
 8002eb8:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8002ebc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002ec0:	bfa4      	itt	ge
 8002ec2:	4623      	movge	r3, r4
 8002ec4:	462c      	movge	r4, r5
 8002ec6:	4638      	mov	r0, r7
 8002ec8:	6861      	ldr	r1, [r4, #4]
 8002eca:	bfa6      	itte	ge
 8002ecc:	461d      	movge	r5, r3
 8002ece:	2600      	movge	r6, #0
 8002ed0:	2601      	movlt	r6, #1
 8002ed2:	f7ff fdb2 	bl	8002a3a <_Balloc>
 8002ed6:	692b      	ldr	r3, [r5, #16]
 8002ed8:	60c6      	str	r6, [r0, #12]
 8002eda:	6926      	ldr	r6, [r4, #16]
 8002edc:	f105 0914 	add.w	r9, r5, #20
 8002ee0:	f104 0214 	add.w	r2, r4, #20
 8002ee4:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8002ee8:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8002eec:	f100 0514 	add.w	r5, r0, #20
 8002ef0:	f04f 0e00 	mov.w	lr, #0
 8002ef4:	f852 ab04 	ldr.w	sl, [r2], #4
 8002ef8:	f859 4b04 	ldr.w	r4, [r9], #4
 8002efc:	fa1e f18a 	uxtah	r1, lr, sl
 8002f00:	b2a3      	uxth	r3, r4
 8002f02:	1ac9      	subs	r1, r1, r3
 8002f04:	0c23      	lsrs	r3, r4, #16
 8002f06:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 8002f0a:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8002f0e:	b289      	uxth	r1, r1
 8002f10:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8002f14:	45c8      	cmp	r8, r9
 8002f16:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8002f1a:	4694      	mov	ip, r2
 8002f1c:	f845 3b04 	str.w	r3, [r5], #4
 8002f20:	d8e8      	bhi.n	8002ef4 <__mdiff+0x5c>
 8002f22:	45bc      	cmp	ip, r7
 8002f24:	d304      	bcc.n	8002f30 <__mdiff+0x98>
 8002f26:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8002f2a:	b183      	cbz	r3, 8002f4e <__mdiff+0xb6>
 8002f2c:	6106      	str	r6, [r0, #16]
 8002f2e:	e7c5      	b.n	8002ebc <__mdiff+0x24>
 8002f30:	f85c 1b04 	ldr.w	r1, [ip], #4
 8002f34:	fa1e f381 	uxtah	r3, lr, r1
 8002f38:	141a      	asrs	r2, r3, #16
 8002f3a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8002f3e:	b29b      	uxth	r3, r3
 8002f40:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002f44:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8002f48:	f845 3b04 	str.w	r3, [r5], #4
 8002f4c:	e7e9      	b.n	8002f22 <__mdiff+0x8a>
 8002f4e:	3e01      	subs	r6, #1
 8002f50:	e7e9      	b.n	8002f26 <__mdiff+0x8e>

08002f52 <__d2b>:
 8002f52:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002f56:	460e      	mov	r6, r1
 8002f58:	2101      	movs	r1, #1
 8002f5a:	ec59 8b10 	vmov	r8, r9, d0
 8002f5e:	4615      	mov	r5, r2
 8002f60:	f7ff fd6b 	bl	8002a3a <_Balloc>
 8002f64:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8002f68:	4607      	mov	r7, r0
 8002f6a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8002f6e:	bb34      	cbnz	r4, 8002fbe <__d2b+0x6c>
 8002f70:	9301      	str	r3, [sp, #4]
 8002f72:	f1b8 0300 	subs.w	r3, r8, #0
 8002f76:	d027      	beq.n	8002fc8 <__d2b+0x76>
 8002f78:	a802      	add	r0, sp, #8
 8002f7a:	f840 3d08 	str.w	r3, [r0, #-8]!
 8002f7e:	f7ff fe01 	bl	8002b84 <__lo0bits>
 8002f82:	9900      	ldr	r1, [sp, #0]
 8002f84:	b1f0      	cbz	r0, 8002fc4 <__d2b+0x72>
 8002f86:	9a01      	ldr	r2, [sp, #4]
 8002f88:	f1c0 0320 	rsb	r3, r0, #32
 8002f8c:	fa02 f303 	lsl.w	r3, r2, r3
 8002f90:	430b      	orrs	r3, r1
 8002f92:	40c2      	lsrs	r2, r0
 8002f94:	617b      	str	r3, [r7, #20]
 8002f96:	9201      	str	r2, [sp, #4]
 8002f98:	9b01      	ldr	r3, [sp, #4]
 8002f9a:	61bb      	str	r3, [r7, #24]
 8002f9c:	2b00      	cmp	r3, #0
 8002f9e:	bf14      	ite	ne
 8002fa0:	2102      	movne	r1, #2
 8002fa2:	2101      	moveq	r1, #1
 8002fa4:	6139      	str	r1, [r7, #16]
 8002fa6:	b1c4      	cbz	r4, 8002fda <__d2b+0x88>
 8002fa8:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8002fac:	4404      	add	r4, r0
 8002fae:	6034      	str	r4, [r6, #0]
 8002fb0:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8002fb4:	6028      	str	r0, [r5, #0]
 8002fb6:	4638      	mov	r0, r7
 8002fb8:	b003      	add	sp, #12
 8002fba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002fbe:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8002fc2:	e7d5      	b.n	8002f70 <__d2b+0x1e>
 8002fc4:	6179      	str	r1, [r7, #20]
 8002fc6:	e7e7      	b.n	8002f98 <__d2b+0x46>
 8002fc8:	a801      	add	r0, sp, #4
 8002fca:	f7ff fddb 	bl	8002b84 <__lo0bits>
 8002fce:	9b01      	ldr	r3, [sp, #4]
 8002fd0:	617b      	str	r3, [r7, #20]
 8002fd2:	2101      	movs	r1, #1
 8002fd4:	6139      	str	r1, [r7, #16]
 8002fd6:	3020      	adds	r0, #32
 8002fd8:	e7e5      	b.n	8002fa6 <__d2b+0x54>
 8002fda:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8002fde:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8002fe2:	6030      	str	r0, [r6, #0]
 8002fe4:	6918      	ldr	r0, [r3, #16]
 8002fe6:	f7ff fdae 	bl	8002b46 <__hi0bits>
 8002fea:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8002fee:	e7e1      	b.n	8002fb4 <__d2b+0x62>

08002ff0 <_calloc_r>:
 8002ff0:	b538      	push	{r3, r4, r5, lr}
 8002ff2:	fb02 f401 	mul.w	r4, r2, r1
 8002ff6:	4621      	mov	r1, r4
 8002ff8:	f000 f856 	bl	80030a8 <_malloc_r>
 8002ffc:	4605      	mov	r5, r0
 8002ffe:	b118      	cbz	r0, 8003008 <_calloc_r+0x18>
 8003000:	4622      	mov	r2, r4
 8003002:	2100      	movs	r1, #0
 8003004:	f7fe fa2e 	bl	8001464 <memset>
 8003008:	4628      	mov	r0, r5
 800300a:	bd38      	pop	{r3, r4, r5, pc}

0800300c <_free_r>:
 800300c:	b538      	push	{r3, r4, r5, lr}
 800300e:	4605      	mov	r5, r0
 8003010:	2900      	cmp	r1, #0
 8003012:	d045      	beq.n	80030a0 <_free_r+0x94>
 8003014:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003018:	1f0c      	subs	r4, r1, #4
 800301a:	2b00      	cmp	r3, #0
 800301c:	bfb8      	it	lt
 800301e:	18e4      	addlt	r4, r4, r3
 8003020:	f000 fa29 	bl	8003476 <__malloc_lock>
 8003024:	4a1f      	ldr	r2, [pc, #124]	; (80030a4 <_free_r+0x98>)
 8003026:	6813      	ldr	r3, [r2, #0]
 8003028:	4610      	mov	r0, r2
 800302a:	b933      	cbnz	r3, 800303a <_free_r+0x2e>
 800302c:	6063      	str	r3, [r4, #4]
 800302e:	6014      	str	r4, [r2, #0]
 8003030:	4628      	mov	r0, r5
 8003032:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003036:	f000 ba1f 	b.w	8003478 <__malloc_unlock>
 800303a:	42a3      	cmp	r3, r4
 800303c:	d90c      	bls.n	8003058 <_free_r+0x4c>
 800303e:	6821      	ldr	r1, [r4, #0]
 8003040:	1862      	adds	r2, r4, r1
 8003042:	4293      	cmp	r3, r2
 8003044:	bf04      	itt	eq
 8003046:	681a      	ldreq	r2, [r3, #0]
 8003048:	685b      	ldreq	r3, [r3, #4]
 800304a:	6063      	str	r3, [r4, #4]
 800304c:	bf04      	itt	eq
 800304e:	1852      	addeq	r2, r2, r1
 8003050:	6022      	streq	r2, [r4, #0]
 8003052:	6004      	str	r4, [r0, #0]
 8003054:	e7ec      	b.n	8003030 <_free_r+0x24>
 8003056:	4613      	mov	r3, r2
 8003058:	685a      	ldr	r2, [r3, #4]
 800305a:	b10a      	cbz	r2, 8003060 <_free_r+0x54>
 800305c:	42a2      	cmp	r2, r4
 800305e:	d9fa      	bls.n	8003056 <_free_r+0x4a>
 8003060:	6819      	ldr	r1, [r3, #0]
 8003062:	1858      	adds	r0, r3, r1
 8003064:	42a0      	cmp	r0, r4
 8003066:	d10b      	bne.n	8003080 <_free_r+0x74>
 8003068:	6820      	ldr	r0, [r4, #0]
 800306a:	4401      	add	r1, r0
 800306c:	1858      	adds	r0, r3, r1
 800306e:	4282      	cmp	r2, r0
 8003070:	6019      	str	r1, [r3, #0]
 8003072:	d1dd      	bne.n	8003030 <_free_r+0x24>
 8003074:	6810      	ldr	r0, [r2, #0]
 8003076:	6852      	ldr	r2, [r2, #4]
 8003078:	605a      	str	r2, [r3, #4]
 800307a:	4401      	add	r1, r0
 800307c:	6019      	str	r1, [r3, #0]
 800307e:	e7d7      	b.n	8003030 <_free_r+0x24>
 8003080:	d902      	bls.n	8003088 <_free_r+0x7c>
 8003082:	230c      	movs	r3, #12
 8003084:	602b      	str	r3, [r5, #0]
 8003086:	e7d3      	b.n	8003030 <_free_r+0x24>
 8003088:	6820      	ldr	r0, [r4, #0]
 800308a:	1821      	adds	r1, r4, r0
 800308c:	428a      	cmp	r2, r1
 800308e:	bf04      	itt	eq
 8003090:	6811      	ldreq	r1, [r2, #0]
 8003092:	6852      	ldreq	r2, [r2, #4]
 8003094:	6062      	str	r2, [r4, #4]
 8003096:	bf04      	itt	eq
 8003098:	1809      	addeq	r1, r1, r0
 800309a:	6021      	streq	r1, [r4, #0]
 800309c:	605c      	str	r4, [r3, #4]
 800309e:	e7c7      	b.n	8003030 <_free_r+0x24>
 80030a0:	bd38      	pop	{r3, r4, r5, pc}
 80030a2:	bf00      	nop
 80030a4:	200001f4 	.word	0x200001f4

080030a8 <_malloc_r>:
 80030a8:	b570      	push	{r4, r5, r6, lr}
 80030aa:	1ccd      	adds	r5, r1, #3
 80030ac:	f025 0503 	bic.w	r5, r5, #3
 80030b0:	3508      	adds	r5, #8
 80030b2:	2d0c      	cmp	r5, #12
 80030b4:	bf38      	it	cc
 80030b6:	250c      	movcc	r5, #12
 80030b8:	2d00      	cmp	r5, #0
 80030ba:	4606      	mov	r6, r0
 80030bc:	db01      	blt.n	80030c2 <_malloc_r+0x1a>
 80030be:	42a9      	cmp	r1, r5
 80030c0:	d903      	bls.n	80030ca <_malloc_r+0x22>
 80030c2:	230c      	movs	r3, #12
 80030c4:	6033      	str	r3, [r6, #0]
 80030c6:	2000      	movs	r0, #0
 80030c8:	bd70      	pop	{r4, r5, r6, pc}
 80030ca:	f000 f9d4 	bl	8003476 <__malloc_lock>
 80030ce:	4a21      	ldr	r2, [pc, #132]	; (8003154 <_malloc_r+0xac>)
 80030d0:	6814      	ldr	r4, [r2, #0]
 80030d2:	4621      	mov	r1, r4
 80030d4:	b991      	cbnz	r1, 80030fc <_malloc_r+0x54>
 80030d6:	4c20      	ldr	r4, [pc, #128]	; (8003158 <_malloc_r+0xb0>)
 80030d8:	6823      	ldr	r3, [r4, #0]
 80030da:	b91b      	cbnz	r3, 80030e4 <_malloc_r+0x3c>
 80030dc:	4630      	mov	r0, r6
 80030de:	f000 f98f 	bl	8003400 <_sbrk_r>
 80030e2:	6020      	str	r0, [r4, #0]
 80030e4:	4629      	mov	r1, r5
 80030e6:	4630      	mov	r0, r6
 80030e8:	f000 f98a 	bl	8003400 <_sbrk_r>
 80030ec:	1c43      	adds	r3, r0, #1
 80030ee:	d124      	bne.n	800313a <_malloc_r+0x92>
 80030f0:	230c      	movs	r3, #12
 80030f2:	6033      	str	r3, [r6, #0]
 80030f4:	4630      	mov	r0, r6
 80030f6:	f000 f9bf 	bl	8003478 <__malloc_unlock>
 80030fa:	e7e4      	b.n	80030c6 <_malloc_r+0x1e>
 80030fc:	680b      	ldr	r3, [r1, #0]
 80030fe:	1b5b      	subs	r3, r3, r5
 8003100:	d418      	bmi.n	8003134 <_malloc_r+0x8c>
 8003102:	2b0b      	cmp	r3, #11
 8003104:	d90f      	bls.n	8003126 <_malloc_r+0x7e>
 8003106:	600b      	str	r3, [r1, #0]
 8003108:	50cd      	str	r5, [r1, r3]
 800310a:	18cc      	adds	r4, r1, r3
 800310c:	4630      	mov	r0, r6
 800310e:	f000 f9b3 	bl	8003478 <__malloc_unlock>
 8003112:	f104 000b 	add.w	r0, r4, #11
 8003116:	1d23      	adds	r3, r4, #4
 8003118:	f020 0007 	bic.w	r0, r0, #7
 800311c:	1ac3      	subs	r3, r0, r3
 800311e:	d0d3      	beq.n	80030c8 <_malloc_r+0x20>
 8003120:	425a      	negs	r2, r3
 8003122:	50e2      	str	r2, [r4, r3]
 8003124:	e7d0      	b.n	80030c8 <_malloc_r+0x20>
 8003126:	428c      	cmp	r4, r1
 8003128:	684b      	ldr	r3, [r1, #4]
 800312a:	bf16      	itet	ne
 800312c:	6063      	strne	r3, [r4, #4]
 800312e:	6013      	streq	r3, [r2, #0]
 8003130:	460c      	movne	r4, r1
 8003132:	e7eb      	b.n	800310c <_malloc_r+0x64>
 8003134:	460c      	mov	r4, r1
 8003136:	6849      	ldr	r1, [r1, #4]
 8003138:	e7cc      	b.n	80030d4 <_malloc_r+0x2c>
 800313a:	1cc4      	adds	r4, r0, #3
 800313c:	f024 0403 	bic.w	r4, r4, #3
 8003140:	42a0      	cmp	r0, r4
 8003142:	d005      	beq.n	8003150 <_malloc_r+0xa8>
 8003144:	1a21      	subs	r1, r4, r0
 8003146:	4630      	mov	r0, r6
 8003148:	f000 f95a 	bl	8003400 <_sbrk_r>
 800314c:	3001      	adds	r0, #1
 800314e:	d0cf      	beq.n	80030f0 <_malloc_r+0x48>
 8003150:	6025      	str	r5, [r4, #0]
 8003152:	e7db      	b.n	800310c <_malloc_r+0x64>
 8003154:	200001f4 	.word	0x200001f4
 8003158:	200001f8 	.word	0x200001f8

0800315c <__ssputs_r>:
 800315c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003160:	688e      	ldr	r6, [r1, #8]
 8003162:	429e      	cmp	r6, r3
 8003164:	4682      	mov	sl, r0
 8003166:	460c      	mov	r4, r1
 8003168:	4690      	mov	r8, r2
 800316a:	4699      	mov	r9, r3
 800316c:	d837      	bhi.n	80031de <__ssputs_r+0x82>
 800316e:	898a      	ldrh	r2, [r1, #12]
 8003170:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003174:	d031      	beq.n	80031da <__ssputs_r+0x7e>
 8003176:	6825      	ldr	r5, [r4, #0]
 8003178:	6909      	ldr	r1, [r1, #16]
 800317a:	1a6f      	subs	r7, r5, r1
 800317c:	6965      	ldr	r5, [r4, #20]
 800317e:	2302      	movs	r3, #2
 8003180:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003184:	fb95 f5f3 	sdiv	r5, r5, r3
 8003188:	f109 0301 	add.w	r3, r9, #1
 800318c:	443b      	add	r3, r7
 800318e:	429d      	cmp	r5, r3
 8003190:	bf38      	it	cc
 8003192:	461d      	movcc	r5, r3
 8003194:	0553      	lsls	r3, r2, #21
 8003196:	d530      	bpl.n	80031fa <__ssputs_r+0x9e>
 8003198:	4629      	mov	r1, r5
 800319a:	f7ff ff85 	bl	80030a8 <_malloc_r>
 800319e:	4606      	mov	r6, r0
 80031a0:	b950      	cbnz	r0, 80031b8 <__ssputs_r+0x5c>
 80031a2:	230c      	movs	r3, #12
 80031a4:	f8ca 3000 	str.w	r3, [sl]
 80031a8:	89a3      	ldrh	r3, [r4, #12]
 80031aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80031ae:	81a3      	strh	r3, [r4, #12]
 80031b0:	f04f 30ff 	mov.w	r0, #4294967295
 80031b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80031b8:	463a      	mov	r2, r7
 80031ba:	6921      	ldr	r1, [r4, #16]
 80031bc:	f7ff fc32 	bl	8002a24 <memcpy>
 80031c0:	89a3      	ldrh	r3, [r4, #12]
 80031c2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80031c6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80031ca:	81a3      	strh	r3, [r4, #12]
 80031cc:	6126      	str	r6, [r4, #16]
 80031ce:	6165      	str	r5, [r4, #20]
 80031d0:	443e      	add	r6, r7
 80031d2:	1bed      	subs	r5, r5, r7
 80031d4:	6026      	str	r6, [r4, #0]
 80031d6:	60a5      	str	r5, [r4, #8]
 80031d8:	464e      	mov	r6, r9
 80031da:	454e      	cmp	r6, r9
 80031dc:	d900      	bls.n	80031e0 <__ssputs_r+0x84>
 80031de:	464e      	mov	r6, r9
 80031e0:	4632      	mov	r2, r6
 80031e2:	4641      	mov	r1, r8
 80031e4:	6820      	ldr	r0, [r4, #0]
 80031e6:	f000 f92d 	bl	8003444 <memmove>
 80031ea:	68a3      	ldr	r3, [r4, #8]
 80031ec:	1b9b      	subs	r3, r3, r6
 80031ee:	60a3      	str	r3, [r4, #8]
 80031f0:	6823      	ldr	r3, [r4, #0]
 80031f2:	441e      	add	r6, r3
 80031f4:	6026      	str	r6, [r4, #0]
 80031f6:	2000      	movs	r0, #0
 80031f8:	e7dc      	b.n	80031b4 <__ssputs_r+0x58>
 80031fa:	462a      	mov	r2, r5
 80031fc:	f000 f93d 	bl	800347a <_realloc_r>
 8003200:	4606      	mov	r6, r0
 8003202:	2800      	cmp	r0, #0
 8003204:	d1e2      	bne.n	80031cc <__ssputs_r+0x70>
 8003206:	6921      	ldr	r1, [r4, #16]
 8003208:	4650      	mov	r0, sl
 800320a:	f7ff feff 	bl	800300c <_free_r>
 800320e:	e7c8      	b.n	80031a2 <__ssputs_r+0x46>

08003210 <_svfiprintf_r>:
 8003210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003214:	461d      	mov	r5, r3
 8003216:	898b      	ldrh	r3, [r1, #12]
 8003218:	061f      	lsls	r7, r3, #24
 800321a:	b09d      	sub	sp, #116	; 0x74
 800321c:	4680      	mov	r8, r0
 800321e:	460c      	mov	r4, r1
 8003220:	4616      	mov	r6, r2
 8003222:	d50f      	bpl.n	8003244 <_svfiprintf_r+0x34>
 8003224:	690b      	ldr	r3, [r1, #16]
 8003226:	b96b      	cbnz	r3, 8003244 <_svfiprintf_r+0x34>
 8003228:	2140      	movs	r1, #64	; 0x40
 800322a:	f7ff ff3d 	bl	80030a8 <_malloc_r>
 800322e:	6020      	str	r0, [r4, #0]
 8003230:	6120      	str	r0, [r4, #16]
 8003232:	b928      	cbnz	r0, 8003240 <_svfiprintf_r+0x30>
 8003234:	230c      	movs	r3, #12
 8003236:	f8c8 3000 	str.w	r3, [r8]
 800323a:	f04f 30ff 	mov.w	r0, #4294967295
 800323e:	e0c8      	b.n	80033d2 <_svfiprintf_r+0x1c2>
 8003240:	2340      	movs	r3, #64	; 0x40
 8003242:	6163      	str	r3, [r4, #20]
 8003244:	2300      	movs	r3, #0
 8003246:	9309      	str	r3, [sp, #36]	; 0x24
 8003248:	2320      	movs	r3, #32
 800324a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800324e:	2330      	movs	r3, #48	; 0x30
 8003250:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003254:	9503      	str	r5, [sp, #12]
 8003256:	f04f 0b01 	mov.w	fp, #1
 800325a:	4637      	mov	r7, r6
 800325c:	463d      	mov	r5, r7
 800325e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8003262:	b10b      	cbz	r3, 8003268 <_svfiprintf_r+0x58>
 8003264:	2b25      	cmp	r3, #37	; 0x25
 8003266:	d13e      	bne.n	80032e6 <_svfiprintf_r+0xd6>
 8003268:	ebb7 0a06 	subs.w	sl, r7, r6
 800326c:	d00b      	beq.n	8003286 <_svfiprintf_r+0x76>
 800326e:	4653      	mov	r3, sl
 8003270:	4632      	mov	r2, r6
 8003272:	4621      	mov	r1, r4
 8003274:	4640      	mov	r0, r8
 8003276:	f7ff ff71 	bl	800315c <__ssputs_r>
 800327a:	3001      	adds	r0, #1
 800327c:	f000 80a4 	beq.w	80033c8 <_svfiprintf_r+0x1b8>
 8003280:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003282:	4453      	add	r3, sl
 8003284:	9309      	str	r3, [sp, #36]	; 0x24
 8003286:	783b      	ldrb	r3, [r7, #0]
 8003288:	2b00      	cmp	r3, #0
 800328a:	f000 809d 	beq.w	80033c8 <_svfiprintf_r+0x1b8>
 800328e:	2300      	movs	r3, #0
 8003290:	f04f 32ff 	mov.w	r2, #4294967295
 8003294:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003298:	9304      	str	r3, [sp, #16]
 800329a:	9307      	str	r3, [sp, #28]
 800329c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80032a0:	931a      	str	r3, [sp, #104]	; 0x68
 80032a2:	462f      	mov	r7, r5
 80032a4:	2205      	movs	r2, #5
 80032a6:	f817 1b01 	ldrb.w	r1, [r7], #1
 80032aa:	4850      	ldr	r0, [pc, #320]	; (80033ec <_svfiprintf_r+0x1dc>)
 80032ac:	f7fc ffa0 	bl	80001f0 <memchr>
 80032b0:	9b04      	ldr	r3, [sp, #16]
 80032b2:	b9d0      	cbnz	r0, 80032ea <_svfiprintf_r+0xda>
 80032b4:	06d9      	lsls	r1, r3, #27
 80032b6:	bf44      	itt	mi
 80032b8:	2220      	movmi	r2, #32
 80032ba:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80032be:	071a      	lsls	r2, r3, #28
 80032c0:	bf44      	itt	mi
 80032c2:	222b      	movmi	r2, #43	; 0x2b
 80032c4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80032c8:	782a      	ldrb	r2, [r5, #0]
 80032ca:	2a2a      	cmp	r2, #42	; 0x2a
 80032cc:	d015      	beq.n	80032fa <_svfiprintf_r+0xea>
 80032ce:	9a07      	ldr	r2, [sp, #28]
 80032d0:	462f      	mov	r7, r5
 80032d2:	2000      	movs	r0, #0
 80032d4:	250a      	movs	r5, #10
 80032d6:	4639      	mov	r1, r7
 80032d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80032dc:	3b30      	subs	r3, #48	; 0x30
 80032de:	2b09      	cmp	r3, #9
 80032e0:	d94d      	bls.n	800337e <_svfiprintf_r+0x16e>
 80032e2:	b1b8      	cbz	r0, 8003314 <_svfiprintf_r+0x104>
 80032e4:	e00f      	b.n	8003306 <_svfiprintf_r+0xf6>
 80032e6:	462f      	mov	r7, r5
 80032e8:	e7b8      	b.n	800325c <_svfiprintf_r+0x4c>
 80032ea:	4a40      	ldr	r2, [pc, #256]	; (80033ec <_svfiprintf_r+0x1dc>)
 80032ec:	1a80      	subs	r0, r0, r2
 80032ee:	fa0b f000 	lsl.w	r0, fp, r0
 80032f2:	4318      	orrs	r0, r3
 80032f4:	9004      	str	r0, [sp, #16]
 80032f6:	463d      	mov	r5, r7
 80032f8:	e7d3      	b.n	80032a2 <_svfiprintf_r+0x92>
 80032fa:	9a03      	ldr	r2, [sp, #12]
 80032fc:	1d11      	adds	r1, r2, #4
 80032fe:	6812      	ldr	r2, [r2, #0]
 8003300:	9103      	str	r1, [sp, #12]
 8003302:	2a00      	cmp	r2, #0
 8003304:	db01      	blt.n	800330a <_svfiprintf_r+0xfa>
 8003306:	9207      	str	r2, [sp, #28]
 8003308:	e004      	b.n	8003314 <_svfiprintf_r+0x104>
 800330a:	4252      	negs	r2, r2
 800330c:	f043 0302 	orr.w	r3, r3, #2
 8003310:	9207      	str	r2, [sp, #28]
 8003312:	9304      	str	r3, [sp, #16]
 8003314:	783b      	ldrb	r3, [r7, #0]
 8003316:	2b2e      	cmp	r3, #46	; 0x2e
 8003318:	d10c      	bne.n	8003334 <_svfiprintf_r+0x124>
 800331a:	787b      	ldrb	r3, [r7, #1]
 800331c:	2b2a      	cmp	r3, #42	; 0x2a
 800331e:	d133      	bne.n	8003388 <_svfiprintf_r+0x178>
 8003320:	9b03      	ldr	r3, [sp, #12]
 8003322:	1d1a      	adds	r2, r3, #4
 8003324:	681b      	ldr	r3, [r3, #0]
 8003326:	9203      	str	r2, [sp, #12]
 8003328:	2b00      	cmp	r3, #0
 800332a:	bfb8      	it	lt
 800332c:	f04f 33ff 	movlt.w	r3, #4294967295
 8003330:	3702      	adds	r7, #2
 8003332:	9305      	str	r3, [sp, #20]
 8003334:	4d2e      	ldr	r5, [pc, #184]	; (80033f0 <_svfiprintf_r+0x1e0>)
 8003336:	7839      	ldrb	r1, [r7, #0]
 8003338:	2203      	movs	r2, #3
 800333a:	4628      	mov	r0, r5
 800333c:	f7fc ff58 	bl	80001f0 <memchr>
 8003340:	b138      	cbz	r0, 8003352 <_svfiprintf_r+0x142>
 8003342:	2340      	movs	r3, #64	; 0x40
 8003344:	1b40      	subs	r0, r0, r5
 8003346:	fa03 f000 	lsl.w	r0, r3, r0
 800334a:	9b04      	ldr	r3, [sp, #16]
 800334c:	4303      	orrs	r3, r0
 800334e:	3701      	adds	r7, #1
 8003350:	9304      	str	r3, [sp, #16]
 8003352:	7839      	ldrb	r1, [r7, #0]
 8003354:	4827      	ldr	r0, [pc, #156]	; (80033f4 <_svfiprintf_r+0x1e4>)
 8003356:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800335a:	2206      	movs	r2, #6
 800335c:	1c7e      	adds	r6, r7, #1
 800335e:	f7fc ff47 	bl	80001f0 <memchr>
 8003362:	2800      	cmp	r0, #0
 8003364:	d038      	beq.n	80033d8 <_svfiprintf_r+0x1c8>
 8003366:	4b24      	ldr	r3, [pc, #144]	; (80033f8 <_svfiprintf_r+0x1e8>)
 8003368:	bb13      	cbnz	r3, 80033b0 <_svfiprintf_r+0x1a0>
 800336a:	9b03      	ldr	r3, [sp, #12]
 800336c:	3307      	adds	r3, #7
 800336e:	f023 0307 	bic.w	r3, r3, #7
 8003372:	3308      	adds	r3, #8
 8003374:	9303      	str	r3, [sp, #12]
 8003376:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003378:	444b      	add	r3, r9
 800337a:	9309      	str	r3, [sp, #36]	; 0x24
 800337c:	e76d      	b.n	800325a <_svfiprintf_r+0x4a>
 800337e:	fb05 3202 	mla	r2, r5, r2, r3
 8003382:	2001      	movs	r0, #1
 8003384:	460f      	mov	r7, r1
 8003386:	e7a6      	b.n	80032d6 <_svfiprintf_r+0xc6>
 8003388:	2300      	movs	r3, #0
 800338a:	3701      	adds	r7, #1
 800338c:	9305      	str	r3, [sp, #20]
 800338e:	4619      	mov	r1, r3
 8003390:	250a      	movs	r5, #10
 8003392:	4638      	mov	r0, r7
 8003394:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003398:	3a30      	subs	r2, #48	; 0x30
 800339a:	2a09      	cmp	r2, #9
 800339c:	d903      	bls.n	80033a6 <_svfiprintf_r+0x196>
 800339e:	2b00      	cmp	r3, #0
 80033a0:	d0c8      	beq.n	8003334 <_svfiprintf_r+0x124>
 80033a2:	9105      	str	r1, [sp, #20]
 80033a4:	e7c6      	b.n	8003334 <_svfiprintf_r+0x124>
 80033a6:	fb05 2101 	mla	r1, r5, r1, r2
 80033aa:	2301      	movs	r3, #1
 80033ac:	4607      	mov	r7, r0
 80033ae:	e7f0      	b.n	8003392 <_svfiprintf_r+0x182>
 80033b0:	ab03      	add	r3, sp, #12
 80033b2:	9300      	str	r3, [sp, #0]
 80033b4:	4622      	mov	r2, r4
 80033b6:	4b11      	ldr	r3, [pc, #68]	; (80033fc <_svfiprintf_r+0x1ec>)
 80033b8:	a904      	add	r1, sp, #16
 80033ba:	4640      	mov	r0, r8
 80033bc:	f7fe f8ee 	bl	800159c <_printf_float>
 80033c0:	f1b0 3fff 	cmp.w	r0, #4294967295
 80033c4:	4681      	mov	r9, r0
 80033c6:	d1d6      	bne.n	8003376 <_svfiprintf_r+0x166>
 80033c8:	89a3      	ldrh	r3, [r4, #12]
 80033ca:	065b      	lsls	r3, r3, #25
 80033cc:	f53f af35 	bmi.w	800323a <_svfiprintf_r+0x2a>
 80033d0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80033d2:	b01d      	add	sp, #116	; 0x74
 80033d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80033d8:	ab03      	add	r3, sp, #12
 80033da:	9300      	str	r3, [sp, #0]
 80033dc:	4622      	mov	r2, r4
 80033de:	4b07      	ldr	r3, [pc, #28]	; (80033fc <_svfiprintf_r+0x1ec>)
 80033e0:	a904      	add	r1, sp, #16
 80033e2:	4640      	mov	r0, r8
 80033e4:	f7fe fb90 	bl	8001b08 <_printf_i>
 80033e8:	e7ea      	b.n	80033c0 <_svfiprintf_r+0x1b0>
 80033ea:	bf00      	nop
 80033ec:	080036e4 	.word	0x080036e4
 80033f0:	080036ea 	.word	0x080036ea
 80033f4:	080036ee 	.word	0x080036ee
 80033f8:	0800159d 	.word	0x0800159d
 80033fc:	0800315d 	.word	0x0800315d

08003400 <_sbrk_r>:
 8003400:	b538      	push	{r3, r4, r5, lr}
 8003402:	4c06      	ldr	r4, [pc, #24]	; (800341c <_sbrk_r+0x1c>)
 8003404:	2300      	movs	r3, #0
 8003406:	4605      	mov	r5, r0
 8003408:	4608      	mov	r0, r1
 800340a:	6023      	str	r3, [r4, #0]
 800340c:	f7fd fd34 	bl	8000e78 <_sbrk>
 8003410:	1c43      	adds	r3, r0, #1
 8003412:	d102      	bne.n	800341a <_sbrk_r+0x1a>
 8003414:	6823      	ldr	r3, [r4, #0]
 8003416:	b103      	cbz	r3, 800341a <_sbrk_r+0x1a>
 8003418:	602b      	str	r3, [r5, #0]
 800341a:	bd38      	pop	{r3, r4, r5, pc}
 800341c:	20000314 	.word	0x20000314

08003420 <__ascii_mbtowc>:
 8003420:	b082      	sub	sp, #8
 8003422:	b901      	cbnz	r1, 8003426 <__ascii_mbtowc+0x6>
 8003424:	a901      	add	r1, sp, #4
 8003426:	b142      	cbz	r2, 800343a <__ascii_mbtowc+0x1a>
 8003428:	b14b      	cbz	r3, 800343e <__ascii_mbtowc+0x1e>
 800342a:	7813      	ldrb	r3, [r2, #0]
 800342c:	600b      	str	r3, [r1, #0]
 800342e:	7812      	ldrb	r2, [r2, #0]
 8003430:	1c10      	adds	r0, r2, #0
 8003432:	bf18      	it	ne
 8003434:	2001      	movne	r0, #1
 8003436:	b002      	add	sp, #8
 8003438:	4770      	bx	lr
 800343a:	4610      	mov	r0, r2
 800343c:	e7fb      	b.n	8003436 <__ascii_mbtowc+0x16>
 800343e:	f06f 0001 	mvn.w	r0, #1
 8003442:	e7f8      	b.n	8003436 <__ascii_mbtowc+0x16>

08003444 <memmove>:
 8003444:	4288      	cmp	r0, r1
 8003446:	b510      	push	{r4, lr}
 8003448:	eb01 0302 	add.w	r3, r1, r2
 800344c:	d807      	bhi.n	800345e <memmove+0x1a>
 800344e:	1e42      	subs	r2, r0, #1
 8003450:	4299      	cmp	r1, r3
 8003452:	d00a      	beq.n	800346a <memmove+0x26>
 8003454:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003458:	f802 4f01 	strb.w	r4, [r2, #1]!
 800345c:	e7f8      	b.n	8003450 <memmove+0xc>
 800345e:	4283      	cmp	r3, r0
 8003460:	d9f5      	bls.n	800344e <memmove+0xa>
 8003462:	1881      	adds	r1, r0, r2
 8003464:	1ad2      	subs	r2, r2, r3
 8003466:	42d3      	cmn	r3, r2
 8003468:	d100      	bne.n	800346c <memmove+0x28>
 800346a:	bd10      	pop	{r4, pc}
 800346c:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003470:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8003474:	e7f7      	b.n	8003466 <memmove+0x22>

08003476 <__malloc_lock>:
 8003476:	4770      	bx	lr

08003478 <__malloc_unlock>:
 8003478:	4770      	bx	lr

0800347a <_realloc_r>:
 800347a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800347c:	4607      	mov	r7, r0
 800347e:	4614      	mov	r4, r2
 8003480:	460e      	mov	r6, r1
 8003482:	b921      	cbnz	r1, 800348e <_realloc_r+0x14>
 8003484:	4611      	mov	r1, r2
 8003486:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800348a:	f7ff be0d 	b.w	80030a8 <_malloc_r>
 800348e:	b922      	cbnz	r2, 800349a <_realloc_r+0x20>
 8003490:	f7ff fdbc 	bl	800300c <_free_r>
 8003494:	4625      	mov	r5, r4
 8003496:	4628      	mov	r0, r5
 8003498:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800349a:	f000 f821 	bl	80034e0 <_malloc_usable_size_r>
 800349e:	42a0      	cmp	r0, r4
 80034a0:	d20f      	bcs.n	80034c2 <_realloc_r+0x48>
 80034a2:	4621      	mov	r1, r4
 80034a4:	4638      	mov	r0, r7
 80034a6:	f7ff fdff 	bl	80030a8 <_malloc_r>
 80034aa:	4605      	mov	r5, r0
 80034ac:	2800      	cmp	r0, #0
 80034ae:	d0f2      	beq.n	8003496 <_realloc_r+0x1c>
 80034b0:	4631      	mov	r1, r6
 80034b2:	4622      	mov	r2, r4
 80034b4:	f7ff fab6 	bl	8002a24 <memcpy>
 80034b8:	4631      	mov	r1, r6
 80034ba:	4638      	mov	r0, r7
 80034bc:	f7ff fda6 	bl	800300c <_free_r>
 80034c0:	e7e9      	b.n	8003496 <_realloc_r+0x1c>
 80034c2:	4635      	mov	r5, r6
 80034c4:	e7e7      	b.n	8003496 <_realloc_r+0x1c>

080034c6 <__ascii_wctomb>:
 80034c6:	b149      	cbz	r1, 80034dc <__ascii_wctomb+0x16>
 80034c8:	2aff      	cmp	r2, #255	; 0xff
 80034ca:	bf85      	ittet	hi
 80034cc:	238a      	movhi	r3, #138	; 0x8a
 80034ce:	6003      	strhi	r3, [r0, #0]
 80034d0:	700a      	strbls	r2, [r1, #0]
 80034d2:	f04f 30ff 	movhi.w	r0, #4294967295
 80034d6:	bf98      	it	ls
 80034d8:	2001      	movls	r0, #1
 80034da:	4770      	bx	lr
 80034dc:	4608      	mov	r0, r1
 80034de:	4770      	bx	lr

080034e0 <_malloc_usable_size_r>:
 80034e0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80034e4:	1f18      	subs	r0, r3, #4
 80034e6:	2b00      	cmp	r3, #0
 80034e8:	bfbc      	itt	lt
 80034ea:	580b      	ldrlt	r3, [r1, r0]
 80034ec:	18c0      	addlt	r0, r0, r3
 80034ee:	4770      	bx	lr

080034f0 <_init>:
 80034f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80034f2:	bf00      	nop
 80034f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80034f6:	bc08      	pop	{r3}
 80034f8:	469e      	mov	lr, r3
 80034fa:	4770      	bx	lr

080034fc <_fini>:
 80034fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80034fe:	bf00      	nop
 8003500:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003502:	bc08      	pop	{r3}
 8003504:	469e      	mov	lr, r3
 8003506:	4770      	bx	lr
