
STM32F401.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000034d8  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000298  08003678  08003678  00013678  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003910  08003910  000201d4  2**0
                  CONTENTS
  4 .ARM          00000000  08003910  08003910  000201d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003910  08003910  000201d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003910  08003910  00013910  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003914  08003914  00013914  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  08003918  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000150  200001d4  08003aec  000201d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000324  08003aec  00020324  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   000039c5  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000ab5  00000000  00000000  00023bc9  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000001f8  00000000  00000000  00024680  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000180  00000000  00000000  00024878  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000e6bc  00000000  00000000  000249f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000239d  00000000  00000000  000330b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00053323  00000000  00000000  00035451  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00088774  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000fe8  00000000  00000000  000887f0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d4 	.word	0x200001d4
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08003660 	.word	0x08003660

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d8 	.word	0x200001d8
 80001dc:	08003660 	.word	0x08003660

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003ce:	f1a4 0401 	sub.w	r4, r4, #1
 80003d2:	d1e9      	bne.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <main>:
  * @param  none
  * @retval 0 if success
 */

int main(void)
{
 8000bb8:	b580      	push	{r7, lr}
 8000bba:	af00      	add	r7, sp, #0

	USART2_Init(115200);
 8000bbc:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
 8000bc0:	f000 fb94 	bl	80012ec <USART2_Init>
	GPIOB_init();
 8000bc4:	f000 f818 	bl	8000bf8 <GPIOB_init>
	TIM4_init();
 8000bc8:	f000 f84e 	bl	8000c68 <TIM4_init>
	TIM4_input_capture_config();
 8000bcc:	f000 f886 	bl	8000cdc <TIM4_input_capture_config>


	//TIM3_configuration();
	TIM3_set_periodic_IRQ((uint32_t) 500);
 8000bd0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000bd4:	f000 f9ac 	bl	8000f30 <TIM3_set_periodic_IRQ>
	TIM4_set_periodic_IRQ((uint32_t) 500);
 8000bd8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000bdc:	f000 f9f6 	bl	8000fcc <TIM4_set_periodic_IRQ>
	USART2_set_IRQ();
 8000be0:	f000 fc22 	bl	8001428 <USART2_set_IRQ>

	/* Active l'endormissement */
	__WFI();
 8000be4:	bf30      	wfi
	SCB->SCR |= SCB_SCR_SLEEPONEXIT_Msk;
 8000be6:	4b03      	ldr	r3, [pc, #12]	; (8000bf4 <main+0x3c>)
 8000be8:	691b      	ldr	r3, [r3, #16]
 8000bea:	4a02      	ldr	r2, [pc, #8]	; (8000bf4 <main+0x3c>)
 8000bec:	f043 0302 	orr.w	r3, r3, #2
 8000bf0:	6113      	str	r3, [r2, #16]

	while(1){}
 8000bf2:	e7fe      	b.n	8000bf2 <main+0x3a>
 8000bf4:	e000ed00 	.word	0xe000ed00

08000bf8 <GPIOB_init>:
	return 0;
}

void GPIOB_init(void){
 8000bf8:	b480      	push	{r7}
 8000bfa:	af00      	add	r7, sp, #0
	/*Activation de l'horloge du GPIOB*/
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000bfc:	4b17      	ldr	r3, [pc, #92]	; (8000c5c <GPIOB_init+0x64>)
 8000bfe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c00:	4a16      	ldr	r2, [pc, #88]	; (8000c5c <GPIOB_init+0x64>)
 8000c02:	f043 0302 	orr.w	r3, r3, #2
 8000c06:	6313      	str	r3, [r2, #48]	; 0x30

	/* activation alternate fonction pour GPIOB pour la pin PB7*/
	GPIOB->MODER &= ~GPIO_MODER_MODER7_Msk;// mise à '10' des bits du registre MODER7 pour alternate function
 8000c08:	4b15      	ldr	r3, [pc, #84]	; (8000c60 <GPIOB_init+0x68>)
 8000c0a:	681b      	ldr	r3, [r3, #0]
 8000c0c:	4a14      	ldr	r2, [pc, #80]	; (8000c60 <GPIOB_init+0x68>)
 8000c0e:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000c12:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= GPIO_MODER_MODER7_1;
 8000c14:	4b12      	ldr	r3, [pc, #72]	; (8000c60 <GPIOB_init+0x68>)
 8000c16:	681b      	ldr	r3, [r3, #0]
 8000c18:	4a11      	ldr	r2, [pc, #68]	; (8000c60 <GPIOB_init+0x68>)
 8000c1a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000c1e:	6013      	str	r3, [r2, #0]
	GPIOB->AFR[0] &= GPIO_AFRL_AFSEL7_Msk;// dans la data sheet, section alternate fonction mapping p45, on voit que TIM4_CH2 est mappé avec la fonction alternative AF02 sur la pin PB7
 8000c20:	4b0f      	ldr	r3, [pc, #60]	; (8000c60 <GPIOB_init+0x68>)
 8000c22:	6a1b      	ldr	r3, [r3, #32]
 8000c24:	4a0e      	ldr	r2, [pc, #56]	; (8000c60 <GPIOB_init+0x68>)
 8000c26:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8000c2a:	6213      	str	r3, [r2, #32]
	GPIOB->AFR[0] |= GPIO_AFRL_AFSEL7_1;
 8000c2c:	4b0c      	ldr	r3, [pc, #48]	; (8000c60 <GPIOB_init+0x68>)
 8000c2e:	6a1b      	ldr	r3, [r3, #32]
 8000c30:	4a0b      	ldr	r2, [pc, #44]	; (8000c60 <GPIOB_init+0x68>)
 8000c32:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000c36:	6213      	str	r3, [r2, #32]

	/* PC13 in input mode, no pull */
	 GPIOC->MODER &= ~GPIO_MODER_MODE13_Msk;
 8000c38:	4b0a      	ldr	r3, [pc, #40]	; (8000c64 <GPIOB_init+0x6c>)
 8000c3a:	681b      	ldr	r3, [r3, #0]
 8000c3c:	4a09      	ldr	r2, [pc, #36]	; (8000c64 <GPIOB_init+0x6c>)
 8000c3e:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8000c42:	6013      	str	r3, [r2, #0]
	 GPIOC->PUPDR &= ~GPIO_PUPDR_PUPD13_Msk;
 8000c44:	4b07      	ldr	r3, [pc, #28]	; (8000c64 <GPIOB_init+0x6c>)
 8000c46:	68db      	ldr	r3, [r3, #12]
 8000c48:	4a06      	ldr	r2, [pc, #24]	; (8000c64 <GPIOB_init+0x6c>)
 8000c4a:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8000c4e:	60d3      	str	r3, [r2, #12]
}
 8000c50:	bf00      	nop
 8000c52:	46bd      	mov	sp, r7
 8000c54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c58:	4770      	bx	lr
 8000c5a:	bf00      	nop
 8000c5c:	40023800 	.word	0x40023800
 8000c60:	40020400 	.word	0x40020400
 8000c64:	40020800 	.word	0x40020800

08000c68 <TIM4_init>:

void TIM4_init(){
 8000c68:	b480      	push	{r7}
 8000c6a:	b085      	sub	sp, #20
 8000c6c:	af00      	add	r7, sp, #0
	/* activation de l'horloge */
	RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
 8000c6e:	4b18      	ldr	r3, [pc, #96]	; (8000cd0 <TIM4_init+0x68>)
 8000c70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c72:	4a17      	ldr	r2, [pc, #92]	; (8000cd0 <TIM4_init+0x68>)
 8000c74:	f043 0304 	orr.w	r3, r3, #4
 8000c78:	6413      	str	r3, [r2, #64]	; 0x40

	int freq_after_psc = 10000;// fréquence de 10kHz
 8000c7a:	f242 7310 	movw	r3, #10000	; 0x2710
 8000c7e:	60fb      	str	r3, [r7, #12]
	TIM4->PSC = (SystemCoreClock / freq_after_psc) -1; //psc = 1599
 8000c80:	4b14      	ldr	r3, [pc, #80]	; (8000cd4 <TIM4_init+0x6c>)
 8000c82:	681a      	ldr	r2, [r3, #0]
 8000c84:	68fb      	ldr	r3, [r7, #12]
 8000c86:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c8a:	4a13      	ldr	r2, [pc, #76]	; (8000cd8 <TIM4_init+0x70>)
 8000c8c:	3b01      	subs	r3, #1
 8000c8e:	6293      	str	r3, [r2, #40]	; 0x28

	/* Calcul de la valeur désirée pour la durée de comptage */
	int update_freq = 10000; // Fréquence de 10kHz
 8000c90:	f242 7310 	movw	r3, #10000	; 0x2710
 8000c94:	60bb      	str	r3, [r7, #8]
	int arr = SystemCoreClock / (update_freq * TIM4->PSC + 1);
 8000c96:	4b0f      	ldr	r3, [pc, #60]	; (8000cd4 <TIM4_init+0x6c>)
 8000c98:	681a      	ldr	r2, [r3, #0]
 8000c9a:	4b0f      	ldr	r3, [pc, #60]	; (8000cd8 <TIM4_init+0x70>)
 8000c9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000c9e:	68b9      	ldr	r1, [r7, #8]
 8000ca0:	fb01 f303 	mul.w	r3, r1, r3
 8000ca4:	3301      	adds	r3, #1
 8000ca6:	fbb2 f3f3 	udiv	r3, r2, r3
 8000caa:	607b      	str	r3, [r7, #4]
	TIM4->ARR = arr;
 8000cac:	4a0a      	ldr	r2, [pc, #40]	; (8000cd8 <TIM4_init+0x70>)
 8000cae:	687b      	ldr	r3, [r7, #4]
 8000cb0:	62d3      	str	r3, [r2, #44]	; 0x2c

	/* force le compteur et le prescaler à O avant le démarrage*/
	TIM4->EGR |= TIM_EGR_UG_Msk;
 8000cb2:	4b09      	ldr	r3, [pc, #36]	; (8000cd8 <TIM4_init+0x70>)
 8000cb4:	695b      	ldr	r3, [r3, #20]
 8000cb6:	4a08      	ldr	r2, [pc, #32]	; (8000cd8 <TIM4_init+0x70>)
 8000cb8:	f043 0301 	orr.w	r3, r3, #1
 8000cbc:	6153      	str	r3, [r2, #20]

	/* reset les flags */
	TIM4->SR = 0;
 8000cbe:	4b06      	ldr	r3, [pc, #24]	; (8000cd8 <TIM4_init+0x70>)
 8000cc0:	2200      	movs	r2, #0
 8000cc2:	611a      	str	r2, [r3, #16]
}
 8000cc4:	bf00      	nop
 8000cc6:	3714      	adds	r7, #20
 8000cc8:	46bd      	mov	sp, r7
 8000cca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cce:	4770      	bx	lr
 8000cd0:	40023800 	.word	0x40023800
 8000cd4:	20000000 	.word	0x20000000
 8000cd8:	40000800 	.word	0x40000800

08000cdc <TIM4_input_capture_config>:

void TIM4_input_capture_config(){
 8000cdc:	b480      	push	{r7}
 8000cde:	af00      	add	r7, sp, #0
	/* désactivation input capture mode pour modification*/
		TIM4->CCER &= ~TIM_CCER_CC1E_Msk;
 8000ce0:	4b29      	ldr	r3, [pc, #164]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000ce2:	6a1b      	ldr	r3, [r3, #32]
 8000ce4:	4a28      	ldr	r2, [pc, #160]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000ce6:	f023 0301 	bic.w	r3, r3, #1
 8000cea:	6213      	str	r3, [r2, #32]
		TIM4->CCER &= ~TIM_CCER_CC2E_Msk;
 8000cec:	4b26      	ldr	r3, [pc, #152]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000cee:	6a1b      	ldr	r3, [r3, #32]
 8000cf0:	4a25      	ldr	r2, [pc, #148]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000cf2:	f023 0310 	bic.w	r3, r3, #16
 8000cf6:	6213      	str	r3, [r2, #32]
		/* modification de CCMRR1 */
		//TIM4->CCMR1 &= ~TIM_CCMR1_IC2F_Msk;
		//TIM4->CCMR1 |= TIM_CCMR1_IC2F_3; //valeur du filtre pour les rebonds

		/*Mappe IC1 et IC2 sur TI2*/
		TIM4->CCMR1 &= ~TIM_CCMR1_CC1S_Msk;
 8000cf8:	4b23      	ldr	r3, [pc, #140]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000cfa:	699b      	ldr	r3, [r3, #24]
 8000cfc:	4a22      	ldr	r2, [pc, #136]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000cfe:	f023 0303 	bic.w	r3, r3, #3
 8000d02:	6193      	str	r3, [r2, #24]
		TIM4->CCMR1 |= TIM_CCMR1_CC1S_1; //met le registre à '10' pour mapper IC1 à TI2
 8000d04:	4b20      	ldr	r3, [pc, #128]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d06:	699b      	ldr	r3, [r3, #24]
 8000d08:	4a1f      	ldr	r2, [pc, #124]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d0a:	f043 0302 	orr.w	r3, r3, #2
 8000d0e:	6193      	str	r3, [r2, #24]
		TIM4->CCMR1 &= ~TIM_CCMR1_CC2S_Msk;
 8000d10:	4b1d      	ldr	r3, [pc, #116]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d12:	699b      	ldr	r3, [r3, #24]
 8000d14:	4a1c      	ldr	r2, [pc, #112]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d16:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000d1a:	6193      	str	r3, [r2, #24]
		TIM4->CCMR1 |= TIM_CCMR1_CC2S_0;//met le registre à '01' pour mapper IC2 à TI2
 8000d1c:	4b1a      	ldr	r3, [pc, #104]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d1e:	699b      	ldr	r3, [r3, #24]
 8000d20:	4a19      	ldr	r2, [pc, #100]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d22:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000d26:	6193      	str	r3, [r2, #24]

		/*Configuration de TI2FP1 sur front montant*/
		TIM4->CCER &= ~TIM_CCER_CC1P_Msk;//met le registre à '00' pour front montant
 8000d28:	4b17      	ldr	r3, [pc, #92]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d2a:	6a1b      	ldr	r3, [r3, #32]
 8000d2c:	4a16      	ldr	r2, [pc, #88]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d2e:	f023 0302 	bic.w	r3, r3, #2
 8000d32:	6213      	str	r3, [r2, #32]
		TIM4->CCER &= ~TIM_CCER_CC1NP_Msk;
 8000d34:	4b14      	ldr	r3, [pc, #80]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d36:	6a1b      	ldr	r3, [r3, #32]
 8000d38:	4a13      	ldr	r2, [pc, #76]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d3a:	f023 0308 	bic.w	r3, r3, #8
 8000d3e:	6213      	str	r3, [r2, #32]

		/*Configuration de TI2FP1 sur front descendant*/
		TIM4->CCER &= TIM_CCER_CC2NP_Msk;//met les bits à '01' pour configurer TI2FP1 en front descendant
 8000d40:	4b11      	ldr	r3, [pc, #68]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d42:	6a1b      	ldr	r3, [r3, #32]
 8000d44:	4a10      	ldr	r2, [pc, #64]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d46:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000d4a:	6213      	str	r3, [r2, #32]
		TIM4->CCER |= TIM_CCER_CC2P_Msk;
 8000d4c:	4b0e      	ldr	r3, [pc, #56]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d4e:	6a1b      	ldr	r3, [r3, #32]
 8000d50:	4a0d      	ldr	r2, [pc, #52]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d52:	f043 0320 	orr.w	r3, r3, #32
 8000d56:	6213      	str	r3, [r2, #32]


		/* résactivation input capture mode */
		TIM4->CCER |= TIM_CCER_CC1E_Msk;
 8000d58:	4b0b      	ldr	r3, [pc, #44]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d5a:	6a1b      	ldr	r3, [r3, #32]
 8000d5c:	4a0a      	ldr	r2, [pc, #40]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d5e:	f043 0301 	orr.w	r3, r3, #1
 8000d62:	6213      	str	r3, [r2, #32]
		TIM4->CCER |= TIM_CCER_CC2E_Msk;
 8000d64:	4b08      	ldr	r3, [pc, #32]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d66:	6a1b      	ldr	r3, [r3, #32]
 8000d68:	4a07      	ldr	r2, [pc, #28]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d6a:	f043 0310 	orr.w	r3, r3, #16
 8000d6e:	6213      	str	r3, [r2, #32]

		/*lance le compteur*/
		TIM4->CR1 |= TIM_CR1_CEN ;
 8000d70:	4b05      	ldr	r3, [pc, #20]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d72:	681b      	ldr	r3, [r3, #0]
 8000d74:	4a04      	ldr	r2, [pc, #16]	; (8000d88 <TIM4_input_capture_config+0xac>)
 8000d76:	f043 0301 	orr.w	r3, r3, #1
 8000d7a:	6013      	str	r3, [r2, #0]
}
 8000d7c:	bf00      	nop
 8000d7e:	46bd      	mov	sp, r7
 8000d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d84:	4770      	bx	lr
 8000d86:	bf00      	nop
 8000d88:	40000800 	.word	0x40000800

08000d8c <TIM2_set_PWM>:

    /* Lancement du compteur */
    TIM2->CR1 |= TIM_CR1_CEN;
}

void TIM2_set_PWM(uint32_t duty) {
 8000d8c:	b480      	push	{r7}
 8000d8e:	b083      	sub	sp, #12
 8000d90:	af00      	add	r7, sp, #0
 8000d92:	6078      	str	r0, [r7, #4]
    TIM2->CCR1 = (duty * TIM2->ARR) / 1000;
 8000d94:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000d98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000d9a:	687a      	ldr	r2, [r7, #4]
 8000d9c:	fb02 f303 	mul.w	r3, r2, r3
 8000da0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000da4:	4905      	ldr	r1, [pc, #20]	; (8000dbc <TIM2_set_PWM+0x30>)
 8000da6:	fba1 1303 	umull	r1, r3, r1, r3
 8000daa:	099b      	lsrs	r3, r3, #6
 8000dac:	6353      	str	r3, [r2, #52]	; 0x34
}
 8000dae:	bf00      	nop
 8000db0:	370c      	adds	r7, #12
 8000db2:	46bd      	mov	sp, r7
 8000db4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000db8:	4770      	bx	lr
 8000dba:	bf00      	nop
 8000dbc:	10624dd3 	.word	0x10624dd3

08000dc0 <NMI_Handler>:
  * @brief  This function handles NMI exception.
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
 8000dc0:	b480      	push	{r7}
 8000dc2:	af00      	add	r7, sp, #0
}
 8000dc4:	bf00      	nop
 8000dc6:	46bd      	mov	sp, r7
 8000dc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dcc:	4770      	bx	lr

08000dce <HardFault_Handler>:
  * @brief  This function handles Hard Fault exception.
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
 8000dce:	b480      	push	{r7}
 8000dd0:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Hard Fault exception occurs */
  while (1)
 8000dd2:	e7fe      	b.n	8000dd2 <HardFault_Handler+0x4>

08000dd4 <MemManage_Handler>:
  * @brief  This function handles Memory Manage exception.
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
 8000dd4:	b480      	push	{r7}
 8000dd6:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Memory Manage exception occurs */
  while (1)
 8000dd8:	e7fe      	b.n	8000dd8 <MemManage_Handler+0x4>

08000dda <BusFault_Handler>:
  * @brief  This function handles Bus Fault exception.
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
 8000dda:	b480      	push	{r7}
 8000ddc:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Bus Fault exception occurs */
  while (1)
 8000dde:	e7fe      	b.n	8000dde <BusFault_Handler+0x4>

08000de0 <UsageFault_Handler>:
  * @brief  This function handles Usage Fault exception.
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
 8000de0:	b480      	push	{r7}
 8000de2:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Usage Fault exception occurs */
  while (1)
 8000de4:	e7fe      	b.n	8000de4 <UsageFault_Handler+0x4>

08000de6 <SVC_Handler>:
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 8000de6:	b480      	push	{r7}
 8000de8:	af00      	add	r7, sp, #0
}
 8000dea:	bf00      	nop
 8000dec:	46bd      	mov	sp, r7
 8000dee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000df2:	4770      	bx	lr

08000df4 <DebugMon_Handler>:
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 8000df4:	b480      	push	{r7}
 8000df6:	af00      	add	r7, sp, #0
}
 8000df8:	bf00      	nop
 8000dfa:	46bd      	mov	sp, r7
 8000dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e00:	4770      	bx	lr

08000e02 <PendSV_Handler>:
  * @brief  This function handles PendSVC exception.
  * @param  None
  * @retval None
  */
void PendSV_Handler(void)
{
 8000e02:	b480      	push	{r7}
 8000e04:	af00      	add	r7, sp, #0
}
 8000e06:	bf00      	nop
 8000e08:	46bd      	mov	sp, r7
 8000e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e0e:	4770      	bx	lr

08000e10 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000e10:	b580      	push	{r7, lr}
 8000e12:	b086      	sub	sp, #24
 8000e14:	af00      	add	r7, sp, #0
 8000e16:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000e18:	4a14      	ldr	r2, [pc, #80]	; (8000e6c <_sbrk+0x5c>)
 8000e1a:	4b15      	ldr	r3, [pc, #84]	; (8000e70 <_sbrk+0x60>)
 8000e1c:	1ad3      	subs	r3, r2, r3
 8000e1e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000e20:	697b      	ldr	r3, [r7, #20]
 8000e22:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000e24:	4b13      	ldr	r3, [pc, #76]	; (8000e74 <_sbrk+0x64>)
 8000e26:	681b      	ldr	r3, [r3, #0]
 8000e28:	2b00      	cmp	r3, #0
 8000e2a:	d102      	bne.n	8000e32 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000e2c:	4b11      	ldr	r3, [pc, #68]	; (8000e74 <_sbrk+0x64>)
 8000e2e:	4a12      	ldr	r2, [pc, #72]	; (8000e78 <_sbrk+0x68>)
 8000e30:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000e32:	4b10      	ldr	r3, [pc, #64]	; (8000e74 <_sbrk+0x64>)
 8000e34:	681a      	ldr	r2, [r3, #0]
 8000e36:	687b      	ldr	r3, [r7, #4]
 8000e38:	4413      	add	r3, r2
 8000e3a:	693a      	ldr	r2, [r7, #16]
 8000e3c:	429a      	cmp	r2, r3
 8000e3e:	d207      	bcs.n	8000e50 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000e40:	f000 fb8c 	bl	800155c <__errno>
 8000e44:	4602      	mov	r2, r0
 8000e46:	230c      	movs	r3, #12
 8000e48:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 8000e4a:	f04f 33ff 	mov.w	r3, #4294967295
 8000e4e:	e009      	b.n	8000e64 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000e50:	4b08      	ldr	r3, [pc, #32]	; (8000e74 <_sbrk+0x64>)
 8000e52:	681b      	ldr	r3, [r3, #0]
 8000e54:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000e56:	4b07      	ldr	r3, [pc, #28]	; (8000e74 <_sbrk+0x64>)
 8000e58:	681a      	ldr	r2, [r3, #0]
 8000e5a:	687b      	ldr	r3, [r7, #4]
 8000e5c:	4413      	add	r3, r2
 8000e5e:	4a05      	ldr	r2, [pc, #20]	; (8000e74 <_sbrk+0x64>)
 8000e60:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000e62:	68fb      	ldr	r3, [r7, #12]
}
 8000e64:	4618      	mov	r0, r3
 8000e66:	3718      	adds	r7, #24
 8000e68:	46bd      	mov	sp, r7
 8000e6a:	bd80      	pop	{r7, pc}
 8000e6c:	20018000 	.word	0x20018000
 8000e70:	00000400 	.word	0x00000400
 8000e74:	200001f0 	.word	0x200001f0
 8000e78:	20000328 	.word	0x20000328

08000e7c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000e7c:	b480      	push	{r7}
 8000e7e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000e80:	4b06      	ldr	r3, [pc, #24]	; (8000e9c <SystemInit+0x20>)
 8000e82:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000e86:	4a05      	ldr	r2, [pc, #20]	; (8000e9c <SystemInit+0x20>)
 8000e88:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000e8c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000e90:	bf00      	nop
 8000e92:	46bd      	mov	sp, r7
 8000e94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e98:	4770      	bx	lr
 8000e9a:	bf00      	nop
 8000e9c:	e000ed00 	.word	0xe000ed00

08000ea0 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000ea0:	b480      	push	{r7}
 8000ea2:	b083      	sub	sp, #12
 8000ea4:	af00      	add	r7, sp, #0
 8000ea6:	4603      	mov	r3, r0
 8000ea8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000eaa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000eae:	2b00      	cmp	r3, #0
 8000eb0:	db0b      	blt.n	8000eca <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000eb2:	79fb      	ldrb	r3, [r7, #7]
 8000eb4:	f003 021f 	and.w	r2, r3, #31
 8000eb8:	4907      	ldr	r1, [pc, #28]	; (8000ed8 <__NVIC_EnableIRQ+0x38>)
 8000eba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ebe:	095b      	lsrs	r3, r3, #5
 8000ec0:	2001      	movs	r0, #1
 8000ec2:	fa00 f202 	lsl.w	r2, r0, r2
 8000ec6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000eca:	bf00      	nop
 8000ecc:	370c      	adds	r7, #12
 8000ece:	46bd      	mov	sp, r7
 8000ed0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ed4:	4770      	bx	lr
 8000ed6:	bf00      	nop
 8000ed8:	e000e100 	.word	0xe000e100

08000edc <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000edc:	b480      	push	{r7}
 8000ede:	b083      	sub	sp, #12
 8000ee0:	af00      	add	r7, sp, #0
 8000ee2:	4603      	mov	r3, r0
 8000ee4:	6039      	str	r1, [r7, #0]
 8000ee6:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000ee8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000eec:	2b00      	cmp	r3, #0
 8000eee:	db0a      	blt.n	8000f06 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000ef0:	683b      	ldr	r3, [r7, #0]
 8000ef2:	b2da      	uxtb	r2, r3
 8000ef4:	490c      	ldr	r1, [pc, #48]	; (8000f28 <__NVIC_SetPriority+0x4c>)
 8000ef6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000efa:	0112      	lsls	r2, r2, #4
 8000efc:	b2d2      	uxtb	r2, r2
 8000efe:	440b      	add	r3, r1
 8000f00:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000f04:	e00a      	b.n	8000f1c <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f06:	683b      	ldr	r3, [r7, #0]
 8000f08:	b2da      	uxtb	r2, r3
 8000f0a:	4908      	ldr	r1, [pc, #32]	; (8000f2c <__NVIC_SetPriority+0x50>)
 8000f0c:	79fb      	ldrb	r3, [r7, #7]
 8000f0e:	f003 030f 	and.w	r3, r3, #15
 8000f12:	3b04      	subs	r3, #4
 8000f14:	0112      	lsls	r2, r2, #4
 8000f16:	b2d2      	uxtb	r2, r2
 8000f18:	440b      	add	r3, r1
 8000f1a:	761a      	strb	r2, [r3, #24]
}
 8000f1c:	bf00      	nop
 8000f1e:	370c      	adds	r7, #12
 8000f20:	46bd      	mov	sp, r7
 8000f22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f26:	4770      	bx	lr
 8000f28:	e000e100 	.word	0xe000e100
 8000f2c:	e000ed00 	.word	0xe000ed00

08000f30 <TIM3_set_periodic_IRQ>:


#include "timer.h"


void TIM3_set_periodic_IRQ(uint32_t ms){
 8000f30:	b580      	push	{r7, lr}
 8000f32:	b082      	sub	sp, #8
 8000f34:	af00      	add	r7, sp, #0
 8000f36:	6078      	str	r0, [r7, #4]

	/* définit piorité de prise en compte de l'interruption au niveau du NVIC*/
	NVIC_SetPriority(TIM3_IRQn,10);
 8000f38:	210a      	movs	r1, #10
 8000f3a:	201d      	movs	r0, #29
 8000f3c:	f7ff ffce 	bl	8000edc <__NVIC_SetPriority>
	/* autorise les interruptions au niveau du NVIC*/
	NVIC_EnableIRQ(TIM3_IRQn);
 8000f40:	201d      	movs	r0, #29
 8000f42:	f7ff ffad 	bl	8000ea0 <__NVIC_EnableIRQ>
	/*autorise IRQ sur le flag UIF*/
	TIM3->DIER |= TIM_DIER_UIE;
 8000f46:	4b08      	ldr	r3, [pc, #32]	; (8000f68 <TIM3_set_periodic_IRQ+0x38>)
 8000f48:	68db      	ldr	r3, [r3, #12]
 8000f4a:	4a07      	ldr	r2, [pc, #28]	; (8000f68 <TIM3_set_periodic_IRQ+0x38>)
 8000f4c:	f043 0301 	orr.w	r3, r3, #1
 8000f50:	60d3      	str	r3, [r2, #12]

	TIM_set_periodic_event(ms, TIM3);
 8000f52:	4905      	ldr	r1, [pc, #20]	; (8000f68 <TIM3_set_periodic_IRQ+0x38>)
 8000f54:	6878      	ldr	r0, [r7, #4]
 8000f56:	f000 f949 	bl	80011ec <TIM_set_periodic_event>

	led_luminsosity=0;
 8000f5a:	4b04      	ldr	r3, [pc, #16]	; (8000f6c <TIM3_set_periodic_IRQ+0x3c>)
 8000f5c:	2200      	movs	r2, #0
 8000f5e:	601a      	str	r2, [r3, #0]


}
 8000f60:	bf00      	nop
 8000f62:	3708      	adds	r7, #8
 8000f64:	46bd      	mov	sp, r7
 8000f66:	bd80      	pop	{r7, pc}
 8000f68:	40000400 	.word	0x40000400
 8000f6c:	20000200 	.word	0x20000200

08000f70 <TIM3_IRQHandler>:
void TIM3_IRQHandler(void){
 8000f70:	b580      	push	{r7, lr}
 8000f72:	af00      	add	r7, sp, #0
//	/* teste si le drapeau relatif à l'interruption est à '1'et test si l'interruption relative à ce drapeau est autorisée*/
 	if((TIM3->SR & TIM_SR_UIF) && (TIM3->DIER & TIM_DIER_UIE)){
 8000f74:	4b13      	ldr	r3, [pc, #76]	; (8000fc4 <TIM3_IRQHandler+0x54>)
 8000f76:	691b      	ldr	r3, [r3, #16]
 8000f78:	f003 0301 	and.w	r3, r3, #1
 8000f7c:	2b00      	cmp	r3, #0
 8000f7e:	d019      	beq.n	8000fb4 <TIM3_IRQHandler+0x44>
 8000f80:	4b10      	ldr	r3, [pc, #64]	; (8000fc4 <TIM3_IRQHandler+0x54>)
 8000f82:	68db      	ldr	r3, [r3, #12]
 8000f84:	f003 0301 	and.w	r3, r3, #1
 8000f88:	2b00      	cmp	r3, #0
 8000f8a:	d013      	beq.n	8000fb4 <TIM3_IRQHandler+0x44>
 		TIM2_set_PWM(led_luminsosity*100);
 8000f8c:	4b0e      	ldr	r3, [pc, #56]	; (8000fc8 <TIM3_IRQHandler+0x58>)
 8000f8e:	681b      	ldr	r3, [r3, #0]
 8000f90:	2264      	movs	r2, #100	; 0x64
 8000f92:	fb02 f303 	mul.w	r3, r2, r3
 8000f96:	4618      	mov	r0, r3
 8000f98:	f7ff fef8 	bl	8000d8c <TIM2_set_PWM>
 		led_luminsosity++;
 8000f9c:	4b0a      	ldr	r3, [pc, #40]	; (8000fc8 <TIM3_IRQHandler+0x58>)
 8000f9e:	681b      	ldr	r3, [r3, #0]
 8000fa0:	3301      	adds	r3, #1
 8000fa2:	4a09      	ldr	r2, [pc, #36]	; (8000fc8 <TIM3_IRQHandler+0x58>)
 8000fa4:	6013      	str	r3, [r2, #0]
		if(led_luminsosity>10)
 8000fa6:	4b08      	ldr	r3, [pc, #32]	; (8000fc8 <TIM3_IRQHandler+0x58>)
 8000fa8:	681b      	ldr	r3, [r3, #0]
 8000faa:	2b0a      	cmp	r3, #10
 8000fac:	dd02      	ble.n	8000fb4 <TIM3_IRQHandler+0x44>
			led_luminsosity=0;
 8000fae:	4b06      	ldr	r3, [pc, #24]	; (8000fc8 <TIM3_IRQHandler+0x58>)
 8000fb0:	2200      	movs	r2, #0
 8000fb2:	601a      	str	r2, [r3, #0]
 	}
 	/*remise à 0 du drapeau d'état*/
 	TIM3->SR &= ~TIM_SR_UIF;
 8000fb4:	4b03      	ldr	r3, [pc, #12]	; (8000fc4 <TIM3_IRQHandler+0x54>)
 8000fb6:	691b      	ldr	r3, [r3, #16]
 8000fb8:	4a02      	ldr	r2, [pc, #8]	; (8000fc4 <TIM3_IRQHandler+0x54>)
 8000fba:	f023 0301 	bic.w	r3, r3, #1
 8000fbe:	6113      	str	r3, [r2, #16]
}
 8000fc0:	bf00      	nop
 8000fc2:	bd80      	pop	{r7, pc}
 8000fc4:	40000400 	.word	0x40000400
 8000fc8:	20000200 	.word	0x20000200

08000fcc <TIM4_set_periodic_IRQ>:

void TIM4_set_periodic_IRQ(uint32_t ms){
 8000fcc:	b580      	push	{r7, lr}
 8000fce:	b082      	sub	sp, #8
 8000fd0:	af00      	add	r7, sp, #0
 8000fd2:	6078      	str	r0, [r7, #4]

	/* définit piorité de prise en compte de l'interruption au niveau du NVIC*/
	NVIC_SetPriority(TIM4_IRQn,10);
 8000fd4:	210a      	movs	r1, #10
 8000fd6:	201e      	movs	r0, #30
 8000fd8:	f7ff ff80 	bl	8000edc <__NVIC_SetPriority>
	/* autorise les interruptions au niveau du NVIC*/
	NVIC_EnableIRQ(TIM4_IRQn);
 8000fdc:	201e      	movs	r0, #30
 8000fde:	f7ff ff5f 	bl	8000ea0 <__NVIC_EnableIRQ>

	/*autorise IRQ sur le flag CC2IF*/
	TIM4->DIER |= TIM_DIER_CC2IE;
 8000fe2:	4b15      	ldr	r3, [pc, #84]	; (8001038 <TIM4_set_periodic_IRQ+0x6c>)
 8000fe4:	68db      	ldr	r3, [r3, #12]
 8000fe6:	4a14      	ldr	r2, [pc, #80]	; (8001038 <TIM4_set_periodic_IRQ+0x6c>)
 8000fe8:	f043 0304 	orr.w	r3, r3, #4
 8000fec:	60d3      	str	r3, [r2, #12]
	/*autorise IRQ sur le flag CC2IF*/
	TIM4->DIER |= TIM_DIER_CC1IE;
 8000fee:	4b12      	ldr	r3, [pc, #72]	; (8001038 <TIM4_set_periodic_IRQ+0x6c>)
 8000ff0:	68db      	ldr	r3, [r3, #12]
 8000ff2:	4a11      	ldr	r2, [pc, #68]	; (8001038 <TIM4_set_periodic_IRQ+0x6c>)
 8000ff4:	f043 0302 	orr.w	r3, r3, #2
 8000ff8:	60d3      	str	r3, [r2, #12]
	/*autorise IRQ sur le flag UIF*/
	TIM4->DIER |= TIM_DIER_UIE;
 8000ffa:	4b0f      	ldr	r3, [pc, #60]	; (8001038 <TIM4_set_periodic_IRQ+0x6c>)
 8000ffc:	68db      	ldr	r3, [r3, #12]
 8000ffe:	4a0e      	ldr	r2, [pc, #56]	; (8001038 <TIM4_set_periodic_IRQ+0x6c>)
 8001000:	f043 0301 	orr.w	r3, r3, #1
 8001004:	60d3      	str	r3, [r2, #12]


	TIM_set_periodic_event(ms, TIM4);
 8001006:	490c      	ldr	r1, [pc, #48]	; (8001038 <TIM4_set_periodic_IRQ+0x6c>)
 8001008:	6878      	ldr	r0, [r7, #4]
 800100a:	f000 f8ef 	bl	80011ec <TIM_set_periodic_event>

	/**on initialise toutes les variable pour mesurer la durée de la pression à 0*/
	duration=0;
 800100e:	4b0b      	ldr	r3, [pc, #44]	; (800103c <TIM4_set_periodic_IRQ+0x70>)
 8001010:	f04f 0200 	mov.w	r2, #0
 8001014:	601a      	str	r2, [r3, #0]
	begin=0;
 8001016:	4b0a      	ldr	r3, [pc, #40]	; (8001040 <TIM4_set_periodic_IRQ+0x74>)
 8001018:	2200      	movs	r2, #0
 800101a:	801a      	strh	r2, [r3, #0]
	end=0;
 800101c:	4b09      	ldr	r3, [pc, #36]	; (8001044 <TIM4_set_periodic_IRQ+0x78>)
 800101e:	2200      	movs	r2, #0
 8001020:	801a      	strh	r2, [r3, #0]
	nb_overflows=0;
 8001022:	4b09      	ldr	r3, [pc, #36]	; (8001048 <TIM4_set_periodic_IRQ+0x7c>)
 8001024:	2200      	movs	r2, #0
 8001026:	801a      	strh	r2, [r3, #0]

	tim_freq=ms;
 8001028:	687b      	ldr	r3, [r7, #4]
 800102a:	4a08      	ldr	r2, [pc, #32]	; (800104c <TIM4_set_periodic_IRQ+0x80>)
 800102c:	6013      	str	r3, [r2, #0]


}
 800102e:	bf00      	nop
 8001030:	3708      	adds	r7, #8
 8001032:	46bd      	mov	sp, r7
 8001034:	bd80      	pop	{r7, pc}
 8001036:	bf00      	nop
 8001038:	40000800 	.word	0x40000800
 800103c:	20000208 	.word	0x20000208
 8001040:	2000030c 	.word	0x2000030c
 8001044:	20000204 	.word	0x20000204
 8001048:	200001fc 	.word	0x200001fc
 800104c:	20000310 	.word	0x20000310

08001050 <TIM4_IRQHandler>:
void TIM4_IRQHandler(void){
 8001050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001054:	b086      	sub	sp, #24
 8001056:	af04      	add	r7, sp, #16
	/* pour detecter font descendant
	 * teste si le drapeau relatif à l'interruption est à '1' et  teste si l'interruption relative à ce drapeau est autorisée*/
 	if((TIM4->SR & TIM_SR_CC2IF) && (TIM4->DIER & TIM_DIER_CC2IE)){
 8001058:	4b47      	ldr	r3, [pc, #284]	; (8001178 <TIM4_IRQHandler+0x128>)
 800105a:	691b      	ldr	r3, [r3, #16]
 800105c:	f003 0304 	and.w	r3, r3, #4
 8001060:	2b00      	cmp	r3, #0
 8001062:	d013      	beq.n	800108c <TIM4_IRQHandler+0x3c>
 8001064:	4b44      	ldr	r3, [pc, #272]	; (8001178 <TIM4_IRQHandler+0x128>)
 8001066:	68db      	ldr	r3, [r3, #12]
 8001068:	f003 0304 	and.w	r3, r3, #4
 800106c:	2b00      	cmp	r3, #0
 800106e:	d00d      	beq.n	800108c <TIM4_IRQHandler+0x3c>
 		begin = TIM4->CCR2;
 8001070:	4b41      	ldr	r3, [pc, #260]	; (8001178 <TIM4_IRQHandler+0x128>)
 8001072:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001074:	b29a      	uxth	r2, r3
 8001076:	4b41      	ldr	r3, [pc, #260]	; (800117c <TIM4_IRQHandler+0x12c>)
 8001078:	801a      	strh	r2, [r3, #0]
 		//USART2_transmit_IRQ("falling edge\r\n", 14);

 	/*remise à 0 du drapeau d'état*/
	TIM3->SR &= ~TIM_SR_CC2IF;
 800107a:	4b41      	ldr	r3, [pc, #260]	; (8001180 <TIM4_IRQHandler+0x130>)
 800107c:	691b      	ldr	r3, [r3, #16]
 800107e:	4a40      	ldr	r2, [pc, #256]	; (8001180 <TIM4_IRQHandler+0x130>)
 8001080:	f023 0304 	bic.w	r3, r3, #4
 8001084:	6113      	str	r3, [r2, #16]
	nb_overflows=0;
 8001086:	4b3f      	ldr	r3, [pc, #252]	; (8001184 <TIM4_IRQHandler+0x134>)
 8001088:	2200      	movs	r2, #0
 800108a:	801a      	strh	r2, [r3, #0]

 	}

	//permet de générer une interrution des qu'un overflow du TIM4 survient
 	if((TIM4->SR & TIM_SR_UIF) && (TIM4->DIER & TIM_DIER_UIE)){
 800108c:	4b3a      	ldr	r3, [pc, #232]	; (8001178 <TIM4_IRQHandler+0x128>)
 800108e:	691b      	ldr	r3, [r3, #16]
 8001090:	f003 0301 	and.w	r3, r3, #1
 8001094:	2b00      	cmp	r3, #0
 8001096:	d011      	beq.n	80010bc <TIM4_IRQHandler+0x6c>
 8001098:	4b37      	ldr	r3, [pc, #220]	; (8001178 <TIM4_IRQHandler+0x128>)
 800109a:	68db      	ldr	r3, [r3, #12]
 800109c:	f003 0301 	and.w	r3, r3, #1
 80010a0:	2b00      	cmp	r3, #0
 80010a2:	d00b      	beq.n	80010bc <TIM4_IRQHandler+0x6c>
 		nb_overflows++;
 80010a4:	4b37      	ldr	r3, [pc, #220]	; (8001184 <TIM4_IRQHandler+0x134>)
 80010a6:	881b      	ldrh	r3, [r3, #0]
 80010a8:	3301      	adds	r3, #1
 80010aa:	b29a      	uxth	r2, r3
 80010ac:	4b35      	ldr	r3, [pc, #212]	; (8001184 <TIM4_IRQHandler+0x134>)
 80010ae:	801a      	strh	r2, [r3, #0]

 	/*remise à 0 du drapeau d'état*/
 		TIM4->SR &= ~TIM_SR_UIF;
 80010b0:	4b31      	ldr	r3, [pc, #196]	; (8001178 <TIM4_IRQHandler+0x128>)
 80010b2:	691b      	ldr	r3, [r3, #16]
 80010b4:	4a30      	ldr	r2, [pc, #192]	; (8001178 <TIM4_IRQHandler+0x128>)
 80010b6:	f023 0301 	bic.w	r3, r3, #1
 80010ba:	6113      	str	r3, [r2, #16]



 	/* pour detecter font montant
 	* teste si le drapeau relatif à l'interruption est à '1' et  teste si l'interruption relative à ce drapeau est autorisée*/
 	if((TIM4->SR & TIM_SR_CC1IF_Msk) && (TIM4->DIER & TIM_DIER_CC1IE)){
 80010bc:	4b2e      	ldr	r3, [pc, #184]	; (8001178 <TIM4_IRQHandler+0x128>)
 80010be:	691b      	ldr	r3, [r3, #16]
 80010c0:	f003 0302 	and.w	r3, r3, #2
 80010c4:	2b00      	cmp	r3, #0
 80010c6:	d051      	beq.n	800116c <TIM4_IRQHandler+0x11c>
 80010c8:	4b2b      	ldr	r3, [pc, #172]	; (8001178 <TIM4_IRQHandler+0x128>)
 80010ca:	68db      	ldr	r3, [r3, #12]
 80010cc:	f003 0302 	and.w	r3, r3, #2
 80010d0:	2b00      	cmp	r3, #0
 80010d2:	d04b      	beq.n	800116c <TIM4_IRQHandler+0x11c>

		end = TIM4->CCR1;//récupération de la valeur de compteur stockée dans CCR2
 80010d4:	4b28      	ldr	r3, [pc, #160]	; (8001178 <TIM4_IRQHandler+0x128>)
 80010d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80010d8:	b29a      	uxth	r2, r3
 80010da:	4b2b      	ldr	r3, [pc, #172]	; (8001188 <TIM4_IRQHandler+0x138>)
 80010dc:	801a      	strh	r2, [r3, #0]
		//USART2_transmit_IRQ("rising edge\r\n", 13);

		duration = compute_duration(begin, end, nb_overflows, TIM4->ARR,CK_CNT_F);
 80010de:	4b27      	ldr	r3, [pc, #156]	; (800117c <TIM4_IRQHandler+0x12c>)
 80010e0:	8818      	ldrh	r0, [r3, #0]
 80010e2:	4b29      	ldr	r3, [pc, #164]	; (8001188 <TIM4_IRQHandler+0x138>)
 80010e4:	8819      	ldrh	r1, [r3, #0]
 80010e6:	4b27      	ldr	r3, [pc, #156]	; (8001184 <TIM4_IRQHandler+0x134>)
 80010e8:	881a      	ldrh	r2, [r3, #0]
 80010ea:	4b23      	ldr	r3, [pc, #140]	; (8001178 <TIM4_IRQHandler+0x128>)
 80010ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80010ee:	461c      	mov	r4, r3
 80010f0:	f242 7310 	movw	r3, #10000	; 0x2710
 80010f4:	9300      	str	r3, [sp, #0]
 80010f6:	4623      	mov	r3, r4
 80010f8:	f000 f84e 	bl	8001198 <compute_duration>
 80010fc:	eef0 7a40 	vmov.f32	s15, s0
 8001100:	4b22      	ldr	r3, [pc, #136]	; (800118c <TIM4_IRQHandler+0x13c>)
 8001102:	edc3 7a00 	vstr	s15, [r3]

		int str_len = snprintf(buffer, 255,"begin = %d, nb_of_overflows = %d, end = %d\r\n "
 8001106:	4b1d      	ldr	r3, [pc, #116]	; (800117c <TIM4_IRQHandler+0x12c>)
 8001108:	881b      	ldrh	r3, [r3, #0]
 800110a:	4698      	mov	r8, r3
 800110c:	4b1d      	ldr	r3, [pc, #116]	; (8001184 <TIM4_IRQHandler+0x134>)
 800110e:	881b      	ldrh	r3, [r3, #0]
 8001110:	461d      	mov	r5, r3
 8001112:	4b1d      	ldr	r3, [pc, #116]	; (8001188 <TIM4_IRQHandler+0x138>)
 8001114:	881b      	ldrh	r3, [r3, #0]
 8001116:	461e      	mov	r6, r3
 8001118:	4b1c      	ldr	r3, [pc, #112]	; (800118c <TIM4_IRQHandler+0x13c>)
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	4618      	mov	r0, r3
 800111e:	f7ff fa1b 	bl	8000558 <__aeabi_f2d>
 8001122:	4603      	mov	r3, r0
 8001124:	460c      	mov	r4, r1
 8001126:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800112a:	9601      	str	r6, [sp, #4]
 800112c:	9500      	str	r5, [sp, #0]
 800112e:	4643      	mov	r3, r8
 8001130:	4a17      	ldr	r2, [pc, #92]	; (8001190 <TIM4_IRQHandler+0x140>)
 8001132:	21ff      	movs	r1, #255	; 0xff
 8001134:	4817      	ldr	r0, [pc, #92]	; (8001194 <TIM4_IRQHandler+0x144>)
 8001136:	f000 fe9f 	bl	8001e78 <sniprintf>
 800113a:	6078      	str	r0, [r7, #4]
											"duration : %f s\r\n", begin, nb_overflows, end,duration);
		USART2_transmit_IRQ(buffer, str_len);
 800113c:	687b      	ldr	r3, [r7, #4]
 800113e:	4619      	mov	r1, r3
 8001140:	4814      	ldr	r0, [pc, #80]	; (8001194 <TIM4_IRQHandler+0x144>)
 8001142:	f000 f97d 	bl	8001440 <USART2_transmit_IRQ>
		//la fréquence d'update = SystemCoreClock/(TIM4->ARR * (TIM4->PSC+1))

		duration=0;
 8001146:	4b11      	ldr	r3, [pc, #68]	; (800118c <TIM4_IRQHandler+0x13c>)
 8001148:	f04f 0200 	mov.w	r2, #0
 800114c:	601a      	str	r2, [r3, #0]
		begin=0;
 800114e:	4b0b      	ldr	r3, [pc, #44]	; (800117c <TIM4_IRQHandler+0x12c>)
 8001150:	2200      	movs	r2, #0
 8001152:	801a      	strh	r2, [r3, #0]
		end=0;
 8001154:	4b0c      	ldr	r3, [pc, #48]	; (8001188 <TIM4_IRQHandler+0x138>)
 8001156:	2200      	movs	r2, #0
 8001158:	801a      	strh	r2, [r3, #0]
		nb_overflows=0;
 800115a:	4b0a      	ldr	r3, [pc, #40]	; (8001184 <TIM4_IRQHandler+0x134>)
 800115c:	2200      	movs	r2, #0
 800115e:	801a      	strh	r2, [r3, #0]

 	/*remise à 0 du drapeau d'état*/
	TIM4->SR &= ~TIM_SR_CC1IF_Msk;
 8001160:	4b05      	ldr	r3, [pc, #20]	; (8001178 <TIM4_IRQHandler+0x128>)
 8001162:	691b      	ldr	r3, [r3, #16]
 8001164:	4a04      	ldr	r2, [pc, #16]	; (8001178 <TIM4_IRQHandler+0x128>)
 8001166:	f023 0302 	bic.w	r3, r3, #2
 800116a:	6113      	str	r3, [r2, #16]
 	}


}
 800116c:	bf00      	nop
 800116e:	3708      	adds	r7, #8
 8001170:	46bd      	mov	sp, r7
 8001172:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001176:	bf00      	nop
 8001178:	40000800 	.word	0x40000800
 800117c:	2000030c 	.word	0x2000030c
 8001180:	40000400 	.word	0x40000400
 8001184:	200001fc 	.word	0x200001fc
 8001188:	20000204 	.word	0x20000204
 800118c:	20000208 	.word	0x20000208
 8001190:	08003678 	.word	0x08003678
 8001194:	2000020c 	.word	0x2000020c

08001198 <compute_duration>:


float compute_duration(uint16_t begin, uint16_t end, uint16_t nb_overflows, int arr, int periode)
{
 8001198:	b480      	push	{r7}
 800119a:	b087      	sub	sp, #28
 800119c:	af00      	add	r7, sp, #0
 800119e:	607b      	str	r3, [r7, #4]
 80011a0:	4603      	mov	r3, r0
 80011a2:	81fb      	strh	r3, [r7, #14]
 80011a4:	460b      	mov	r3, r1
 80011a6:	81bb      	strh	r3, [r7, #12]
 80011a8:	4613      	mov	r3, r2
 80011aa:	817b      	strh	r3, [r7, #10]
	float nb_cnt = end-begin + nb_overflows*arr;//nb of tics by the counter
 80011ac:	89ba      	ldrh	r2, [r7, #12]
 80011ae:	89fb      	ldrh	r3, [r7, #14]
 80011b0:	1ad2      	subs	r2, r2, r3
 80011b2:	897b      	ldrh	r3, [r7, #10]
 80011b4:	6879      	ldr	r1, [r7, #4]
 80011b6:	fb01 f303 	mul.w	r3, r1, r3
 80011ba:	4413      	add	r3, r2
 80011bc:	ee07 3a90 	vmov	s15, r3
 80011c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80011c4:	edc7 7a05 	vstr	s15, [r7, #20]
	float ck_cnt_T =(float) 1/CK_CNT_F;//duration of 1 tic (ck_cnt) in second
 80011c8:	4b07      	ldr	r3, [pc, #28]	; (80011e8 <compute_duration+0x50>)
 80011ca:	613b      	str	r3, [r7, #16]

	return ck_cnt_T*nb_cnt;
 80011cc:	ed97 7a04 	vldr	s14, [r7, #16]
 80011d0:	edd7 7a05 	vldr	s15, [r7, #20]
 80011d4:	ee67 7a27 	vmul.f32	s15, s14, s15

}
 80011d8:	eeb0 0a67 	vmov.f32	s0, s15
 80011dc:	371c      	adds	r7, #28
 80011de:	46bd      	mov	sp, r7
 80011e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011e4:	4770      	bx	lr
 80011e6:	bf00      	nop
 80011e8:	38d1b717 	.word	0x38d1b717

080011ec <TIM_set_periodic_event>:
 *         so ms can go up to 65535/10 ms (65,535 secondes)
 * @param  ms : duration of the cycle
 * @retval None
 */
 void TIM_set_periodic_event(uint32_t ms, TIM_TypeDef* tim)
 {
 80011ec:	b480      	push	{r7}
 80011ee:	b085      	sub	sp, #20
 80011f0:	af00      	add	r7, sp, #0
 80011f2:	6078      	str	r0, [r7, #4]
 80011f4:	6039      	str	r1, [r7, #0]
	/* choose the counter clock frequency. */
	uint32_t ck_cnt_f = CK_CNT_F;
 80011f6:	f242 7310 	movw	r3, #10000	; 0x2710
 80011fa:	60fb      	str	r3, [r7, #12]

	/* enable tim peripheral clock on APB1 */
	RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;		/* activate TIM3 Clock */
 80011fc:	4b15      	ldr	r3, [pc, #84]	; (8001254 <TIM_set_periodic_event+0x68>)
 80011fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001200:	4a14      	ldr	r2, [pc, #80]	; (8001254 <TIM_set_periodic_event+0x68>)
 8001202:	f043 0302 	orr.w	r3, r3, #2
 8001206:	6413      	str	r3, [r2, #64]	; 0x40

	/* set prescaler to generate a clock with ck_cnt_f frequency,
	 * it is supposed here that ck_psc frequency = SystemCoreClock */
	tim->PSC = (SystemCoreClock / ck_cnt_f ) - 1;
 8001208:	4b13      	ldr	r3, [pc, #76]	; (8001258 <TIM_set_periodic_event+0x6c>)
 800120a:	681a      	ldr	r2, [r3, #0]
 800120c:	68fb      	ldr	r3, [r7, #12]
 800120e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001212:	1e5a      	subs	r2, r3, #1
 8001214:	683b      	ldr	r3, [r7, #0]
 8001216:	629a      	str	r2, [r3, #40]	; 0x28
	 * 			= (ARR+1) / 10000
	 * in ms : Tms = 1000 * (ARR+1) /10000 = (ARR+1)/10
	 * => ARR = 10*Tms - 1
	 * note that the autoreload register is 16 bits for TIM3 and TIM4 and
	 *  32 bits for TIM2 and TIM5 */
	tim->ARR = 10*ms - 1 ;
 8001218:	687a      	ldr	r2, [r7, #4]
 800121a:	4613      	mov	r3, r2
 800121c:	009b      	lsls	r3, r3, #2
 800121e:	4413      	add	r3, r2
 8001220:	005b      	lsls	r3, r3, #1
 8001222:	1e5a      	subs	r2, r3, #1
 8001224:	683b      	ldr	r3, [r7, #0]
 8001226:	62da      	str	r2, [r3, #44]	; 0x2c
	/* update counter and prescaler : it clear prescaler and counter, to start
	 * with a full cycle. It will set the Update flag  (UIF), note that it can
	 * be avoided by setting the UDIS bit in CR1
	 * see TIM3_clear_periodic_event() */
	tim->EGR = TIM_EGR_UG;
 8001228:	683b      	ldr	r3, [r7, #0]
 800122a:	2201      	movs	r2, #1
 800122c:	615a      	str	r2, [r3, #20]
	/* As an update has been generated by software,
	 * clear the bit in the status register, all flags can also be cleared
	 * here
	 */
	tim->SR &= ~ TIM_SR_UIF ;
 800122e:	683b      	ldr	r3, [r7, #0]
 8001230:	691b      	ldr	r3, [r3, #16]
 8001232:	f023 0201 	bic.w	r2, r3, #1
 8001236:	683b      	ldr	r3, [r7, #0]
 8001238:	611a      	str	r2, [r3, #16]
	/* enable the counter (start counting) */
	tim->CR1 |= TIM_CR1_CEN ;
 800123a:	683b      	ldr	r3, [r7, #0]
 800123c:	681b      	ldr	r3, [r3, #0]
 800123e:	f043 0201 	orr.w	r2, r3, #1
 8001242:	683b      	ldr	r3, [r7, #0]
 8001244:	601a      	str	r2, [r3, #0]
 }
 8001246:	bf00      	nop
 8001248:	3714      	adds	r7, #20
 800124a:	46bd      	mov	sp, r7
 800124c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001250:	4770      	bx	lr
 8001252:	bf00      	nop
 8001254:	40023800 	.word	0x40023800
 8001258:	20000000 	.word	0x20000000

0800125c <__NVIC_EnableIRQ>:
{
 800125c:	b480      	push	{r7}
 800125e:	b083      	sub	sp, #12
 8001260:	af00      	add	r7, sp, #0
 8001262:	4603      	mov	r3, r0
 8001264:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001266:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800126a:	2b00      	cmp	r3, #0
 800126c:	db0b      	blt.n	8001286 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800126e:	79fb      	ldrb	r3, [r7, #7]
 8001270:	f003 021f 	and.w	r2, r3, #31
 8001274:	4907      	ldr	r1, [pc, #28]	; (8001294 <__NVIC_EnableIRQ+0x38>)
 8001276:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800127a:	095b      	lsrs	r3, r3, #5
 800127c:	2001      	movs	r0, #1
 800127e:	fa00 f202 	lsl.w	r2, r0, r2
 8001282:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8001286:	bf00      	nop
 8001288:	370c      	adds	r7, #12
 800128a:	46bd      	mov	sp, r7
 800128c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001290:	4770      	bx	lr
 8001292:	bf00      	nop
 8001294:	e000e100 	.word	0xe000e100

08001298 <__NVIC_SetPriority>:
{
 8001298:	b480      	push	{r7}
 800129a:	b083      	sub	sp, #12
 800129c:	af00      	add	r7, sp, #0
 800129e:	4603      	mov	r3, r0
 80012a0:	6039      	str	r1, [r7, #0]
 80012a2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80012a4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012a8:	2b00      	cmp	r3, #0
 80012aa:	db0a      	blt.n	80012c2 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80012ac:	683b      	ldr	r3, [r7, #0]
 80012ae:	b2da      	uxtb	r2, r3
 80012b0:	490c      	ldr	r1, [pc, #48]	; (80012e4 <__NVIC_SetPriority+0x4c>)
 80012b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012b6:	0112      	lsls	r2, r2, #4
 80012b8:	b2d2      	uxtb	r2, r2
 80012ba:	440b      	add	r3, r1
 80012bc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 80012c0:	e00a      	b.n	80012d8 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80012c2:	683b      	ldr	r3, [r7, #0]
 80012c4:	b2da      	uxtb	r2, r3
 80012c6:	4908      	ldr	r1, [pc, #32]	; (80012e8 <__NVIC_SetPriority+0x50>)
 80012c8:	79fb      	ldrb	r3, [r7, #7]
 80012ca:	f003 030f 	and.w	r3, r3, #15
 80012ce:	3b04      	subs	r3, #4
 80012d0:	0112      	lsls	r2, r2, #4
 80012d2:	b2d2      	uxtb	r2, r2
 80012d4:	440b      	add	r3, r1
 80012d6:	761a      	strb	r2, [r3, #24]
}
 80012d8:	bf00      	nop
 80012da:	370c      	adds	r7, #12
 80012dc:	46bd      	mov	sp, r7
 80012de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012e2:	4770      	bx	lr
 80012e4:	e000e100 	.word	0xe000e100
 80012e8:	e000ed00 	.word	0xe000ed00

080012ec <USART2_Init>:
  * @brief  Init USART2 @ baud,8,1,n
  * @param  baud rate
  * @retval None
  * */
void USART2_Init(uint32_t baud)
{
 80012ec:	b480      	push	{r7}
 80012ee:	b087      	sub	sp, #28
 80012f0:	af00      	add	r7, sp, #0
 80012f2:	6078      	str	r0, [r7, #4]
	//----------------GPIOA CONFIGURATION--------------------------------------

	/* Activation de l'horloge GPIOA */
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOCEN;
 80012f4:	4b48      	ldr	r3, [pc, #288]	; (8001418 <USART2_Init+0x12c>)
 80012f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012f8:	4a47      	ldr	r2, [pc, #284]	; (8001418 <USART2_Init+0x12c>)
 80012fa:	f043 0305 	orr.w	r3, r3, #5
 80012fe:	6313      	str	r3, [r2, #48]	; 0x30

	/*Configuration des pins PA2 et PA3 en "alternate function" AF07*/
	GPIOA->MODER &= ~(0xF << 4);
 8001300:	4b46      	ldr	r3, [pc, #280]	; (800141c <USART2_Init+0x130>)
 8001302:	681b      	ldr	r3, [r3, #0]
 8001304:	4a45      	ldr	r2, [pc, #276]	; (800141c <USART2_Init+0x130>)
 8001306:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800130a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (0xA << 4);
 800130c:	4b43      	ldr	r3, [pc, #268]	; (800141c <USART2_Init+0x130>)
 800130e:	681b      	ldr	r3, [r3, #0]
 8001310:	4a42      	ldr	r2, [pc, #264]	; (800141c <USART2_Init+0x130>)
 8001312:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8001316:	6013      	str	r3, [r2, #0]

	GPIOA->AFR[0] &= ~(0xFF << 8);
 8001318:	4b40      	ldr	r3, [pc, #256]	; (800141c <USART2_Init+0x130>)
 800131a:	6a1b      	ldr	r3, [r3, #32]
 800131c:	4a3f      	ldr	r2, [pc, #252]	; (800141c <USART2_Init+0x130>)
 800131e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8001322:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (0x77 << 8);//Alternate function AF07
 8001324:	4b3d      	ldr	r3, [pc, #244]	; (800141c <USART2_Init+0x130>)
 8001326:	6a1b      	ldr	r3, [r3, #32]
 8001328:	4a3c      	ldr	r2, [pc, #240]	; (800141c <USART2_Init+0x130>)
 800132a:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 800132e:	6213      	str	r3, [r2, #32]

	//-------------------------------------------------------------------------

	uint32_t tmp = 0, divmantissa, divfraction, apbclk;
 8001330:	2300      	movs	r3, #0
 8001332:	60bb      	str	r3, [r7, #8]

	/* initialisation de l'USART2 : baud,8,1,n */

	/* reset/de-reset USART2 */
	RCC->APB1RSTR |= RCC_APB1RSTR_USART2RST;
 8001334:	4b38      	ldr	r3, [pc, #224]	; (8001418 <USART2_Init+0x12c>)
 8001336:	6a1b      	ldr	r3, [r3, #32]
 8001338:	4a37      	ldr	r2, [pc, #220]	; (8001418 <USART2_Init+0x12c>)
 800133a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800133e:	6213      	str	r3, [r2, #32]
	RCC->APB1RSTR &= ~RCC_APB1RSTR_USART2RST;
 8001340:	4b35      	ldr	r3, [pc, #212]	; (8001418 <USART2_Init+0x12c>)
 8001342:	6a1b      	ldr	r3, [r3, #32]
 8001344:	4a34      	ldr	r2, [pc, #208]	; (8001418 <USART2_Init+0x12c>)
 8001346:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800134a:	6213      	str	r3, [r2, #32]
	/* enable USART2 clk */
	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 800134c:	4b32      	ldr	r3, [pc, #200]	; (8001418 <USART2_Init+0x12c>)
 800134e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001350:	4a31      	ldr	r2, [pc, #196]	; (8001418 <USART2_Init+0x12c>)
 8001352:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001356:	6413      	str	r3, [r2, #64]	; 0x40

	/*-------------- UART parameters configuration --------------- */
	USART2->CR1 &= ~USART_CR1_UE;
 8001358:	4b31      	ldr	r3, [pc, #196]	; (8001420 <USART2_Init+0x134>)
 800135a:	68db      	ldr	r3, [r3, #12]
 800135c:	4a30      	ldr	r2, [pc, #192]	; (8001420 <USART2_Init+0x134>)
 800135e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8001362:	60d3      	str	r3, [r2, #12]
	/* USART CR1 Configuration : tx and rx enable; oversampling = 16 */
	USART2->CR1 = USART_CR1_TE | USART_CR1_RE;
 8001364:	4b2e      	ldr	r3, [pc, #184]	; (8001420 <USART2_Init+0x134>)
 8001366:	220c      	movs	r2, #12
 8001368:	60da      	str	r2, [r3, #12]
	/* USART CR2 Configuration : 1 stop bit*/
	USART2->CR2 = 0 ;
 800136a:	4b2d      	ldr	r3, [pc, #180]	; (8001420 <USART2_Init+0x134>)
 800136c:	2200      	movs	r2, #0
 800136e:	611a      	str	r2, [r3, #16]
	/* USART CR3 Configuration : no flow control*/
	USART2->CR3 = 0;
 8001370:	4b2b      	ldr	r3, [pc, #172]	; (8001420 <USART2_Init+0x134>)
 8001372:	2200      	movs	r2, #0
 8001374:	615a      	str	r2, [r3, #20]
	/* USART BRR Configuration : depend on the bus frequency*/
	/* get APB1 prescaler to determine the USART clock frequency apbclk*/
	tmp = (RCC->CFGR & RCC_CFGR_PPRE1)>>10;
 8001376:	4b28      	ldr	r3, [pc, #160]	; (8001418 <USART2_Init+0x12c>)
 8001378:	689b      	ldr	r3, [r3, #8]
 800137a:	0a9b      	lsrs	r3, r3, #10
 800137c:	f003 0307 	and.w	r3, r3, #7
 8001380:	60bb      	str	r3, [r7, #8]
	if (tmp & 4){
 8001382:	68bb      	ldr	r3, [r7, #8]
 8001384:	f003 0304 	and.w	r3, r3, #4
 8001388:	2b00      	cmp	r3, #0
 800138a:	d00b      	beq.n	80013a4 <USART2_Init+0xb8>
		tmp =  (tmp & 3) + 1;
 800138c:	68bb      	ldr	r3, [r7, #8]
 800138e:	f003 0303 	and.w	r3, r3, #3
 8001392:	3301      	adds	r3, #1
 8001394:	60bb      	str	r3, [r7, #8]
		apbclk = SystemCoreClock >> tmp;
 8001396:	4b23      	ldr	r3, [pc, #140]	; (8001424 <USART2_Init+0x138>)
 8001398:	681a      	ldr	r2, [r3, #0]
 800139a:	68bb      	ldr	r3, [r7, #8]
 800139c:	fa22 f303 	lsr.w	r3, r2, r3
 80013a0:	60fb      	str	r3, [r7, #12]
 80013a2:	e002      	b.n	80013aa <USART2_Init+0xbe>
	}
	else {
		apbclk = SystemCoreClock;
 80013a4:	4b1f      	ldr	r3, [pc, #124]	; (8001424 <USART2_Init+0x138>)
 80013a6:	681b      	ldr	r3, [r3, #0]
 80013a8:	60fb      	str	r3, [r7, #12]
	}

	/* compute baud rate from the apbclock frequency
	 *  baud = apbclk /(8*(2-OVER8)*USARTDIV) */

	tmp = (USART2->CR1 & USART_CR1_OVER8)>>15;
 80013aa:	4b1d      	ldr	r3, [pc, #116]	; (8001420 <USART2_Init+0x134>)
 80013ac:	68db      	ldr	r3, [r3, #12]
 80013ae:	0bdb      	lsrs	r3, r3, #15
 80013b0:	f003 0301 	and.w	r3, r3, #1
 80013b4:	60bb      	str	r3, [r7, #8]
	if (tmp == 0) {
 80013b6:	68bb      	ldr	r3, [r7, #8]
 80013b8:	2b00      	cmp	r3, #0
 80013ba:	d10d      	bne.n	80013d8 <USART2_Init+0xec>
		/* OVER8 = 0, div by 16 */
		divmantissa = (apbclk/baud) >> 4;
 80013bc:	68fa      	ldr	r2, [r7, #12]
 80013be:	687b      	ldr	r3, [r7, #4]
 80013c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80013c4:	091b      	lsrs	r3, r3, #4
 80013c6:	617b      	str	r3, [r7, #20]
		divfraction = (apbclk/baud) & 0xF;
 80013c8:	68fa      	ldr	r2, [r7, #12]
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	fbb2 f3f3 	udiv	r3, r2, r3
 80013d0:	f003 030f 	and.w	r3, r3, #15
 80013d4:	613b      	str	r3, [r7, #16]
 80013d6:	e00c      	b.n	80013f2 <USART2_Init+0x106>
	}
	else {
		/* OVER8 = 0, div by 8 */
		divmantissa = (apbclk/baud) >> 3;
 80013d8:	68fa      	ldr	r2, [r7, #12]
 80013da:	687b      	ldr	r3, [r7, #4]
 80013dc:	fbb2 f3f3 	udiv	r3, r2, r3
 80013e0:	08db      	lsrs	r3, r3, #3
 80013e2:	617b      	str	r3, [r7, #20]
		divfraction = (apbclk/baud) & 3;
 80013e4:	68fa      	ldr	r2, [r7, #12]
 80013e6:	687b      	ldr	r3, [r7, #4]
 80013e8:	fbb2 f3f3 	udiv	r3, r2, r3
 80013ec:	f003 0303 	and.w	r3, r3, #3
 80013f0:	613b      	str	r3, [r7, #16]
	}
	/*USART2->BRR = mantissa and fraction part*/
	USART2->BRR = (divmantissa << 4) | divfraction ;
 80013f2:	697b      	ldr	r3, [r7, #20]
 80013f4:	011a      	lsls	r2, r3, #4
 80013f6:	490a      	ldr	r1, [pc, #40]	; (8001420 <USART2_Init+0x134>)
 80013f8:	693b      	ldr	r3, [r7, #16]
 80013fa:	4313      	orrs	r3, r2
 80013fc:	608b      	str	r3, [r1, #8]


	/* enable USART */
	USART2->CR1 |= USART_CR1_UE;
 80013fe:	4b08      	ldr	r3, [pc, #32]	; (8001420 <USART2_Init+0x134>)
 8001400:	68db      	ldr	r3, [r3, #12]
 8001402:	4a07      	ldr	r2, [pc, #28]	; (8001420 <USART2_Init+0x134>)
 8001404:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001408:	60d3      	str	r3, [r2, #12]

	/*-------------- interrupt --------------- */
	//NVIC_SetPriority(USART2_IRQn,0x15); /*  priority */
	//NVIC_EnableIRQ(USART2_IRQn);
}
 800140a:	bf00      	nop
 800140c:	371c      	adds	r7, #28
 800140e:	46bd      	mov	sp, r7
 8001410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001414:	4770      	bx	lr
 8001416:	bf00      	nop
 8001418:	40023800 	.word	0x40023800
 800141c:	40020000 	.word	0x40020000
 8001420:	40004400 	.word	0x40004400
 8001424:	20000000 	.word	0x20000000

08001428 <USART2_set_IRQ>:
uint32_t USART2_Print(char* str){
    return USART2_Transmit((uint8_t*) str, strlen(str));
}


void USART2_set_IRQ(){
 8001428:	b580      	push	{r7, lr}
 800142a:	af00      	add	r7, sp, #0
	/* définit piorité de prise en compte de l'interruption au niveau du NVIC*/
	NVIC_SetPriority(USART2_IRQn,10);
 800142c:	210a      	movs	r1, #10
 800142e:	2026      	movs	r0, #38	; 0x26
 8001430:	f7ff ff32 	bl	8001298 <__NVIC_SetPriority>
	/* autorise les interruptions au niveau du NVIC*/
	NVIC_EnableIRQ(USART2_IRQn);
 8001434:	2026      	movs	r0, #38	; 0x26
 8001436:	f7ff ff11 	bl	800125c <__NVIC_EnableIRQ>
}
 800143a:	bf00      	nop
 800143c:	bd80      	pop	{r7, pc}
	...

08001440 <USART2_transmit_IRQ>:

int32_t USART2_transmit_IRQ (uint8_t * data_p, uint32_t len_p){
 8001440:	b480      	push	{r7}
 8001442:	b083      	sub	sp, #12
 8001444:	af00      	add	r7, sp, #0
 8001446:	6078      	str	r0, [r7, #4]
 8001448:	6039      	str	r1, [r7, #0]

	if(USART2->CR1 & USART_CR1_TXEIE) return -1;
 800144a:	4b0f      	ldr	r3, [pc, #60]	; (8001488 <USART2_transmit_IRQ+0x48>)
 800144c:	68db      	ldr	r3, [r3, #12]
 800144e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001452:	2b00      	cmp	r3, #0
 8001454:	d002      	beq.n	800145c <USART2_transmit_IRQ+0x1c>
 8001456:	f04f 33ff 	mov.w	r3, #4294967295
 800145a:	e00f      	b.n	800147c <USART2_transmit_IRQ+0x3c>

	/*autorise IRQ sur le flag UIF*/
	USART2->CR1 |= USART_CR1_TXEIE;
 800145c:	4b0a      	ldr	r3, [pc, #40]	; (8001488 <USART2_transmit_IRQ+0x48>)
 800145e:	68db      	ldr	r3, [r3, #12]
 8001460:	4a09      	ldr	r2, [pc, #36]	; (8001488 <USART2_transmit_IRQ+0x48>)
 8001462:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001466:	60d3      	str	r3, [r2, #12]

	data=data_p;
 8001468:	4a08      	ldr	r2, [pc, #32]	; (800148c <USART2_transmit_IRQ+0x4c>)
 800146a:	687b      	ldr	r3, [r7, #4]
 800146c:	6013      	str	r3, [r2, #0]
	len = len_p;
 800146e:	683b      	ldr	r3, [r7, #0]
 8001470:	4a07      	ldr	r2, [pc, #28]	; (8001490 <USART2_transmit_IRQ+0x50>)
 8001472:	6013      	str	r3, [r2, #0]
	index_transmit = 0;
 8001474:	4b07      	ldr	r3, [pc, #28]	; (8001494 <USART2_transmit_IRQ+0x54>)
 8001476:	2200      	movs	r2, #0
 8001478:	601a      	str	r2, [r3, #0]

	return 0;
 800147a:	2300      	movs	r3, #0
}
 800147c:	4618      	mov	r0, r3
 800147e:	370c      	adds	r7, #12
 8001480:	46bd      	mov	sp, r7
 8001482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001486:	4770      	bx	lr
 8001488:	40004400 	.word	0x40004400
 800148c:	20000314 	.word	0x20000314
 8001490:	2000031c 	.word	0x2000031c
 8001494:	20000318 	.word	0x20000318

08001498 <USART2_IRQHandler>:

void USART2_IRQHandler() {
 8001498:	b480      	push	{r7}
 800149a:	af00      	add	r7, sp, #0

	if((USART2->SR & USART_SR_TXE) && (USART2->CR1 & USART_CR1_TXEIE)){
 800149c:	4b16      	ldr	r3, [pc, #88]	; (80014f8 <USART2_IRQHandler+0x60>)
 800149e:	681b      	ldr	r3, [r3, #0]
 80014a0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80014a4:	2b00      	cmp	r3, #0
 80014a6:	d012      	beq.n	80014ce <USART2_IRQHandler+0x36>
 80014a8:	4b13      	ldr	r3, [pc, #76]	; (80014f8 <USART2_IRQHandler+0x60>)
 80014aa:	68db      	ldr	r3, [r3, #12]
 80014ac:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80014b0:	2b00      	cmp	r3, #0
 80014b2:	d00c      	beq.n	80014ce <USART2_IRQHandler+0x36>
		USART2->DR = *data++;
 80014b4:	4b11      	ldr	r3, [pc, #68]	; (80014fc <USART2_IRQHandler+0x64>)
 80014b6:	681b      	ldr	r3, [r3, #0]
 80014b8:	1c5a      	adds	r2, r3, #1
 80014ba:	4910      	ldr	r1, [pc, #64]	; (80014fc <USART2_IRQHandler+0x64>)
 80014bc:	600a      	str	r2, [r1, #0]
 80014be:	781a      	ldrb	r2, [r3, #0]
 80014c0:	4b0d      	ldr	r3, [pc, #52]	; (80014f8 <USART2_IRQHandler+0x60>)
 80014c2:	605a      	str	r2, [r3, #4]
		index_transmit++;
 80014c4:	4b0e      	ldr	r3, [pc, #56]	; (8001500 <USART2_IRQHandler+0x68>)
 80014c6:	681b      	ldr	r3, [r3, #0]
 80014c8:	3301      	adds	r3, #1
 80014ca:	4a0d      	ldr	r2, [pc, #52]	; (8001500 <USART2_IRQHandler+0x68>)
 80014cc:	6013      	str	r3, [r2, #0]
	}

	/*Quand la transmission est terminée*/
	if(index_transmit >= len){
 80014ce:	4b0c      	ldr	r3, [pc, #48]	; (8001500 <USART2_IRQHandler+0x68>)
 80014d0:	681a      	ldr	r2, [r3, #0]
 80014d2:	4b0c      	ldr	r3, [pc, #48]	; (8001504 <USART2_IRQHandler+0x6c>)
 80014d4:	681b      	ldr	r3, [r3, #0]
 80014d6:	429a      	cmp	r2, r3
 80014d8:	db08      	blt.n	80014ec <USART2_IRQHandler+0x54>
		index_transmit = 0;
 80014da:	4b09      	ldr	r3, [pc, #36]	; (8001500 <USART2_IRQHandler+0x68>)
 80014dc:	2200      	movs	r2, #0
 80014de:	601a      	str	r2, [r3, #0]
		USART2->CR1 &= ~USART_CR1_TXEIE;
 80014e0:	4b05      	ldr	r3, [pc, #20]	; (80014f8 <USART2_IRQHandler+0x60>)
 80014e2:	68db      	ldr	r3, [r3, #12]
 80014e4:	4a04      	ldr	r2, [pc, #16]	; (80014f8 <USART2_IRQHandler+0x60>)
 80014e6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80014ea:	60d3      	str	r3, [r2, #12]
	}
}
 80014ec:	bf00      	nop
 80014ee:	46bd      	mov	sp, r7
 80014f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014f4:	4770      	bx	lr
 80014f6:	bf00      	nop
 80014f8:	40004400 	.word	0x40004400
 80014fc:	20000314 	.word	0x20000314
 8001500:	20000318 	.word	0x20000318
 8001504:	2000031c 	.word	0x2000031c

08001508 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8001508:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001540 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800150c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800150e:	e003      	b.n	8001518 <LoopCopyDataInit>

08001510 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001510:	4b0c      	ldr	r3, [pc, #48]	; (8001544 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8001512:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001514:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8001516:	3104      	adds	r1, #4

08001518 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001518:	480b      	ldr	r0, [pc, #44]	; (8001548 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800151a:	4b0c      	ldr	r3, [pc, #48]	; (800154c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 800151c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800151e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001520:	d3f6      	bcc.n	8001510 <CopyDataInit>
  ldr  r2, =_sbss
 8001522:	4a0b      	ldr	r2, [pc, #44]	; (8001550 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001524:	e002      	b.n	800152c <LoopFillZerobss>

08001526 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8001526:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001528:	f842 3b04 	str.w	r3, [r2], #4

0800152c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800152c:	4b09      	ldr	r3, [pc, #36]	; (8001554 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800152e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001530:	d3f9      	bcc.n	8001526 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8001532:	f7ff fca3 	bl	8000e7c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001536:	f000 f817 	bl	8001568 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800153a:	f7ff fb3d 	bl	8000bb8 <main>
  bx  lr    
 800153e:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8001540:	20018000 	.word	0x20018000
  ldr  r3, =_sidata
 8001544:	08003918 	.word	0x08003918
  ldr  r0, =_sdata
 8001548:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800154c:	200001d4 	.word	0x200001d4
  ldr  r2, =_sbss
 8001550:	200001d4 	.word	0x200001d4
  ldr  r3, = _ebss
 8001554:	20000324 	.word	0x20000324

08001558 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001558:	e7fe      	b.n	8001558 <ADC_IRQHandler>
	...

0800155c <__errno>:
 800155c:	4b01      	ldr	r3, [pc, #4]	; (8001564 <__errno+0x8>)
 800155e:	6818      	ldr	r0, [r3, #0]
 8001560:	4770      	bx	lr
 8001562:	bf00      	nop
 8001564:	20000004 	.word	0x20000004

08001568 <__libc_init_array>:
 8001568:	b570      	push	{r4, r5, r6, lr}
 800156a:	4e0d      	ldr	r6, [pc, #52]	; (80015a0 <__libc_init_array+0x38>)
 800156c:	4c0d      	ldr	r4, [pc, #52]	; (80015a4 <__libc_init_array+0x3c>)
 800156e:	1ba4      	subs	r4, r4, r6
 8001570:	10a4      	asrs	r4, r4, #2
 8001572:	2500      	movs	r5, #0
 8001574:	42a5      	cmp	r5, r4
 8001576:	d109      	bne.n	800158c <__libc_init_array+0x24>
 8001578:	4e0b      	ldr	r6, [pc, #44]	; (80015a8 <__libc_init_array+0x40>)
 800157a:	4c0c      	ldr	r4, [pc, #48]	; (80015ac <__libc_init_array+0x44>)
 800157c:	f002 f870 	bl	8003660 <_init>
 8001580:	1ba4      	subs	r4, r4, r6
 8001582:	10a4      	asrs	r4, r4, #2
 8001584:	2500      	movs	r5, #0
 8001586:	42a5      	cmp	r5, r4
 8001588:	d105      	bne.n	8001596 <__libc_init_array+0x2e>
 800158a:	bd70      	pop	{r4, r5, r6, pc}
 800158c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001590:	4798      	blx	r3
 8001592:	3501      	adds	r5, #1
 8001594:	e7ee      	b.n	8001574 <__libc_init_array+0xc>
 8001596:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800159a:	4798      	blx	r3
 800159c:	3501      	adds	r5, #1
 800159e:	e7f2      	b.n	8001586 <__libc_init_array+0x1e>
 80015a0:	08003910 	.word	0x08003910
 80015a4:	08003910 	.word	0x08003910
 80015a8:	08003910 	.word	0x08003910
 80015ac:	08003914 	.word	0x08003914

080015b0 <memset>:
 80015b0:	4402      	add	r2, r0
 80015b2:	4603      	mov	r3, r0
 80015b4:	4293      	cmp	r3, r2
 80015b6:	d100      	bne.n	80015ba <memset+0xa>
 80015b8:	4770      	bx	lr
 80015ba:	f803 1b01 	strb.w	r1, [r3], #1
 80015be:	e7f9      	b.n	80015b4 <memset+0x4>

080015c0 <__cvt>:
 80015c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80015c4:	ec55 4b10 	vmov	r4, r5, d0
 80015c8:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80015ca:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80015ce:	2d00      	cmp	r5, #0
 80015d0:	460e      	mov	r6, r1
 80015d2:	4691      	mov	r9, r2
 80015d4:	4619      	mov	r1, r3
 80015d6:	bfb8      	it	lt
 80015d8:	4622      	movlt	r2, r4
 80015da:	462b      	mov	r3, r5
 80015dc:	f027 0720 	bic.w	r7, r7, #32
 80015e0:	bfbb      	ittet	lt
 80015e2:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 80015e6:	461d      	movlt	r5, r3
 80015e8:	2300      	movge	r3, #0
 80015ea:	232d      	movlt	r3, #45	; 0x2d
 80015ec:	bfb8      	it	lt
 80015ee:	4614      	movlt	r4, r2
 80015f0:	2f46      	cmp	r7, #70	; 0x46
 80015f2:	700b      	strb	r3, [r1, #0]
 80015f4:	d004      	beq.n	8001600 <__cvt+0x40>
 80015f6:	2f45      	cmp	r7, #69	; 0x45
 80015f8:	d100      	bne.n	80015fc <__cvt+0x3c>
 80015fa:	3601      	adds	r6, #1
 80015fc:	2102      	movs	r1, #2
 80015fe:	e000      	b.n	8001602 <__cvt+0x42>
 8001600:	2103      	movs	r1, #3
 8001602:	ab03      	add	r3, sp, #12
 8001604:	9301      	str	r3, [sp, #4]
 8001606:	ab02      	add	r3, sp, #8
 8001608:	9300      	str	r3, [sp, #0]
 800160a:	4632      	mov	r2, r6
 800160c:	4653      	mov	r3, sl
 800160e:	ec45 4b10 	vmov	d0, r4, r5
 8001612:	f000 fcf1 	bl	8001ff8 <_dtoa_r>
 8001616:	2f47      	cmp	r7, #71	; 0x47
 8001618:	4680      	mov	r8, r0
 800161a:	d102      	bne.n	8001622 <__cvt+0x62>
 800161c:	f019 0f01 	tst.w	r9, #1
 8001620:	d026      	beq.n	8001670 <__cvt+0xb0>
 8001622:	2f46      	cmp	r7, #70	; 0x46
 8001624:	eb08 0906 	add.w	r9, r8, r6
 8001628:	d111      	bne.n	800164e <__cvt+0x8e>
 800162a:	f898 3000 	ldrb.w	r3, [r8]
 800162e:	2b30      	cmp	r3, #48	; 0x30
 8001630:	d10a      	bne.n	8001648 <__cvt+0x88>
 8001632:	2200      	movs	r2, #0
 8001634:	2300      	movs	r3, #0
 8001636:	4620      	mov	r0, r4
 8001638:	4629      	mov	r1, r5
 800163a:	f7ff fa4d 	bl	8000ad8 <__aeabi_dcmpeq>
 800163e:	b918      	cbnz	r0, 8001648 <__cvt+0x88>
 8001640:	f1c6 0601 	rsb	r6, r6, #1
 8001644:	f8ca 6000 	str.w	r6, [sl]
 8001648:	f8da 3000 	ldr.w	r3, [sl]
 800164c:	4499      	add	r9, r3
 800164e:	2200      	movs	r2, #0
 8001650:	2300      	movs	r3, #0
 8001652:	4620      	mov	r0, r4
 8001654:	4629      	mov	r1, r5
 8001656:	f7ff fa3f 	bl	8000ad8 <__aeabi_dcmpeq>
 800165a:	b938      	cbnz	r0, 800166c <__cvt+0xac>
 800165c:	2230      	movs	r2, #48	; 0x30
 800165e:	9b03      	ldr	r3, [sp, #12]
 8001660:	454b      	cmp	r3, r9
 8001662:	d205      	bcs.n	8001670 <__cvt+0xb0>
 8001664:	1c59      	adds	r1, r3, #1
 8001666:	9103      	str	r1, [sp, #12]
 8001668:	701a      	strb	r2, [r3, #0]
 800166a:	e7f8      	b.n	800165e <__cvt+0x9e>
 800166c:	f8cd 900c 	str.w	r9, [sp, #12]
 8001670:	9b03      	ldr	r3, [sp, #12]
 8001672:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001674:	eba3 0308 	sub.w	r3, r3, r8
 8001678:	4640      	mov	r0, r8
 800167a:	6013      	str	r3, [r2, #0]
 800167c:	b004      	add	sp, #16
 800167e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001682 <__exponent>:
 8001682:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001684:	2900      	cmp	r1, #0
 8001686:	4604      	mov	r4, r0
 8001688:	bfba      	itte	lt
 800168a:	4249      	neglt	r1, r1
 800168c:	232d      	movlt	r3, #45	; 0x2d
 800168e:	232b      	movge	r3, #43	; 0x2b
 8001690:	2909      	cmp	r1, #9
 8001692:	f804 2b02 	strb.w	r2, [r4], #2
 8001696:	7043      	strb	r3, [r0, #1]
 8001698:	dd20      	ble.n	80016dc <__exponent+0x5a>
 800169a:	f10d 0307 	add.w	r3, sp, #7
 800169e:	461f      	mov	r7, r3
 80016a0:	260a      	movs	r6, #10
 80016a2:	fb91 f5f6 	sdiv	r5, r1, r6
 80016a6:	fb06 1115 	mls	r1, r6, r5, r1
 80016aa:	3130      	adds	r1, #48	; 0x30
 80016ac:	2d09      	cmp	r5, #9
 80016ae:	f803 1c01 	strb.w	r1, [r3, #-1]
 80016b2:	f103 32ff 	add.w	r2, r3, #4294967295
 80016b6:	4629      	mov	r1, r5
 80016b8:	dc09      	bgt.n	80016ce <__exponent+0x4c>
 80016ba:	3130      	adds	r1, #48	; 0x30
 80016bc:	3b02      	subs	r3, #2
 80016be:	f802 1c01 	strb.w	r1, [r2, #-1]
 80016c2:	42bb      	cmp	r3, r7
 80016c4:	4622      	mov	r2, r4
 80016c6:	d304      	bcc.n	80016d2 <__exponent+0x50>
 80016c8:	1a10      	subs	r0, r2, r0
 80016ca:	b003      	add	sp, #12
 80016cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016ce:	4613      	mov	r3, r2
 80016d0:	e7e7      	b.n	80016a2 <__exponent+0x20>
 80016d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80016d6:	f804 2b01 	strb.w	r2, [r4], #1
 80016da:	e7f2      	b.n	80016c2 <__exponent+0x40>
 80016dc:	2330      	movs	r3, #48	; 0x30
 80016de:	4419      	add	r1, r3
 80016e0:	7083      	strb	r3, [r0, #2]
 80016e2:	1d02      	adds	r2, r0, #4
 80016e4:	70c1      	strb	r1, [r0, #3]
 80016e6:	e7ef      	b.n	80016c8 <__exponent+0x46>

080016e8 <_printf_float>:
 80016e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80016ec:	b08d      	sub	sp, #52	; 0x34
 80016ee:	460c      	mov	r4, r1
 80016f0:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80016f4:	4616      	mov	r6, r2
 80016f6:	461f      	mov	r7, r3
 80016f8:	4605      	mov	r5, r0
 80016fa:	f001 fa35 	bl	8002b68 <_localeconv_r>
 80016fe:	6803      	ldr	r3, [r0, #0]
 8001700:	9304      	str	r3, [sp, #16]
 8001702:	4618      	mov	r0, r3
 8001704:	f7fe fd6c 	bl	80001e0 <strlen>
 8001708:	2300      	movs	r3, #0
 800170a:	930a      	str	r3, [sp, #40]	; 0x28
 800170c:	f8d8 3000 	ldr.w	r3, [r8]
 8001710:	9005      	str	r0, [sp, #20]
 8001712:	3307      	adds	r3, #7
 8001714:	f023 0307 	bic.w	r3, r3, #7
 8001718:	f103 0208 	add.w	r2, r3, #8
 800171c:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001720:	f8d4 b000 	ldr.w	fp, [r4]
 8001724:	f8c8 2000 	str.w	r2, [r8]
 8001728:	e9d3 2300 	ldrd	r2, r3, [r3]
 800172c:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001730:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8001734:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001738:	9307      	str	r3, [sp, #28]
 800173a:	f8cd 8018 	str.w	r8, [sp, #24]
 800173e:	f04f 32ff 	mov.w	r2, #4294967295
 8001742:	4ba7      	ldr	r3, [pc, #668]	; (80019e0 <_printf_float+0x2f8>)
 8001744:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001748:	f7ff f9f8 	bl	8000b3c <__aeabi_dcmpun>
 800174c:	bb70      	cbnz	r0, 80017ac <_printf_float+0xc4>
 800174e:	f04f 32ff 	mov.w	r2, #4294967295
 8001752:	4ba3      	ldr	r3, [pc, #652]	; (80019e0 <_printf_float+0x2f8>)
 8001754:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001758:	f7ff f9d2 	bl	8000b00 <__aeabi_dcmple>
 800175c:	bb30      	cbnz	r0, 80017ac <_printf_float+0xc4>
 800175e:	2200      	movs	r2, #0
 8001760:	2300      	movs	r3, #0
 8001762:	4640      	mov	r0, r8
 8001764:	4649      	mov	r1, r9
 8001766:	f7ff f9c1 	bl	8000aec <__aeabi_dcmplt>
 800176a:	b110      	cbz	r0, 8001772 <_printf_float+0x8a>
 800176c:	232d      	movs	r3, #45	; 0x2d
 800176e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001772:	4a9c      	ldr	r2, [pc, #624]	; (80019e4 <_printf_float+0x2fc>)
 8001774:	4b9c      	ldr	r3, [pc, #624]	; (80019e8 <_printf_float+0x300>)
 8001776:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 800177a:	bf8c      	ite	hi
 800177c:	4690      	movhi	r8, r2
 800177e:	4698      	movls	r8, r3
 8001780:	2303      	movs	r3, #3
 8001782:	f02b 0204 	bic.w	r2, fp, #4
 8001786:	6123      	str	r3, [r4, #16]
 8001788:	6022      	str	r2, [r4, #0]
 800178a:	f04f 0900 	mov.w	r9, #0
 800178e:	9700      	str	r7, [sp, #0]
 8001790:	4633      	mov	r3, r6
 8001792:	aa0b      	add	r2, sp, #44	; 0x2c
 8001794:	4621      	mov	r1, r4
 8001796:	4628      	mov	r0, r5
 8001798:	f000 f9e6 	bl	8001b68 <_printf_common>
 800179c:	3001      	adds	r0, #1
 800179e:	f040 808d 	bne.w	80018bc <_printf_float+0x1d4>
 80017a2:	f04f 30ff 	mov.w	r0, #4294967295
 80017a6:	b00d      	add	sp, #52	; 0x34
 80017a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80017ac:	4642      	mov	r2, r8
 80017ae:	464b      	mov	r3, r9
 80017b0:	4640      	mov	r0, r8
 80017b2:	4649      	mov	r1, r9
 80017b4:	f7ff f9c2 	bl	8000b3c <__aeabi_dcmpun>
 80017b8:	b110      	cbz	r0, 80017c0 <_printf_float+0xd8>
 80017ba:	4a8c      	ldr	r2, [pc, #560]	; (80019ec <_printf_float+0x304>)
 80017bc:	4b8c      	ldr	r3, [pc, #560]	; (80019f0 <_printf_float+0x308>)
 80017be:	e7da      	b.n	8001776 <_printf_float+0x8e>
 80017c0:	6861      	ldr	r1, [r4, #4]
 80017c2:	1c4b      	adds	r3, r1, #1
 80017c4:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
 80017c8:	a80a      	add	r0, sp, #40	; 0x28
 80017ca:	d13e      	bne.n	800184a <_printf_float+0x162>
 80017cc:	2306      	movs	r3, #6
 80017ce:	6063      	str	r3, [r4, #4]
 80017d0:	2300      	movs	r3, #0
 80017d2:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80017d6:	ab09      	add	r3, sp, #36	; 0x24
 80017d8:	9300      	str	r3, [sp, #0]
 80017da:	ec49 8b10 	vmov	d0, r8, r9
 80017de:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80017e2:	6022      	str	r2, [r4, #0]
 80017e4:	f8cd a004 	str.w	sl, [sp, #4]
 80017e8:	6861      	ldr	r1, [r4, #4]
 80017ea:	4628      	mov	r0, r5
 80017ec:	f7ff fee8 	bl	80015c0 <__cvt>
 80017f0:	f00a 03df 	and.w	r3, sl, #223	; 0xdf
 80017f4:	2b47      	cmp	r3, #71	; 0x47
 80017f6:	4680      	mov	r8, r0
 80017f8:	d109      	bne.n	800180e <_printf_float+0x126>
 80017fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80017fc:	1cd8      	adds	r0, r3, #3
 80017fe:	db02      	blt.n	8001806 <_printf_float+0x11e>
 8001800:	6862      	ldr	r2, [r4, #4]
 8001802:	4293      	cmp	r3, r2
 8001804:	dd47      	ble.n	8001896 <_printf_float+0x1ae>
 8001806:	f1aa 0a02 	sub.w	sl, sl, #2
 800180a:	fa5f fa8a 	uxtb.w	sl, sl
 800180e:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 8001812:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001814:	d824      	bhi.n	8001860 <_printf_float+0x178>
 8001816:	3901      	subs	r1, #1
 8001818:	4652      	mov	r2, sl
 800181a:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800181e:	9109      	str	r1, [sp, #36]	; 0x24
 8001820:	f7ff ff2f 	bl	8001682 <__exponent>
 8001824:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001826:	1813      	adds	r3, r2, r0
 8001828:	2a01      	cmp	r2, #1
 800182a:	4681      	mov	r9, r0
 800182c:	6123      	str	r3, [r4, #16]
 800182e:	dc02      	bgt.n	8001836 <_printf_float+0x14e>
 8001830:	6822      	ldr	r2, [r4, #0]
 8001832:	07d1      	lsls	r1, r2, #31
 8001834:	d501      	bpl.n	800183a <_printf_float+0x152>
 8001836:	3301      	adds	r3, #1
 8001838:	6123      	str	r3, [r4, #16]
 800183a:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800183e:	2b00      	cmp	r3, #0
 8001840:	d0a5      	beq.n	800178e <_printf_float+0xa6>
 8001842:	232d      	movs	r3, #45	; 0x2d
 8001844:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001848:	e7a1      	b.n	800178e <_printf_float+0xa6>
 800184a:	f1ba 0f67 	cmp.w	sl, #103	; 0x67
 800184e:	f000 8177 	beq.w	8001b40 <_printf_float+0x458>
 8001852:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 8001856:	d1bb      	bne.n	80017d0 <_printf_float+0xe8>
 8001858:	2900      	cmp	r1, #0
 800185a:	d1b9      	bne.n	80017d0 <_printf_float+0xe8>
 800185c:	2301      	movs	r3, #1
 800185e:	e7b6      	b.n	80017ce <_printf_float+0xe6>
 8001860:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
 8001864:	d119      	bne.n	800189a <_printf_float+0x1b2>
 8001866:	2900      	cmp	r1, #0
 8001868:	6863      	ldr	r3, [r4, #4]
 800186a:	dd0c      	ble.n	8001886 <_printf_float+0x19e>
 800186c:	6121      	str	r1, [r4, #16]
 800186e:	b913      	cbnz	r3, 8001876 <_printf_float+0x18e>
 8001870:	6822      	ldr	r2, [r4, #0]
 8001872:	07d2      	lsls	r2, r2, #31
 8001874:	d502      	bpl.n	800187c <_printf_float+0x194>
 8001876:	3301      	adds	r3, #1
 8001878:	440b      	add	r3, r1
 800187a:	6123      	str	r3, [r4, #16]
 800187c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800187e:	65a3      	str	r3, [r4, #88]	; 0x58
 8001880:	f04f 0900 	mov.w	r9, #0
 8001884:	e7d9      	b.n	800183a <_printf_float+0x152>
 8001886:	b913      	cbnz	r3, 800188e <_printf_float+0x1a6>
 8001888:	6822      	ldr	r2, [r4, #0]
 800188a:	07d0      	lsls	r0, r2, #31
 800188c:	d501      	bpl.n	8001892 <_printf_float+0x1aa>
 800188e:	3302      	adds	r3, #2
 8001890:	e7f3      	b.n	800187a <_printf_float+0x192>
 8001892:	2301      	movs	r3, #1
 8001894:	e7f1      	b.n	800187a <_printf_float+0x192>
 8001896:	f04f 0a67 	mov.w	sl, #103	; 0x67
 800189a:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 800189e:	4293      	cmp	r3, r2
 80018a0:	db05      	blt.n	80018ae <_printf_float+0x1c6>
 80018a2:	6822      	ldr	r2, [r4, #0]
 80018a4:	6123      	str	r3, [r4, #16]
 80018a6:	07d1      	lsls	r1, r2, #31
 80018a8:	d5e8      	bpl.n	800187c <_printf_float+0x194>
 80018aa:	3301      	adds	r3, #1
 80018ac:	e7e5      	b.n	800187a <_printf_float+0x192>
 80018ae:	2b00      	cmp	r3, #0
 80018b0:	bfd4      	ite	le
 80018b2:	f1c3 0302 	rsble	r3, r3, #2
 80018b6:	2301      	movgt	r3, #1
 80018b8:	4413      	add	r3, r2
 80018ba:	e7de      	b.n	800187a <_printf_float+0x192>
 80018bc:	6823      	ldr	r3, [r4, #0]
 80018be:	055a      	lsls	r2, r3, #21
 80018c0:	d407      	bmi.n	80018d2 <_printf_float+0x1ea>
 80018c2:	6923      	ldr	r3, [r4, #16]
 80018c4:	4642      	mov	r2, r8
 80018c6:	4631      	mov	r1, r6
 80018c8:	4628      	mov	r0, r5
 80018ca:	47b8      	blx	r7
 80018cc:	3001      	adds	r0, #1
 80018ce:	d12b      	bne.n	8001928 <_printf_float+0x240>
 80018d0:	e767      	b.n	80017a2 <_printf_float+0xba>
 80018d2:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 80018d6:	f240 80dc 	bls.w	8001a92 <_printf_float+0x3aa>
 80018da:	2200      	movs	r2, #0
 80018dc:	2300      	movs	r3, #0
 80018de:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80018e2:	f7ff f8f9 	bl	8000ad8 <__aeabi_dcmpeq>
 80018e6:	2800      	cmp	r0, #0
 80018e8:	d033      	beq.n	8001952 <_printf_float+0x26a>
 80018ea:	2301      	movs	r3, #1
 80018ec:	4a41      	ldr	r2, [pc, #260]	; (80019f4 <_printf_float+0x30c>)
 80018ee:	4631      	mov	r1, r6
 80018f0:	4628      	mov	r0, r5
 80018f2:	47b8      	blx	r7
 80018f4:	3001      	adds	r0, #1
 80018f6:	f43f af54 	beq.w	80017a2 <_printf_float+0xba>
 80018fa:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80018fe:	429a      	cmp	r2, r3
 8001900:	db02      	blt.n	8001908 <_printf_float+0x220>
 8001902:	6823      	ldr	r3, [r4, #0]
 8001904:	07d8      	lsls	r0, r3, #31
 8001906:	d50f      	bpl.n	8001928 <_printf_float+0x240>
 8001908:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800190c:	4631      	mov	r1, r6
 800190e:	4628      	mov	r0, r5
 8001910:	47b8      	blx	r7
 8001912:	3001      	adds	r0, #1
 8001914:	f43f af45 	beq.w	80017a2 <_printf_float+0xba>
 8001918:	f04f 0800 	mov.w	r8, #0
 800191c:	f104 091a 	add.w	r9, r4, #26
 8001920:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001922:	3b01      	subs	r3, #1
 8001924:	4543      	cmp	r3, r8
 8001926:	dc09      	bgt.n	800193c <_printf_float+0x254>
 8001928:	6823      	ldr	r3, [r4, #0]
 800192a:	079b      	lsls	r3, r3, #30
 800192c:	f100 8103 	bmi.w	8001b36 <_printf_float+0x44e>
 8001930:	68e0      	ldr	r0, [r4, #12]
 8001932:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001934:	4298      	cmp	r0, r3
 8001936:	bfb8      	it	lt
 8001938:	4618      	movlt	r0, r3
 800193a:	e734      	b.n	80017a6 <_printf_float+0xbe>
 800193c:	2301      	movs	r3, #1
 800193e:	464a      	mov	r2, r9
 8001940:	4631      	mov	r1, r6
 8001942:	4628      	mov	r0, r5
 8001944:	47b8      	blx	r7
 8001946:	3001      	adds	r0, #1
 8001948:	f43f af2b 	beq.w	80017a2 <_printf_float+0xba>
 800194c:	f108 0801 	add.w	r8, r8, #1
 8001950:	e7e6      	b.n	8001920 <_printf_float+0x238>
 8001952:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001954:	2b00      	cmp	r3, #0
 8001956:	dc2b      	bgt.n	80019b0 <_printf_float+0x2c8>
 8001958:	2301      	movs	r3, #1
 800195a:	4a26      	ldr	r2, [pc, #152]	; (80019f4 <_printf_float+0x30c>)
 800195c:	4631      	mov	r1, r6
 800195e:	4628      	mov	r0, r5
 8001960:	47b8      	blx	r7
 8001962:	3001      	adds	r0, #1
 8001964:	f43f af1d 	beq.w	80017a2 <_printf_float+0xba>
 8001968:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800196a:	b923      	cbnz	r3, 8001976 <_printf_float+0x28e>
 800196c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800196e:	b913      	cbnz	r3, 8001976 <_printf_float+0x28e>
 8001970:	6823      	ldr	r3, [r4, #0]
 8001972:	07d9      	lsls	r1, r3, #31
 8001974:	d5d8      	bpl.n	8001928 <_printf_float+0x240>
 8001976:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800197a:	4631      	mov	r1, r6
 800197c:	4628      	mov	r0, r5
 800197e:	47b8      	blx	r7
 8001980:	3001      	adds	r0, #1
 8001982:	f43f af0e 	beq.w	80017a2 <_printf_float+0xba>
 8001986:	f04f 0900 	mov.w	r9, #0
 800198a:	f104 0a1a 	add.w	sl, r4, #26
 800198e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001990:	425b      	negs	r3, r3
 8001992:	454b      	cmp	r3, r9
 8001994:	dc01      	bgt.n	800199a <_printf_float+0x2b2>
 8001996:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001998:	e794      	b.n	80018c4 <_printf_float+0x1dc>
 800199a:	2301      	movs	r3, #1
 800199c:	4652      	mov	r2, sl
 800199e:	4631      	mov	r1, r6
 80019a0:	4628      	mov	r0, r5
 80019a2:	47b8      	blx	r7
 80019a4:	3001      	adds	r0, #1
 80019a6:	f43f aefc 	beq.w	80017a2 <_printf_float+0xba>
 80019aa:	f109 0901 	add.w	r9, r9, #1
 80019ae:	e7ee      	b.n	800198e <_printf_float+0x2a6>
 80019b0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80019b2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80019b4:	429a      	cmp	r2, r3
 80019b6:	bfa8      	it	ge
 80019b8:	461a      	movge	r2, r3
 80019ba:	2a00      	cmp	r2, #0
 80019bc:	4691      	mov	r9, r2
 80019be:	dd07      	ble.n	80019d0 <_printf_float+0x2e8>
 80019c0:	4613      	mov	r3, r2
 80019c2:	4631      	mov	r1, r6
 80019c4:	4642      	mov	r2, r8
 80019c6:	4628      	mov	r0, r5
 80019c8:	47b8      	blx	r7
 80019ca:	3001      	adds	r0, #1
 80019cc:	f43f aee9 	beq.w	80017a2 <_printf_float+0xba>
 80019d0:	f104 031a 	add.w	r3, r4, #26
 80019d4:	f04f 0b00 	mov.w	fp, #0
 80019d8:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80019dc:	9306      	str	r3, [sp, #24]
 80019de:	e015      	b.n	8001a0c <_printf_float+0x324>
 80019e0:	7fefffff 	.word	0x7fefffff
 80019e4:	080036bb 	.word	0x080036bb
 80019e8:	080036b7 	.word	0x080036b7
 80019ec:	080036c3 	.word	0x080036c3
 80019f0:	080036bf 	.word	0x080036bf
 80019f4:	080036c7 	.word	0x080036c7
 80019f8:	2301      	movs	r3, #1
 80019fa:	9a06      	ldr	r2, [sp, #24]
 80019fc:	4631      	mov	r1, r6
 80019fe:	4628      	mov	r0, r5
 8001a00:	47b8      	blx	r7
 8001a02:	3001      	adds	r0, #1
 8001a04:	f43f aecd 	beq.w	80017a2 <_printf_float+0xba>
 8001a08:	f10b 0b01 	add.w	fp, fp, #1
 8001a0c:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8001a10:	ebaa 0309 	sub.w	r3, sl, r9
 8001a14:	455b      	cmp	r3, fp
 8001a16:	dcef      	bgt.n	80019f8 <_printf_float+0x310>
 8001a18:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001a1c:	429a      	cmp	r2, r3
 8001a1e:	44d0      	add	r8, sl
 8001a20:	db15      	blt.n	8001a4e <_printf_float+0x366>
 8001a22:	6823      	ldr	r3, [r4, #0]
 8001a24:	07da      	lsls	r2, r3, #31
 8001a26:	d412      	bmi.n	8001a4e <_printf_float+0x366>
 8001a28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001a2a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001a2c:	eba3 020a 	sub.w	r2, r3, sl
 8001a30:	eba3 0a01 	sub.w	sl, r3, r1
 8001a34:	4592      	cmp	sl, r2
 8001a36:	bfa8      	it	ge
 8001a38:	4692      	movge	sl, r2
 8001a3a:	f1ba 0f00 	cmp.w	sl, #0
 8001a3e:	dc0e      	bgt.n	8001a5e <_printf_float+0x376>
 8001a40:	f04f 0800 	mov.w	r8, #0
 8001a44:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8001a48:	f104 091a 	add.w	r9, r4, #26
 8001a4c:	e019      	b.n	8001a82 <_printf_float+0x39a>
 8001a4e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001a52:	4631      	mov	r1, r6
 8001a54:	4628      	mov	r0, r5
 8001a56:	47b8      	blx	r7
 8001a58:	3001      	adds	r0, #1
 8001a5a:	d1e5      	bne.n	8001a28 <_printf_float+0x340>
 8001a5c:	e6a1      	b.n	80017a2 <_printf_float+0xba>
 8001a5e:	4653      	mov	r3, sl
 8001a60:	4642      	mov	r2, r8
 8001a62:	4631      	mov	r1, r6
 8001a64:	4628      	mov	r0, r5
 8001a66:	47b8      	blx	r7
 8001a68:	3001      	adds	r0, #1
 8001a6a:	d1e9      	bne.n	8001a40 <_printf_float+0x358>
 8001a6c:	e699      	b.n	80017a2 <_printf_float+0xba>
 8001a6e:	2301      	movs	r3, #1
 8001a70:	464a      	mov	r2, r9
 8001a72:	4631      	mov	r1, r6
 8001a74:	4628      	mov	r0, r5
 8001a76:	47b8      	blx	r7
 8001a78:	3001      	adds	r0, #1
 8001a7a:	f43f ae92 	beq.w	80017a2 <_printf_float+0xba>
 8001a7e:	f108 0801 	add.w	r8, r8, #1
 8001a82:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001a86:	1a9b      	subs	r3, r3, r2
 8001a88:	eba3 030a 	sub.w	r3, r3, sl
 8001a8c:	4543      	cmp	r3, r8
 8001a8e:	dcee      	bgt.n	8001a6e <_printf_float+0x386>
 8001a90:	e74a      	b.n	8001928 <_printf_float+0x240>
 8001a92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001a94:	2a01      	cmp	r2, #1
 8001a96:	dc01      	bgt.n	8001a9c <_printf_float+0x3b4>
 8001a98:	07db      	lsls	r3, r3, #31
 8001a9a:	d53a      	bpl.n	8001b12 <_printf_float+0x42a>
 8001a9c:	2301      	movs	r3, #1
 8001a9e:	4642      	mov	r2, r8
 8001aa0:	4631      	mov	r1, r6
 8001aa2:	4628      	mov	r0, r5
 8001aa4:	47b8      	blx	r7
 8001aa6:	3001      	adds	r0, #1
 8001aa8:	f43f ae7b 	beq.w	80017a2 <_printf_float+0xba>
 8001aac:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001ab0:	4631      	mov	r1, r6
 8001ab2:	4628      	mov	r0, r5
 8001ab4:	47b8      	blx	r7
 8001ab6:	3001      	adds	r0, #1
 8001ab8:	f108 0801 	add.w	r8, r8, #1
 8001abc:	f43f ae71 	beq.w	80017a2 <_printf_float+0xba>
 8001ac0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001ac2:	2200      	movs	r2, #0
 8001ac4:	f103 3aff 	add.w	sl, r3, #4294967295
 8001ac8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001acc:	2300      	movs	r3, #0
 8001ace:	f7ff f803 	bl	8000ad8 <__aeabi_dcmpeq>
 8001ad2:	b9c8      	cbnz	r0, 8001b08 <_printf_float+0x420>
 8001ad4:	4653      	mov	r3, sl
 8001ad6:	4642      	mov	r2, r8
 8001ad8:	4631      	mov	r1, r6
 8001ada:	4628      	mov	r0, r5
 8001adc:	47b8      	blx	r7
 8001ade:	3001      	adds	r0, #1
 8001ae0:	d10e      	bne.n	8001b00 <_printf_float+0x418>
 8001ae2:	e65e      	b.n	80017a2 <_printf_float+0xba>
 8001ae4:	2301      	movs	r3, #1
 8001ae6:	4652      	mov	r2, sl
 8001ae8:	4631      	mov	r1, r6
 8001aea:	4628      	mov	r0, r5
 8001aec:	47b8      	blx	r7
 8001aee:	3001      	adds	r0, #1
 8001af0:	f43f ae57 	beq.w	80017a2 <_printf_float+0xba>
 8001af4:	f108 0801 	add.w	r8, r8, #1
 8001af8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001afa:	3b01      	subs	r3, #1
 8001afc:	4543      	cmp	r3, r8
 8001afe:	dcf1      	bgt.n	8001ae4 <_printf_float+0x3fc>
 8001b00:	464b      	mov	r3, r9
 8001b02:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001b06:	e6de      	b.n	80018c6 <_printf_float+0x1de>
 8001b08:	f04f 0800 	mov.w	r8, #0
 8001b0c:	f104 0a1a 	add.w	sl, r4, #26
 8001b10:	e7f2      	b.n	8001af8 <_printf_float+0x410>
 8001b12:	2301      	movs	r3, #1
 8001b14:	e7df      	b.n	8001ad6 <_printf_float+0x3ee>
 8001b16:	2301      	movs	r3, #1
 8001b18:	464a      	mov	r2, r9
 8001b1a:	4631      	mov	r1, r6
 8001b1c:	4628      	mov	r0, r5
 8001b1e:	47b8      	blx	r7
 8001b20:	3001      	adds	r0, #1
 8001b22:	f43f ae3e 	beq.w	80017a2 <_printf_float+0xba>
 8001b26:	f108 0801 	add.w	r8, r8, #1
 8001b2a:	68e3      	ldr	r3, [r4, #12]
 8001b2c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8001b2e:	1a9b      	subs	r3, r3, r2
 8001b30:	4543      	cmp	r3, r8
 8001b32:	dcf0      	bgt.n	8001b16 <_printf_float+0x42e>
 8001b34:	e6fc      	b.n	8001930 <_printf_float+0x248>
 8001b36:	f04f 0800 	mov.w	r8, #0
 8001b3a:	f104 0919 	add.w	r9, r4, #25
 8001b3e:	e7f4      	b.n	8001b2a <_printf_float+0x442>
 8001b40:	2900      	cmp	r1, #0
 8001b42:	f43f ae8b 	beq.w	800185c <_printf_float+0x174>
 8001b46:	2300      	movs	r3, #0
 8001b48:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8001b4c:	ab09      	add	r3, sp, #36	; 0x24
 8001b4e:	9300      	str	r3, [sp, #0]
 8001b50:	ec49 8b10 	vmov	d0, r8, r9
 8001b54:	6022      	str	r2, [r4, #0]
 8001b56:	f8cd a004 	str.w	sl, [sp, #4]
 8001b5a:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001b5e:	4628      	mov	r0, r5
 8001b60:	f7ff fd2e 	bl	80015c0 <__cvt>
 8001b64:	4680      	mov	r8, r0
 8001b66:	e648      	b.n	80017fa <_printf_float+0x112>

08001b68 <_printf_common>:
 8001b68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001b6c:	4691      	mov	r9, r2
 8001b6e:	461f      	mov	r7, r3
 8001b70:	688a      	ldr	r2, [r1, #8]
 8001b72:	690b      	ldr	r3, [r1, #16]
 8001b74:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001b78:	4293      	cmp	r3, r2
 8001b7a:	bfb8      	it	lt
 8001b7c:	4613      	movlt	r3, r2
 8001b7e:	f8c9 3000 	str.w	r3, [r9]
 8001b82:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001b86:	4606      	mov	r6, r0
 8001b88:	460c      	mov	r4, r1
 8001b8a:	b112      	cbz	r2, 8001b92 <_printf_common+0x2a>
 8001b8c:	3301      	adds	r3, #1
 8001b8e:	f8c9 3000 	str.w	r3, [r9]
 8001b92:	6823      	ldr	r3, [r4, #0]
 8001b94:	0699      	lsls	r1, r3, #26
 8001b96:	bf42      	ittt	mi
 8001b98:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001b9c:	3302      	addmi	r3, #2
 8001b9e:	f8c9 3000 	strmi.w	r3, [r9]
 8001ba2:	6825      	ldr	r5, [r4, #0]
 8001ba4:	f015 0506 	ands.w	r5, r5, #6
 8001ba8:	d107      	bne.n	8001bba <_printf_common+0x52>
 8001baa:	f104 0a19 	add.w	sl, r4, #25
 8001bae:	68e3      	ldr	r3, [r4, #12]
 8001bb0:	f8d9 2000 	ldr.w	r2, [r9]
 8001bb4:	1a9b      	subs	r3, r3, r2
 8001bb6:	42ab      	cmp	r3, r5
 8001bb8:	dc28      	bgt.n	8001c0c <_printf_common+0xa4>
 8001bba:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001bbe:	6822      	ldr	r2, [r4, #0]
 8001bc0:	3300      	adds	r3, #0
 8001bc2:	bf18      	it	ne
 8001bc4:	2301      	movne	r3, #1
 8001bc6:	0692      	lsls	r2, r2, #26
 8001bc8:	d42d      	bmi.n	8001c26 <_printf_common+0xbe>
 8001bca:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001bce:	4639      	mov	r1, r7
 8001bd0:	4630      	mov	r0, r6
 8001bd2:	47c0      	blx	r8
 8001bd4:	3001      	adds	r0, #1
 8001bd6:	d020      	beq.n	8001c1a <_printf_common+0xb2>
 8001bd8:	6823      	ldr	r3, [r4, #0]
 8001bda:	68e5      	ldr	r5, [r4, #12]
 8001bdc:	f8d9 2000 	ldr.w	r2, [r9]
 8001be0:	f003 0306 	and.w	r3, r3, #6
 8001be4:	2b04      	cmp	r3, #4
 8001be6:	bf08      	it	eq
 8001be8:	1aad      	subeq	r5, r5, r2
 8001bea:	68a3      	ldr	r3, [r4, #8]
 8001bec:	6922      	ldr	r2, [r4, #16]
 8001bee:	bf0c      	ite	eq
 8001bf0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001bf4:	2500      	movne	r5, #0
 8001bf6:	4293      	cmp	r3, r2
 8001bf8:	bfc4      	itt	gt
 8001bfa:	1a9b      	subgt	r3, r3, r2
 8001bfc:	18ed      	addgt	r5, r5, r3
 8001bfe:	f04f 0900 	mov.w	r9, #0
 8001c02:	341a      	adds	r4, #26
 8001c04:	454d      	cmp	r5, r9
 8001c06:	d11a      	bne.n	8001c3e <_printf_common+0xd6>
 8001c08:	2000      	movs	r0, #0
 8001c0a:	e008      	b.n	8001c1e <_printf_common+0xb6>
 8001c0c:	2301      	movs	r3, #1
 8001c0e:	4652      	mov	r2, sl
 8001c10:	4639      	mov	r1, r7
 8001c12:	4630      	mov	r0, r6
 8001c14:	47c0      	blx	r8
 8001c16:	3001      	adds	r0, #1
 8001c18:	d103      	bne.n	8001c22 <_printf_common+0xba>
 8001c1a:	f04f 30ff 	mov.w	r0, #4294967295
 8001c1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001c22:	3501      	adds	r5, #1
 8001c24:	e7c3      	b.n	8001bae <_printf_common+0x46>
 8001c26:	18e1      	adds	r1, r4, r3
 8001c28:	1c5a      	adds	r2, r3, #1
 8001c2a:	2030      	movs	r0, #48	; 0x30
 8001c2c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001c30:	4422      	add	r2, r4
 8001c32:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001c36:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001c3a:	3302      	adds	r3, #2
 8001c3c:	e7c5      	b.n	8001bca <_printf_common+0x62>
 8001c3e:	2301      	movs	r3, #1
 8001c40:	4622      	mov	r2, r4
 8001c42:	4639      	mov	r1, r7
 8001c44:	4630      	mov	r0, r6
 8001c46:	47c0      	blx	r8
 8001c48:	3001      	adds	r0, #1
 8001c4a:	d0e6      	beq.n	8001c1a <_printf_common+0xb2>
 8001c4c:	f109 0901 	add.w	r9, r9, #1
 8001c50:	e7d8      	b.n	8001c04 <_printf_common+0x9c>
	...

08001c54 <_printf_i>:
 8001c54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001c58:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001c5c:	460c      	mov	r4, r1
 8001c5e:	7e09      	ldrb	r1, [r1, #24]
 8001c60:	b085      	sub	sp, #20
 8001c62:	296e      	cmp	r1, #110	; 0x6e
 8001c64:	4617      	mov	r7, r2
 8001c66:	4606      	mov	r6, r0
 8001c68:	4698      	mov	r8, r3
 8001c6a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001c6c:	f000 80b3 	beq.w	8001dd6 <_printf_i+0x182>
 8001c70:	d822      	bhi.n	8001cb8 <_printf_i+0x64>
 8001c72:	2963      	cmp	r1, #99	; 0x63
 8001c74:	d036      	beq.n	8001ce4 <_printf_i+0x90>
 8001c76:	d80a      	bhi.n	8001c8e <_printf_i+0x3a>
 8001c78:	2900      	cmp	r1, #0
 8001c7a:	f000 80b9 	beq.w	8001df0 <_printf_i+0x19c>
 8001c7e:	2958      	cmp	r1, #88	; 0x58
 8001c80:	f000 8083 	beq.w	8001d8a <_printf_i+0x136>
 8001c84:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001c88:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001c8c:	e032      	b.n	8001cf4 <_printf_i+0xa0>
 8001c8e:	2964      	cmp	r1, #100	; 0x64
 8001c90:	d001      	beq.n	8001c96 <_printf_i+0x42>
 8001c92:	2969      	cmp	r1, #105	; 0x69
 8001c94:	d1f6      	bne.n	8001c84 <_printf_i+0x30>
 8001c96:	6820      	ldr	r0, [r4, #0]
 8001c98:	6813      	ldr	r3, [r2, #0]
 8001c9a:	0605      	lsls	r5, r0, #24
 8001c9c:	f103 0104 	add.w	r1, r3, #4
 8001ca0:	d52a      	bpl.n	8001cf8 <_printf_i+0xa4>
 8001ca2:	681b      	ldr	r3, [r3, #0]
 8001ca4:	6011      	str	r1, [r2, #0]
 8001ca6:	2b00      	cmp	r3, #0
 8001ca8:	da03      	bge.n	8001cb2 <_printf_i+0x5e>
 8001caa:	222d      	movs	r2, #45	; 0x2d
 8001cac:	425b      	negs	r3, r3
 8001cae:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8001cb2:	486f      	ldr	r0, [pc, #444]	; (8001e70 <_printf_i+0x21c>)
 8001cb4:	220a      	movs	r2, #10
 8001cb6:	e039      	b.n	8001d2c <_printf_i+0xd8>
 8001cb8:	2973      	cmp	r1, #115	; 0x73
 8001cba:	f000 809d 	beq.w	8001df8 <_printf_i+0x1a4>
 8001cbe:	d808      	bhi.n	8001cd2 <_printf_i+0x7e>
 8001cc0:	296f      	cmp	r1, #111	; 0x6f
 8001cc2:	d020      	beq.n	8001d06 <_printf_i+0xb2>
 8001cc4:	2970      	cmp	r1, #112	; 0x70
 8001cc6:	d1dd      	bne.n	8001c84 <_printf_i+0x30>
 8001cc8:	6823      	ldr	r3, [r4, #0]
 8001cca:	f043 0320 	orr.w	r3, r3, #32
 8001cce:	6023      	str	r3, [r4, #0]
 8001cd0:	e003      	b.n	8001cda <_printf_i+0x86>
 8001cd2:	2975      	cmp	r1, #117	; 0x75
 8001cd4:	d017      	beq.n	8001d06 <_printf_i+0xb2>
 8001cd6:	2978      	cmp	r1, #120	; 0x78
 8001cd8:	d1d4      	bne.n	8001c84 <_printf_i+0x30>
 8001cda:	2378      	movs	r3, #120	; 0x78
 8001cdc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001ce0:	4864      	ldr	r0, [pc, #400]	; (8001e74 <_printf_i+0x220>)
 8001ce2:	e055      	b.n	8001d90 <_printf_i+0x13c>
 8001ce4:	6813      	ldr	r3, [r2, #0]
 8001ce6:	1d19      	adds	r1, r3, #4
 8001ce8:	681b      	ldr	r3, [r3, #0]
 8001cea:	6011      	str	r1, [r2, #0]
 8001cec:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001cf0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001cf4:	2301      	movs	r3, #1
 8001cf6:	e08c      	b.n	8001e12 <_printf_i+0x1be>
 8001cf8:	681b      	ldr	r3, [r3, #0]
 8001cfa:	6011      	str	r1, [r2, #0]
 8001cfc:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001d00:	bf18      	it	ne
 8001d02:	b21b      	sxthne	r3, r3
 8001d04:	e7cf      	b.n	8001ca6 <_printf_i+0x52>
 8001d06:	6813      	ldr	r3, [r2, #0]
 8001d08:	6825      	ldr	r5, [r4, #0]
 8001d0a:	1d18      	adds	r0, r3, #4
 8001d0c:	6010      	str	r0, [r2, #0]
 8001d0e:	0628      	lsls	r0, r5, #24
 8001d10:	d501      	bpl.n	8001d16 <_printf_i+0xc2>
 8001d12:	681b      	ldr	r3, [r3, #0]
 8001d14:	e002      	b.n	8001d1c <_printf_i+0xc8>
 8001d16:	0668      	lsls	r0, r5, #25
 8001d18:	d5fb      	bpl.n	8001d12 <_printf_i+0xbe>
 8001d1a:	881b      	ldrh	r3, [r3, #0]
 8001d1c:	4854      	ldr	r0, [pc, #336]	; (8001e70 <_printf_i+0x21c>)
 8001d1e:	296f      	cmp	r1, #111	; 0x6f
 8001d20:	bf14      	ite	ne
 8001d22:	220a      	movne	r2, #10
 8001d24:	2208      	moveq	r2, #8
 8001d26:	2100      	movs	r1, #0
 8001d28:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001d2c:	6865      	ldr	r5, [r4, #4]
 8001d2e:	60a5      	str	r5, [r4, #8]
 8001d30:	2d00      	cmp	r5, #0
 8001d32:	f2c0 8095 	blt.w	8001e60 <_printf_i+0x20c>
 8001d36:	6821      	ldr	r1, [r4, #0]
 8001d38:	f021 0104 	bic.w	r1, r1, #4
 8001d3c:	6021      	str	r1, [r4, #0]
 8001d3e:	2b00      	cmp	r3, #0
 8001d40:	d13d      	bne.n	8001dbe <_printf_i+0x16a>
 8001d42:	2d00      	cmp	r5, #0
 8001d44:	f040 808e 	bne.w	8001e64 <_printf_i+0x210>
 8001d48:	4665      	mov	r5, ip
 8001d4a:	2a08      	cmp	r2, #8
 8001d4c:	d10b      	bne.n	8001d66 <_printf_i+0x112>
 8001d4e:	6823      	ldr	r3, [r4, #0]
 8001d50:	07db      	lsls	r3, r3, #31
 8001d52:	d508      	bpl.n	8001d66 <_printf_i+0x112>
 8001d54:	6923      	ldr	r3, [r4, #16]
 8001d56:	6862      	ldr	r2, [r4, #4]
 8001d58:	429a      	cmp	r2, r3
 8001d5a:	bfde      	ittt	le
 8001d5c:	2330      	movle	r3, #48	; 0x30
 8001d5e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001d62:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001d66:	ebac 0305 	sub.w	r3, ip, r5
 8001d6a:	6123      	str	r3, [r4, #16]
 8001d6c:	f8cd 8000 	str.w	r8, [sp]
 8001d70:	463b      	mov	r3, r7
 8001d72:	aa03      	add	r2, sp, #12
 8001d74:	4621      	mov	r1, r4
 8001d76:	4630      	mov	r0, r6
 8001d78:	f7ff fef6 	bl	8001b68 <_printf_common>
 8001d7c:	3001      	adds	r0, #1
 8001d7e:	d14d      	bne.n	8001e1c <_printf_i+0x1c8>
 8001d80:	f04f 30ff 	mov.w	r0, #4294967295
 8001d84:	b005      	add	sp, #20
 8001d86:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d8a:	4839      	ldr	r0, [pc, #228]	; (8001e70 <_printf_i+0x21c>)
 8001d8c:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8001d90:	6813      	ldr	r3, [r2, #0]
 8001d92:	6821      	ldr	r1, [r4, #0]
 8001d94:	1d1d      	adds	r5, r3, #4
 8001d96:	681b      	ldr	r3, [r3, #0]
 8001d98:	6015      	str	r5, [r2, #0]
 8001d9a:	060a      	lsls	r2, r1, #24
 8001d9c:	d50b      	bpl.n	8001db6 <_printf_i+0x162>
 8001d9e:	07ca      	lsls	r2, r1, #31
 8001da0:	bf44      	itt	mi
 8001da2:	f041 0120 	orrmi.w	r1, r1, #32
 8001da6:	6021      	strmi	r1, [r4, #0]
 8001da8:	b91b      	cbnz	r3, 8001db2 <_printf_i+0x15e>
 8001daa:	6822      	ldr	r2, [r4, #0]
 8001dac:	f022 0220 	bic.w	r2, r2, #32
 8001db0:	6022      	str	r2, [r4, #0]
 8001db2:	2210      	movs	r2, #16
 8001db4:	e7b7      	b.n	8001d26 <_printf_i+0xd2>
 8001db6:	064d      	lsls	r5, r1, #25
 8001db8:	bf48      	it	mi
 8001dba:	b29b      	uxthmi	r3, r3
 8001dbc:	e7ef      	b.n	8001d9e <_printf_i+0x14a>
 8001dbe:	4665      	mov	r5, ip
 8001dc0:	fbb3 f1f2 	udiv	r1, r3, r2
 8001dc4:	fb02 3311 	mls	r3, r2, r1, r3
 8001dc8:	5cc3      	ldrb	r3, [r0, r3]
 8001dca:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8001dce:	460b      	mov	r3, r1
 8001dd0:	2900      	cmp	r1, #0
 8001dd2:	d1f5      	bne.n	8001dc0 <_printf_i+0x16c>
 8001dd4:	e7b9      	b.n	8001d4a <_printf_i+0xf6>
 8001dd6:	6813      	ldr	r3, [r2, #0]
 8001dd8:	6825      	ldr	r5, [r4, #0]
 8001dda:	6961      	ldr	r1, [r4, #20]
 8001ddc:	1d18      	adds	r0, r3, #4
 8001dde:	6010      	str	r0, [r2, #0]
 8001de0:	0628      	lsls	r0, r5, #24
 8001de2:	681b      	ldr	r3, [r3, #0]
 8001de4:	d501      	bpl.n	8001dea <_printf_i+0x196>
 8001de6:	6019      	str	r1, [r3, #0]
 8001de8:	e002      	b.n	8001df0 <_printf_i+0x19c>
 8001dea:	066a      	lsls	r2, r5, #25
 8001dec:	d5fb      	bpl.n	8001de6 <_printf_i+0x192>
 8001dee:	8019      	strh	r1, [r3, #0]
 8001df0:	2300      	movs	r3, #0
 8001df2:	6123      	str	r3, [r4, #16]
 8001df4:	4665      	mov	r5, ip
 8001df6:	e7b9      	b.n	8001d6c <_printf_i+0x118>
 8001df8:	6813      	ldr	r3, [r2, #0]
 8001dfa:	1d19      	adds	r1, r3, #4
 8001dfc:	6011      	str	r1, [r2, #0]
 8001dfe:	681d      	ldr	r5, [r3, #0]
 8001e00:	6862      	ldr	r2, [r4, #4]
 8001e02:	2100      	movs	r1, #0
 8001e04:	4628      	mov	r0, r5
 8001e06:	f7fe f9f3 	bl	80001f0 <memchr>
 8001e0a:	b108      	cbz	r0, 8001e10 <_printf_i+0x1bc>
 8001e0c:	1b40      	subs	r0, r0, r5
 8001e0e:	6060      	str	r0, [r4, #4]
 8001e10:	6863      	ldr	r3, [r4, #4]
 8001e12:	6123      	str	r3, [r4, #16]
 8001e14:	2300      	movs	r3, #0
 8001e16:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001e1a:	e7a7      	b.n	8001d6c <_printf_i+0x118>
 8001e1c:	6923      	ldr	r3, [r4, #16]
 8001e1e:	462a      	mov	r2, r5
 8001e20:	4639      	mov	r1, r7
 8001e22:	4630      	mov	r0, r6
 8001e24:	47c0      	blx	r8
 8001e26:	3001      	adds	r0, #1
 8001e28:	d0aa      	beq.n	8001d80 <_printf_i+0x12c>
 8001e2a:	6823      	ldr	r3, [r4, #0]
 8001e2c:	079b      	lsls	r3, r3, #30
 8001e2e:	d413      	bmi.n	8001e58 <_printf_i+0x204>
 8001e30:	68e0      	ldr	r0, [r4, #12]
 8001e32:	9b03      	ldr	r3, [sp, #12]
 8001e34:	4298      	cmp	r0, r3
 8001e36:	bfb8      	it	lt
 8001e38:	4618      	movlt	r0, r3
 8001e3a:	e7a3      	b.n	8001d84 <_printf_i+0x130>
 8001e3c:	2301      	movs	r3, #1
 8001e3e:	464a      	mov	r2, r9
 8001e40:	4639      	mov	r1, r7
 8001e42:	4630      	mov	r0, r6
 8001e44:	47c0      	blx	r8
 8001e46:	3001      	adds	r0, #1
 8001e48:	d09a      	beq.n	8001d80 <_printf_i+0x12c>
 8001e4a:	3501      	adds	r5, #1
 8001e4c:	68e3      	ldr	r3, [r4, #12]
 8001e4e:	9a03      	ldr	r2, [sp, #12]
 8001e50:	1a9b      	subs	r3, r3, r2
 8001e52:	42ab      	cmp	r3, r5
 8001e54:	dcf2      	bgt.n	8001e3c <_printf_i+0x1e8>
 8001e56:	e7eb      	b.n	8001e30 <_printf_i+0x1dc>
 8001e58:	2500      	movs	r5, #0
 8001e5a:	f104 0919 	add.w	r9, r4, #25
 8001e5e:	e7f5      	b.n	8001e4c <_printf_i+0x1f8>
 8001e60:	2b00      	cmp	r3, #0
 8001e62:	d1ac      	bne.n	8001dbe <_printf_i+0x16a>
 8001e64:	7803      	ldrb	r3, [r0, #0]
 8001e66:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001e6a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001e6e:	e76c      	b.n	8001d4a <_printf_i+0xf6>
 8001e70:	080036c9 	.word	0x080036c9
 8001e74:	080036da 	.word	0x080036da

08001e78 <sniprintf>:
 8001e78:	b40c      	push	{r2, r3}
 8001e7a:	b530      	push	{r4, r5, lr}
 8001e7c:	4b17      	ldr	r3, [pc, #92]	; (8001edc <sniprintf+0x64>)
 8001e7e:	1e0c      	subs	r4, r1, #0
 8001e80:	b09d      	sub	sp, #116	; 0x74
 8001e82:	681d      	ldr	r5, [r3, #0]
 8001e84:	da08      	bge.n	8001e98 <sniprintf+0x20>
 8001e86:	238b      	movs	r3, #139	; 0x8b
 8001e88:	602b      	str	r3, [r5, #0]
 8001e8a:	f04f 30ff 	mov.w	r0, #4294967295
 8001e8e:	b01d      	add	sp, #116	; 0x74
 8001e90:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001e94:	b002      	add	sp, #8
 8001e96:	4770      	bx	lr
 8001e98:	f44f 7302 	mov.w	r3, #520	; 0x208
 8001e9c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8001ea0:	bf14      	ite	ne
 8001ea2:	f104 33ff 	addne.w	r3, r4, #4294967295
 8001ea6:	4623      	moveq	r3, r4
 8001ea8:	9304      	str	r3, [sp, #16]
 8001eaa:	9307      	str	r3, [sp, #28]
 8001eac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001eb0:	9002      	str	r0, [sp, #8]
 8001eb2:	9006      	str	r0, [sp, #24]
 8001eb4:	f8ad 3016 	strh.w	r3, [sp, #22]
 8001eb8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8001eba:	ab21      	add	r3, sp, #132	; 0x84
 8001ebc:	a902      	add	r1, sp, #8
 8001ebe:	4628      	mov	r0, r5
 8001ec0:	9301      	str	r3, [sp, #4]
 8001ec2:	f001 fa5d 	bl	8003380 <_svfiprintf_r>
 8001ec6:	1c43      	adds	r3, r0, #1
 8001ec8:	bfbc      	itt	lt
 8001eca:	238b      	movlt	r3, #139	; 0x8b
 8001ecc:	602b      	strlt	r3, [r5, #0]
 8001ece:	2c00      	cmp	r4, #0
 8001ed0:	d0dd      	beq.n	8001e8e <sniprintf+0x16>
 8001ed2:	9b02      	ldr	r3, [sp, #8]
 8001ed4:	2200      	movs	r2, #0
 8001ed6:	701a      	strb	r2, [r3, #0]
 8001ed8:	e7d9      	b.n	8001e8e <sniprintf+0x16>
 8001eda:	bf00      	nop
 8001edc:	20000004 	.word	0x20000004

08001ee0 <quorem>:
 8001ee0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001ee4:	6903      	ldr	r3, [r0, #16]
 8001ee6:	690c      	ldr	r4, [r1, #16]
 8001ee8:	42a3      	cmp	r3, r4
 8001eea:	4680      	mov	r8, r0
 8001eec:	f2c0 8082 	blt.w	8001ff4 <quorem+0x114>
 8001ef0:	3c01      	subs	r4, #1
 8001ef2:	f101 0714 	add.w	r7, r1, #20
 8001ef6:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 8001efa:	f100 0614 	add.w	r6, r0, #20
 8001efe:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8001f02:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8001f06:	eb06 030c 	add.w	r3, r6, ip
 8001f0a:	3501      	adds	r5, #1
 8001f0c:	eb07 090c 	add.w	r9, r7, ip
 8001f10:	9301      	str	r3, [sp, #4]
 8001f12:	fbb0 f5f5 	udiv	r5, r0, r5
 8001f16:	b395      	cbz	r5, 8001f7e <quorem+0x9e>
 8001f18:	f04f 0a00 	mov.w	sl, #0
 8001f1c:	4638      	mov	r0, r7
 8001f1e:	46b6      	mov	lr, r6
 8001f20:	46d3      	mov	fp, sl
 8001f22:	f850 2b04 	ldr.w	r2, [r0], #4
 8001f26:	b293      	uxth	r3, r2
 8001f28:	fb05 a303 	mla	r3, r5, r3, sl
 8001f2c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8001f30:	b29b      	uxth	r3, r3
 8001f32:	ebab 0303 	sub.w	r3, fp, r3
 8001f36:	0c12      	lsrs	r2, r2, #16
 8001f38:	f8de b000 	ldr.w	fp, [lr]
 8001f3c:	fb05 a202 	mla	r2, r5, r2, sl
 8001f40:	fa13 f38b 	uxtah	r3, r3, fp
 8001f44:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8001f48:	fa1f fb82 	uxth.w	fp, r2
 8001f4c:	f8de 2000 	ldr.w	r2, [lr]
 8001f50:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 8001f54:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8001f58:	b29b      	uxth	r3, r3
 8001f5a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001f5e:	4581      	cmp	r9, r0
 8001f60:	ea4f 4b22 	mov.w	fp, r2, asr #16
 8001f64:	f84e 3b04 	str.w	r3, [lr], #4
 8001f68:	d2db      	bcs.n	8001f22 <quorem+0x42>
 8001f6a:	f856 300c 	ldr.w	r3, [r6, ip]
 8001f6e:	b933      	cbnz	r3, 8001f7e <quorem+0x9e>
 8001f70:	9b01      	ldr	r3, [sp, #4]
 8001f72:	3b04      	subs	r3, #4
 8001f74:	429e      	cmp	r6, r3
 8001f76:	461a      	mov	r2, r3
 8001f78:	d330      	bcc.n	8001fdc <quorem+0xfc>
 8001f7a:	f8c8 4010 	str.w	r4, [r8, #16]
 8001f7e:	4640      	mov	r0, r8
 8001f80:	f001 f828 	bl	8002fd4 <__mcmp>
 8001f84:	2800      	cmp	r0, #0
 8001f86:	db25      	blt.n	8001fd4 <quorem+0xf4>
 8001f88:	3501      	adds	r5, #1
 8001f8a:	4630      	mov	r0, r6
 8001f8c:	f04f 0c00 	mov.w	ip, #0
 8001f90:	f857 2b04 	ldr.w	r2, [r7], #4
 8001f94:	f8d0 e000 	ldr.w	lr, [r0]
 8001f98:	b293      	uxth	r3, r2
 8001f9a:	ebac 0303 	sub.w	r3, ip, r3
 8001f9e:	0c12      	lsrs	r2, r2, #16
 8001fa0:	fa13 f38e 	uxtah	r3, r3, lr
 8001fa4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8001fa8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8001fac:	b29b      	uxth	r3, r3
 8001fae:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001fb2:	45b9      	cmp	r9, r7
 8001fb4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8001fb8:	f840 3b04 	str.w	r3, [r0], #4
 8001fbc:	d2e8      	bcs.n	8001f90 <quorem+0xb0>
 8001fbe:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8001fc2:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8001fc6:	b92a      	cbnz	r2, 8001fd4 <quorem+0xf4>
 8001fc8:	3b04      	subs	r3, #4
 8001fca:	429e      	cmp	r6, r3
 8001fcc:	461a      	mov	r2, r3
 8001fce:	d30b      	bcc.n	8001fe8 <quorem+0x108>
 8001fd0:	f8c8 4010 	str.w	r4, [r8, #16]
 8001fd4:	4628      	mov	r0, r5
 8001fd6:	b003      	add	sp, #12
 8001fd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001fdc:	6812      	ldr	r2, [r2, #0]
 8001fde:	3b04      	subs	r3, #4
 8001fe0:	2a00      	cmp	r2, #0
 8001fe2:	d1ca      	bne.n	8001f7a <quorem+0x9a>
 8001fe4:	3c01      	subs	r4, #1
 8001fe6:	e7c5      	b.n	8001f74 <quorem+0x94>
 8001fe8:	6812      	ldr	r2, [r2, #0]
 8001fea:	3b04      	subs	r3, #4
 8001fec:	2a00      	cmp	r2, #0
 8001fee:	d1ef      	bne.n	8001fd0 <quorem+0xf0>
 8001ff0:	3c01      	subs	r4, #1
 8001ff2:	e7ea      	b.n	8001fca <quorem+0xea>
 8001ff4:	2000      	movs	r0, #0
 8001ff6:	e7ee      	b.n	8001fd6 <quorem+0xf6>

08001ff8 <_dtoa_r>:
 8001ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001ffc:	ec57 6b10 	vmov	r6, r7, d0
 8002000:	b097      	sub	sp, #92	; 0x5c
 8002002:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8002004:	9106      	str	r1, [sp, #24]
 8002006:	4604      	mov	r4, r0
 8002008:	920b      	str	r2, [sp, #44]	; 0x2c
 800200a:	9312      	str	r3, [sp, #72]	; 0x48
 800200c:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8002010:	e9cd 6700 	strd	r6, r7, [sp]
 8002014:	b93d      	cbnz	r5, 8002026 <_dtoa_r+0x2e>
 8002016:	2010      	movs	r0, #16
 8002018:	f000 fdb4 	bl	8002b84 <malloc>
 800201c:	6260      	str	r0, [r4, #36]	; 0x24
 800201e:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002022:	6005      	str	r5, [r0, #0]
 8002024:	60c5      	str	r5, [r0, #12]
 8002026:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002028:	6819      	ldr	r1, [r3, #0]
 800202a:	b151      	cbz	r1, 8002042 <_dtoa_r+0x4a>
 800202c:	685a      	ldr	r2, [r3, #4]
 800202e:	604a      	str	r2, [r1, #4]
 8002030:	2301      	movs	r3, #1
 8002032:	4093      	lsls	r3, r2
 8002034:	608b      	str	r3, [r1, #8]
 8002036:	4620      	mov	r0, r4
 8002038:	f000 fdeb 	bl	8002c12 <_Bfree>
 800203c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800203e:	2200      	movs	r2, #0
 8002040:	601a      	str	r2, [r3, #0]
 8002042:	1e3b      	subs	r3, r7, #0
 8002044:	bfbb      	ittet	lt
 8002046:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800204a:	9301      	strlt	r3, [sp, #4]
 800204c:	2300      	movge	r3, #0
 800204e:	2201      	movlt	r2, #1
 8002050:	bfac      	ite	ge
 8002052:	f8c8 3000 	strge.w	r3, [r8]
 8002056:	f8c8 2000 	strlt.w	r2, [r8]
 800205a:	4baf      	ldr	r3, [pc, #700]	; (8002318 <_dtoa_r+0x320>)
 800205c:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8002060:	ea33 0308 	bics.w	r3, r3, r8
 8002064:	d114      	bne.n	8002090 <_dtoa_r+0x98>
 8002066:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002068:	f242 730f 	movw	r3, #9999	; 0x270f
 800206c:	6013      	str	r3, [r2, #0]
 800206e:	9b00      	ldr	r3, [sp, #0]
 8002070:	b923      	cbnz	r3, 800207c <_dtoa_r+0x84>
 8002072:	f3c8 0013 	ubfx	r0, r8, #0, #20
 8002076:	2800      	cmp	r0, #0
 8002078:	f000 8542 	beq.w	8002b00 <_dtoa_r+0xb08>
 800207c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800207e:	f8df b2ac 	ldr.w	fp, [pc, #684]	; 800232c <_dtoa_r+0x334>
 8002082:	2b00      	cmp	r3, #0
 8002084:	f000 8544 	beq.w	8002b10 <_dtoa_r+0xb18>
 8002088:	f10b 0303 	add.w	r3, fp, #3
 800208c:	f000 bd3e 	b.w	8002b0c <_dtoa_r+0xb14>
 8002090:	e9dd 6700 	ldrd	r6, r7, [sp]
 8002094:	2200      	movs	r2, #0
 8002096:	2300      	movs	r3, #0
 8002098:	4630      	mov	r0, r6
 800209a:	4639      	mov	r1, r7
 800209c:	f7fe fd1c 	bl	8000ad8 <__aeabi_dcmpeq>
 80020a0:	4681      	mov	r9, r0
 80020a2:	b168      	cbz	r0, 80020c0 <_dtoa_r+0xc8>
 80020a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80020a6:	2301      	movs	r3, #1
 80020a8:	6013      	str	r3, [r2, #0]
 80020aa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	f000 8524 	beq.w	8002afa <_dtoa_r+0xb02>
 80020b2:	4b9a      	ldr	r3, [pc, #616]	; (800231c <_dtoa_r+0x324>)
 80020b4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80020b6:	f103 3bff 	add.w	fp, r3, #4294967295
 80020ba:	6013      	str	r3, [r2, #0]
 80020bc:	f000 bd28 	b.w	8002b10 <_dtoa_r+0xb18>
 80020c0:	aa14      	add	r2, sp, #80	; 0x50
 80020c2:	a915      	add	r1, sp, #84	; 0x54
 80020c4:	ec47 6b10 	vmov	d0, r6, r7
 80020c8:	4620      	mov	r0, r4
 80020ca:	f000 fffa 	bl	80030c2 <__d2b>
 80020ce:	f3c8 550a 	ubfx	r5, r8, #20, #11
 80020d2:	9004      	str	r0, [sp, #16]
 80020d4:	2d00      	cmp	r5, #0
 80020d6:	d07c      	beq.n	80021d2 <_dtoa_r+0x1da>
 80020d8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80020dc:	f043 5b7f 	orr.w	fp, r3, #1069547520	; 0x3fc00000
 80020e0:	46b2      	mov	sl, r6
 80020e2:	f44b 1b40 	orr.w	fp, fp, #3145728	; 0x300000
 80020e6:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80020ea:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
 80020ee:	2200      	movs	r2, #0
 80020f0:	4b8b      	ldr	r3, [pc, #556]	; (8002320 <_dtoa_r+0x328>)
 80020f2:	4650      	mov	r0, sl
 80020f4:	4659      	mov	r1, fp
 80020f6:	f7fe f8cf 	bl	8000298 <__aeabi_dsub>
 80020fa:	a381      	add	r3, pc, #516	; (adr r3, 8002300 <_dtoa_r+0x308>)
 80020fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002100:	f7fe fa82 	bl	8000608 <__aeabi_dmul>
 8002104:	a380      	add	r3, pc, #512	; (adr r3, 8002308 <_dtoa_r+0x310>)
 8002106:	e9d3 2300 	ldrd	r2, r3, [r3]
 800210a:	f7fe f8c7 	bl	800029c <__adddf3>
 800210e:	4606      	mov	r6, r0
 8002110:	4628      	mov	r0, r5
 8002112:	460f      	mov	r7, r1
 8002114:	f7fe fa0e 	bl	8000534 <__aeabi_i2d>
 8002118:	a37d      	add	r3, pc, #500	; (adr r3, 8002310 <_dtoa_r+0x318>)
 800211a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800211e:	f7fe fa73 	bl	8000608 <__aeabi_dmul>
 8002122:	4602      	mov	r2, r0
 8002124:	460b      	mov	r3, r1
 8002126:	4630      	mov	r0, r6
 8002128:	4639      	mov	r1, r7
 800212a:	f7fe f8b7 	bl	800029c <__adddf3>
 800212e:	4606      	mov	r6, r0
 8002130:	460f      	mov	r7, r1
 8002132:	f7fe fd19 	bl	8000b68 <__aeabi_d2iz>
 8002136:	2200      	movs	r2, #0
 8002138:	4682      	mov	sl, r0
 800213a:	2300      	movs	r3, #0
 800213c:	4630      	mov	r0, r6
 800213e:	4639      	mov	r1, r7
 8002140:	f7fe fcd4 	bl	8000aec <__aeabi_dcmplt>
 8002144:	b148      	cbz	r0, 800215a <_dtoa_r+0x162>
 8002146:	4650      	mov	r0, sl
 8002148:	f7fe f9f4 	bl	8000534 <__aeabi_i2d>
 800214c:	4632      	mov	r2, r6
 800214e:	463b      	mov	r3, r7
 8002150:	f7fe fcc2 	bl	8000ad8 <__aeabi_dcmpeq>
 8002154:	b908      	cbnz	r0, 800215a <_dtoa_r+0x162>
 8002156:	f10a 3aff 	add.w	sl, sl, #4294967295
 800215a:	f1ba 0f16 	cmp.w	sl, #22
 800215e:	d859      	bhi.n	8002214 <_dtoa_r+0x21c>
 8002160:	4970      	ldr	r1, [pc, #448]	; (8002324 <_dtoa_r+0x32c>)
 8002162:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8002166:	e9dd 2300 	ldrd	r2, r3, [sp]
 800216a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800216e:	f7fe fcdb 	bl	8000b28 <__aeabi_dcmpgt>
 8002172:	2800      	cmp	r0, #0
 8002174:	d050      	beq.n	8002218 <_dtoa_r+0x220>
 8002176:	f10a 3aff 	add.w	sl, sl, #4294967295
 800217a:	2300      	movs	r3, #0
 800217c:	930f      	str	r3, [sp, #60]	; 0x3c
 800217e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8002180:	1b5d      	subs	r5, r3, r5
 8002182:	f1b5 0801 	subs.w	r8, r5, #1
 8002186:	bf49      	itett	mi
 8002188:	f1c5 0301 	rsbmi	r3, r5, #1
 800218c:	2300      	movpl	r3, #0
 800218e:	9305      	strmi	r3, [sp, #20]
 8002190:	f04f 0800 	movmi.w	r8, #0
 8002194:	bf58      	it	pl
 8002196:	9305      	strpl	r3, [sp, #20]
 8002198:	f1ba 0f00 	cmp.w	sl, #0
 800219c:	db3e      	blt.n	800221c <_dtoa_r+0x224>
 800219e:	2300      	movs	r3, #0
 80021a0:	44d0      	add	r8, sl
 80021a2:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 80021a6:	9307      	str	r3, [sp, #28]
 80021a8:	9b06      	ldr	r3, [sp, #24]
 80021aa:	2b09      	cmp	r3, #9
 80021ac:	f200 8090 	bhi.w	80022d0 <_dtoa_r+0x2d8>
 80021b0:	2b05      	cmp	r3, #5
 80021b2:	bfc4      	itt	gt
 80021b4:	3b04      	subgt	r3, #4
 80021b6:	9306      	strgt	r3, [sp, #24]
 80021b8:	9b06      	ldr	r3, [sp, #24]
 80021ba:	f1a3 0302 	sub.w	r3, r3, #2
 80021be:	bfcc      	ite	gt
 80021c0:	2500      	movgt	r5, #0
 80021c2:	2501      	movle	r5, #1
 80021c4:	2b03      	cmp	r3, #3
 80021c6:	f200 808f 	bhi.w	80022e8 <_dtoa_r+0x2f0>
 80021ca:	e8df f003 	tbb	[pc, r3]
 80021ce:	7f7d      	.short	0x7f7d
 80021d0:	7131      	.short	0x7131
 80021d2:	e9dd 5314 	ldrd	r5, r3, [sp, #80]	; 0x50
 80021d6:	441d      	add	r5, r3
 80021d8:	f205 4032 	addw	r0, r5, #1074	; 0x432
 80021dc:	2820      	cmp	r0, #32
 80021de:	dd13      	ble.n	8002208 <_dtoa_r+0x210>
 80021e0:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 80021e4:	9b00      	ldr	r3, [sp, #0]
 80021e6:	fa08 f800 	lsl.w	r8, r8, r0
 80021ea:	f205 4012 	addw	r0, r5, #1042	; 0x412
 80021ee:	fa23 f000 	lsr.w	r0, r3, r0
 80021f2:	ea48 0000 	orr.w	r0, r8, r0
 80021f6:	f7fe f98d 	bl	8000514 <__aeabi_ui2d>
 80021fa:	2301      	movs	r3, #1
 80021fc:	4682      	mov	sl, r0
 80021fe:	f1a1 7bf8 	sub.w	fp, r1, #32505856	; 0x1f00000
 8002202:	3d01      	subs	r5, #1
 8002204:	9313      	str	r3, [sp, #76]	; 0x4c
 8002206:	e772      	b.n	80020ee <_dtoa_r+0xf6>
 8002208:	9b00      	ldr	r3, [sp, #0]
 800220a:	f1c0 0020 	rsb	r0, r0, #32
 800220e:	fa03 f000 	lsl.w	r0, r3, r0
 8002212:	e7f0      	b.n	80021f6 <_dtoa_r+0x1fe>
 8002214:	2301      	movs	r3, #1
 8002216:	e7b1      	b.n	800217c <_dtoa_r+0x184>
 8002218:	900f      	str	r0, [sp, #60]	; 0x3c
 800221a:	e7b0      	b.n	800217e <_dtoa_r+0x186>
 800221c:	9b05      	ldr	r3, [sp, #20]
 800221e:	eba3 030a 	sub.w	r3, r3, sl
 8002222:	9305      	str	r3, [sp, #20]
 8002224:	f1ca 0300 	rsb	r3, sl, #0
 8002228:	9307      	str	r3, [sp, #28]
 800222a:	2300      	movs	r3, #0
 800222c:	930e      	str	r3, [sp, #56]	; 0x38
 800222e:	e7bb      	b.n	80021a8 <_dtoa_r+0x1b0>
 8002230:	2301      	movs	r3, #1
 8002232:	930a      	str	r3, [sp, #40]	; 0x28
 8002234:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002236:	2b00      	cmp	r3, #0
 8002238:	dd59      	ble.n	80022ee <_dtoa_r+0x2f6>
 800223a:	9302      	str	r3, [sp, #8]
 800223c:	4699      	mov	r9, r3
 800223e:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8002240:	2200      	movs	r2, #0
 8002242:	6072      	str	r2, [r6, #4]
 8002244:	2204      	movs	r2, #4
 8002246:	f102 0014 	add.w	r0, r2, #20
 800224a:	4298      	cmp	r0, r3
 800224c:	6871      	ldr	r1, [r6, #4]
 800224e:	d953      	bls.n	80022f8 <_dtoa_r+0x300>
 8002250:	4620      	mov	r0, r4
 8002252:	f000 fcaa 	bl	8002baa <_Balloc>
 8002256:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002258:	6030      	str	r0, [r6, #0]
 800225a:	f1b9 0f0e 	cmp.w	r9, #14
 800225e:	f8d3 b000 	ldr.w	fp, [r3]
 8002262:	f200 80e6 	bhi.w	8002432 <_dtoa_r+0x43a>
 8002266:	2d00      	cmp	r5, #0
 8002268:	f000 80e3 	beq.w	8002432 <_dtoa_r+0x43a>
 800226c:	ed9d 7b00 	vldr	d7, [sp]
 8002270:	f1ba 0f00 	cmp.w	sl, #0
 8002274:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
 8002278:	dd74      	ble.n	8002364 <_dtoa_r+0x36c>
 800227a:	4a2a      	ldr	r2, [pc, #168]	; (8002324 <_dtoa_r+0x32c>)
 800227c:	f00a 030f 	and.w	r3, sl, #15
 8002280:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002284:	ed93 7b00 	vldr	d7, [r3]
 8002288:	ea4f 162a 	mov.w	r6, sl, asr #4
 800228c:	06f0      	lsls	r0, r6, #27
 800228e:	ed8d 7b08 	vstr	d7, [sp, #32]
 8002292:	d565      	bpl.n	8002360 <_dtoa_r+0x368>
 8002294:	4b24      	ldr	r3, [pc, #144]	; (8002328 <_dtoa_r+0x330>)
 8002296:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800229a:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800229e:	f7fe fadd 	bl	800085c <__aeabi_ddiv>
 80022a2:	e9cd 0100 	strd	r0, r1, [sp]
 80022a6:	f006 060f 	and.w	r6, r6, #15
 80022aa:	2503      	movs	r5, #3
 80022ac:	4f1e      	ldr	r7, [pc, #120]	; (8002328 <_dtoa_r+0x330>)
 80022ae:	e04c      	b.n	800234a <_dtoa_r+0x352>
 80022b0:	2301      	movs	r3, #1
 80022b2:	930a      	str	r3, [sp, #40]	; 0x28
 80022b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80022b6:	4453      	add	r3, sl
 80022b8:	f103 0901 	add.w	r9, r3, #1
 80022bc:	9302      	str	r3, [sp, #8]
 80022be:	464b      	mov	r3, r9
 80022c0:	2b01      	cmp	r3, #1
 80022c2:	bfb8      	it	lt
 80022c4:	2301      	movlt	r3, #1
 80022c6:	e7ba      	b.n	800223e <_dtoa_r+0x246>
 80022c8:	2300      	movs	r3, #0
 80022ca:	e7b2      	b.n	8002232 <_dtoa_r+0x23a>
 80022cc:	2300      	movs	r3, #0
 80022ce:	e7f0      	b.n	80022b2 <_dtoa_r+0x2ba>
 80022d0:	2501      	movs	r5, #1
 80022d2:	2300      	movs	r3, #0
 80022d4:	9306      	str	r3, [sp, #24]
 80022d6:	950a      	str	r5, [sp, #40]	; 0x28
 80022d8:	f04f 33ff 	mov.w	r3, #4294967295
 80022dc:	9302      	str	r3, [sp, #8]
 80022de:	4699      	mov	r9, r3
 80022e0:	2200      	movs	r2, #0
 80022e2:	2312      	movs	r3, #18
 80022e4:	920b      	str	r2, [sp, #44]	; 0x2c
 80022e6:	e7aa      	b.n	800223e <_dtoa_r+0x246>
 80022e8:	2301      	movs	r3, #1
 80022ea:	930a      	str	r3, [sp, #40]	; 0x28
 80022ec:	e7f4      	b.n	80022d8 <_dtoa_r+0x2e0>
 80022ee:	2301      	movs	r3, #1
 80022f0:	9302      	str	r3, [sp, #8]
 80022f2:	4699      	mov	r9, r3
 80022f4:	461a      	mov	r2, r3
 80022f6:	e7f5      	b.n	80022e4 <_dtoa_r+0x2ec>
 80022f8:	3101      	adds	r1, #1
 80022fa:	6071      	str	r1, [r6, #4]
 80022fc:	0052      	lsls	r2, r2, #1
 80022fe:	e7a2      	b.n	8002246 <_dtoa_r+0x24e>
 8002300:	636f4361 	.word	0x636f4361
 8002304:	3fd287a7 	.word	0x3fd287a7
 8002308:	8b60c8b3 	.word	0x8b60c8b3
 800230c:	3fc68a28 	.word	0x3fc68a28
 8002310:	509f79fb 	.word	0x509f79fb
 8002314:	3fd34413 	.word	0x3fd34413
 8002318:	7ff00000 	.word	0x7ff00000
 800231c:	080036c8 	.word	0x080036c8
 8002320:	3ff80000 	.word	0x3ff80000
 8002324:	08003720 	.word	0x08003720
 8002328:	080036f8 	.word	0x080036f8
 800232c:	080036f4 	.word	0x080036f4
 8002330:	07f1      	lsls	r1, r6, #31
 8002332:	d508      	bpl.n	8002346 <_dtoa_r+0x34e>
 8002334:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8002338:	e9d7 2300 	ldrd	r2, r3, [r7]
 800233c:	f7fe f964 	bl	8000608 <__aeabi_dmul>
 8002340:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8002344:	3501      	adds	r5, #1
 8002346:	1076      	asrs	r6, r6, #1
 8002348:	3708      	adds	r7, #8
 800234a:	2e00      	cmp	r6, #0
 800234c:	d1f0      	bne.n	8002330 <_dtoa_r+0x338>
 800234e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002352:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002356:	f7fe fa81 	bl	800085c <__aeabi_ddiv>
 800235a:	e9cd 0100 	strd	r0, r1, [sp]
 800235e:	e01a      	b.n	8002396 <_dtoa_r+0x39e>
 8002360:	2502      	movs	r5, #2
 8002362:	e7a3      	b.n	80022ac <_dtoa_r+0x2b4>
 8002364:	f000 80a0 	beq.w	80024a8 <_dtoa_r+0x4b0>
 8002368:	f1ca 0600 	rsb	r6, sl, #0
 800236c:	4b9f      	ldr	r3, [pc, #636]	; (80025ec <_dtoa_r+0x5f4>)
 800236e:	4fa0      	ldr	r7, [pc, #640]	; (80025f0 <_dtoa_r+0x5f8>)
 8002370:	f006 020f 	and.w	r2, r6, #15
 8002374:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002378:	e9d3 2300 	ldrd	r2, r3, [r3]
 800237c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002380:	f7fe f942 	bl	8000608 <__aeabi_dmul>
 8002384:	e9cd 0100 	strd	r0, r1, [sp]
 8002388:	1136      	asrs	r6, r6, #4
 800238a:	2300      	movs	r3, #0
 800238c:	2502      	movs	r5, #2
 800238e:	2e00      	cmp	r6, #0
 8002390:	d17f      	bne.n	8002492 <_dtoa_r+0x49a>
 8002392:	2b00      	cmp	r3, #0
 8002394:	d1e1      	bne.n	800235a <_dtoa_r+0x362>
 8002396:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002398:	2b00      	cmp	r3, #0
 800239a:	f000 8087 	beq.w	80024ac <_dtoa_r+0x4b4>
 800239e:	e9dd 6700 	ldrd	r6, r7, [sp]
 80023a2:	2200      	movs	r2, #0
 80023a4:	4b93      	ldr	r3, [pc, #588]	; (80025f4 <_dtoa_r+0x5fc>)
 80023a6:	4630      	mov	r0, r6
 80023a8:	4639      	mov	r1, r7
 80023aa:	f7fe fb9f 	bl	8000aec <__aeabi_dcmplt>
 80023ae:	2800      	cmp	r0, #0
 80023b0:	d07c      	beq.n	80024ac <_dtoa_r+0x4b4>
 80023b2:	f1b9 0f00 	cmp.w	r9, #0
 80023b6:	d079      	beq.n	80024ac <_dtoa_r+0x4b4>
 80023b8:	9b02      	ldr	r3, [sp, #8]
 80023ba:	2b00      	cmp	r3, #0
 80023bc:	dd35      	ble.n	800242a <_dtoa_r+0x432>
 80023be:	f10a 33ff 	add.w	r3, sl, #4294967295
 80023c2:	9308      	str	r3, [sp, #32]
 80023c4:	4639      	mov	r1, r7
 80023c6:	2200      	movs	r2, #0
 80023c8:	4b8b      	ldr	r3, [pc, #556]	; (80025f8 <_dtoa_r+0x600>)
 80023ca:	4630      	mov	r0, r6
 80023cc:	f7fe f91c 	bl	8000608 <__aeabi_dmul>
 80023d0:	e9cd 0100 	strd	r0, r1, [sp]
 80023d4:	9f02      	ldr	r7, [sp, #8]
 80023d6:	3501      	adds	r5, #1
 80023d8:	4628      	mov	r0, r5
 80023da:	f7fe f8ab 	bl	8000534 <__aeabi_i2d>
 80023de:	e9dd 2300 	ldrd	r2, r3, [sp]
 80023e2:	f7fe f911 	bl	8000608 <__aeabi_dmul>
 80023e6:	2200      	movs	r2, #0
 80023e8:	4b84      	ldr	r3, [pc, #528]	; (80025fc <_dtoa_r+0x604>)
 80023ea:	f7fd ff57 	bl	800029c <__adddf3>
 80023ee:	4605      	mov	r5, r0
 80023f0:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 80023f4:	2f00      	cmp	r7, #0
 80023f6:	d15d      	bne.n	80024b4 <_dtoa_r+0x4bc>
 80023f8:	2200      	movs	r2, #0
 80023fa:	4b81      	ldr	r3, [pc, #516]	; (8002600 <_dtoa_r+0x608>)
 80023fc:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002400:	f7fd ff4a 	bl	8000298 <__aeabi_dsub>
 8002404:	462a      	mov	r2, r5
 8002406:	4633      	mov	r3, r6
 8002408:	e9cd 0100 	strd	r0, r1, [sp]
 800240c:	f7fe fb8c 	bl	8000b28 <__aeabi_dcmpgt>
 8002410:	2800      	cmp	r0, #0
 8002412:	f040 8288 	bne.w	8002926 <_dtoa_r+0x92e>
 8002416:	462a      	mov	r2, r5
 8002418:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800241c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002420:	f7fe fb64 	bl	8000aec <__aeabi_dcmplt>
 8002424:	2800      	cmp	r0, #0
 8002426:	f040 827c 	bne.w	8002922 <_dtoa_r+0x92a>
 800242a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800242e:	e9cd 2300 	strd	r2, r3, [sp]
 8002432:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002434:	2b00      	cmp	r3, #0
 8002436:	f2c0 8150 	blt.w	80026da <_dtoa_r+0x6e2>
 800243a:	f1ba 0f0e 	cmp.w	sl, #14
 800243e:	f300 814c 	bgt.w	80026da <_dtoa_r+0x6e2>
 8002442:	4b6a      	ldr	r3, [pc, #424]	; (80025ec <_dtoa_r+0x5f4>)
 8002444:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8002448:	ed93 7b00 	vldr	d7, [r3]
 800244c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800244e:	2b00      	cmp	r3, #0
 8002450:	ed8d 7b02 	vstr	d7, [sp, #8]
 8002454:	f280 80d8 	bge.w	8002608 <_dtoa_r+0x610>
 8002458:	f1b9 0f00 	cmp.w	r9, #0
 800245c:	f300 80d4 	bgt.w	8002608 <_dtoa_r+0x610>
 8002460:	f040 825e 	bne.w	8002920 <_dtoa_r+0x928>
 8002464:	2200      	movs	r2, #0
 8002466:	4b66      	ldr	r3, [pc, #408]	; (8002600 <_dtoa_r+0x608>)
 8002468:	ec51 0b17 	vmov	r0, r1, d7
 800246c:	f7fe f8cc 	bl	8000608 <__aeabi_dmul>
 8002470:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002474:	f7fe fb4e 	bl	8000b14 <__aeabi_dcmpge>
 8002478:	464f      	mov	r7, r9
 800247a:	464e      	mov	r6, r9
 800247c:	2800      	cmp	r0, #0
 800247e:	f040 8234 	bne.w	80028ea <_dtoa_r+0x8f2>
 8002482:	2331      	movs	r3, #49	; 0x31
 8002484:	f10b 0501 	add.w	r5, fp, #1
 8002488:	f88b 3000 	strb.w	r3, [fp]
 800248c:	f10a 0a01 	add.w	sl, sl, #1
 8002490:	e22f      	b.n	80028f2 <_dtoa_r+0x8fa>
 8002492:	07f2      	lsls	r2, r6, #31
 8002494:	d505      	bpl.n	80024a2 <_dtoa_r+0x4aa>
 8002496:	e9d7 2300 	ldrd	r2, r3, [r7]
 800249a:	f7fe f8b5 	bl	8000608 <__aeabi_dmul>
 800249e:	3501      	adds	r5, #1
 80024a0:	2301      	movs	r3, #1
 80024a2:	1076      	asrs	r6, r6, #1
 80024a4:	3708      	adds	r7, #8
 80024a6:	e772      	b.n	800238e <_dtoa_r+0x396>
 80024a8:	2502      	movs	r5, #2
 80024aa:	e774      	b.n	8002396 <_dtoa_r+0x39e>
 80024ac:	f8cd a020 	str.w	sl, [sp, #32]
 80024b0:	464f      	mov	r7, r9
 80024b2:	e791      	b.n	80023d8 <_dtoa_r+0x3e0>
 80024b4:	4b4d      	ldr	r3, [pc, #308]	; (80025ec <_dtoa_r+0x5f4>)
 80024b6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80024ba:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 80024be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80024c0:	2b00      	cmp	r3, #0
 80024c2:	d047      	beq.n	8002554 <_dtoa_r+0x55c>
 80024c4:	4602      	mov	r2, r0
 80024c6:	460b      	mov	r3, r1
 80024c8:	2000      	movs	r0, #0
 80024ca:	494e      	ldr	r1, [pc, #312]	; (8002604 <_dtoa_r+0x60c>)
 80024cc:	f7fe f9c6 	bl	800085c <__aeabi_ddiv>
 80024d0:	462a      	mov	r2, r5
 80024d2:	4633      	mov	r3, r6
 80024d4:	f7fd fee0 	bl	8000298 <__aeabi_dsub>
 80024d8:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 80024dc:	465d      	mov	r5, fp
 80024de:	e9dd 0100 	ldrd	r0, r1, [sp]
 80024e2:	f7fe fb41 	bl	8000b68 <__aeabi_d2iz>
 80024e6:	4606      	mov	r6, r0
 80024e8:	f7fe f824 	bl	8000534 <__aeabi_i2d>
 80024ec:	4602      	mov	r2, r0
 80024ee:	460b      	mov	r3, r1
 80024f0:	e9dd 0100 	ldrd	r0, r1, [sp]
 80024f4:	f7fd fed0 	bl	8000298 <__aeabi_dsub>
 80024f8:	3630      	adds	r6, #48	; 0x30
 80024fa:	f805 6b01 	strb.w	r6, [r5], #1
 80024fe:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8002502:	e9cd 0100 	strd	r0, r1, [sp]
 8002506:	f7fe faf1 	bl	8000aec <__aeabi_dcmplt>
 800250a:	2800      	cmp	r0, #0
 800250c:	d163      	bne.n	80025d6 <_dtoa_r+0x5de>
 800250e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002512:	2000      	movs	r0, #0
 8002514:	4937      	ldr	r1, [pc, #220]	; (80025f4 <_dtoa_r+0x5fc>)
 8002516:	f7fd febf 	bl	8000298 <__aeabi_dsub>
 800251a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800251e:	f7fe fae5 	bl	8000aec <__aeabi_dcmplt>
 8002522:	2800      	cmp	r0, #0
 8002524:	f040 80b7 	bne.w	8002696 <_dtoa_r+0x69e>
 8002528:	eba5 030b 	sub.w	r3, r5, fp
 800252c:	429f      	cmp	r7, r3
 800252e:	f77f af7c 	ble.w	800242a <_dtoa_r+0x432>
 8002532:	2200      	movs	r2, #0
 8002534:	4b30      	ldr	r3, [pc, #192]	; (80025f8 <_dtoa_r+0x600>)
 8002536:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800253a:	f7fe f865 	bl	8000608 <__aeabi_dmul>
 800253e:	2200      	movs	r2, #0
 8002540:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8002544:	4b2c      	ldr	r3, [pc, #176]	; (80025f8 <_dtoa_r+0x600>)
 8002546:	e9dd 0100 	ldrd	r0, r1, [sp]
 800254a:	f7fe f85d 	bl	8000608 <__aeabi_dmul>
 800254e:	e9cd 0100 	strd	r0, r1, [sp]
 8002552:	e7c4      	b.n	80024de <_dtoa_r+0x4e6>
 8002554:	462a      	mov	r2, r5
 8002556:	4633      	mov	r3, r6
 8002558:	f7fe f856 	bl	8000608 <__aeabi_dmul>
 800255c:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8002560:	eb0b 0507 	add.w	r5, fp, r7
 8002564:	465e      	mov	r6, fp
 8002566:	e9dd 0100 	ldrd	r0, r1, [sp]
 800256a:	f7fe fafd 	bl	8000b68 <__aeabi_d2iz>
 800256e:	4607      	mov	r7, r0
 8002570:	f7fd ffe0 	bl	8000534 <__aeabi_i2d>
 8002574:	3730      	adds	r7, #48	; 0x30
 8002576:	4602      	mov	r2, r0
 8002578:	460b      	mov	r3, r1
 800257a:	e9dd 0100 	ldrd	r0, r1, [sp]
 800257e:	f7fd fe8b 	bl	8000298 <__aeabi_dsub>
 8002582:	f806 7b01 	strb.w	r7, [r6], #1
 8002586:	42ae      	cmp	r6, r5
 8002588:	e9cd 0100 	strd	r0, r1, [sp]
 800258c:	f04f 0200 	mov.w	r2, #0
 8002590:	d126      	bne.n	80025e0 <_dtoa_r+0x5e8>
 8002592:	4b1c      	ldr	r3, [pc, #112]	; (8002604 <_dtoa_r+0x60c>)
 8002594:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002598:	f7fd fe80 	bl	800029c <__adddf3>
 800259c:	4602      	mov	r2, r0
 800259e:	460b      	mov	r3, r1
 80025a0:	e9dd 0100 	ldrd	r0, r1, [sp]
 80025a4:	f7fe fac0 	bl	8000b28 <__aeabi_dcmpgt>
 80025a8:	2800      	cmp	r0, #0
 80025aa:	d174      	bne.n	8002696 <_dtoa_r+0x69e>
 80025ac:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80025b0:	2000      	movs	r0, #0
 80025b2:	4914      	ldr	r1, [pc, #80]	; (8002604 <_dtoa_r+0x60c>)
 80025b4:	f7fd fe70 	bl	8000298 <__aeabi_dsub>
 80025b8:	4602      	mov	r2, r0
 80025ba:	460b      	mov	r3, r1
 80025bc:	e9dd 0100 	ldrd	r0, r1, [sp]
 80025c0:	f7fe fa94 	bl	8000aec <__aeabi_dcmplt>
 80025c4:	2800      	cmp	r0, #0
 80025c6:	f43f af30 	beq.w	800242a <_dtoa_r+0x432>
 80025ca:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80025ce:	2b30      	cmp	r3, #48	; 0x30
 80025d0:	f105 32ff 	add.w	r2, r5, #4294967295
 80025d4:	d002      	beq.n	80025dc <_dtoa_r+0x5e4>
 80025d6:	f8dd a020 	ldr.w	sl, [sp, #32]
 80025da:	e04a      	b.n	8002672 <_dtoa_r+0x67a>
 80025dc:	4615      	mov	r5, r2
 80025de:	e7f4      	b.n	80025ca <_dtoa_r+0x5d2>
 80025e0:	4b05      	ldr	r3, [pc, #20]	; (80025f8 <_dtoa_r+0x600>)
 80025e2:	f7fe f811 	bl	8000608 <__aeabi_dmul>
 80025e6:	e9cd 0100 	strd	r0, r1, [sp]
 80025ea:	e7bc      	b.n	8002566 <_dtoa_r+0x56e>
 80025ec:	08003720 	.word	0x08003720
 80025f0:	080036f8 	.word	0x080036f8
 80025f4:	3ff00000 	.word	0x3ff00000
 80025f8:	40240000 	.word	0x40240000
 80025fc:	401c0000 	.word	0x401c0000
 8002600:	40140000 	.word	0x40140000
 8002604:	3fe00000 	.word	0x3fe00000
 8002608:	e9dd 6700 	ldrd	r6, r7, [sp]
 800260c:	465d      	mov	r5, fp
 800260e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002612:	4630      	mov	r0, r6
 8002614:	4639      	mov	r1, r7
 8002616:	f7fe f921 	bl	800085c <__aeabi_ddiv>
 800261a:	f7fe faa5 	bl	8000b68 <__aeabi_d2iz>
 800261e:	4680      	mov	r8, r0
 8002620:	f7fd ff88 	bl	8000534 <__aeabi_i2d>
 8002624:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002628:	f7fd ffee 	bl	8000608 <__aeabi_dmul>
 800262c:	4602      	mov	r2, r0
 800262e:	460b      	mov	r3, r1
 8002630:	4630      	mov	r0, r6
 8002632:	4639      	mov	r1, r7
 8002634:	f108 0630 	add.w	r6, r8, #48	; 0x30
 8002638:	f7fd fe2e 	bl	8000298 <__aeabi_dsub>
 800263c:	f805 6b01 	strb.w	r6, [r5], #1
 8002640:	eba5 060b 	sub.w	r6, r5, fp
 8002644:	45b1      	cmp	r9, r6
 8002646:	4602      	mov	r2, r0
 8002648:	460b      	mov	r3, r1
 800264a:	d139      	bne.n	80026c0 <_dtoa_r+0x6c8>
 800264c:	f7fd fe26 	bl	800029c <__adddf3>
 8002650:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002654:	4606      	mov	r6, r0
 8002656:	460f      	mov	r7, r1
 8002658:	f7fe fa66 	bl	8000b28 <__aeabi_dcmpgt>
 800265c:	b9c8      	cbnz	r0, 8002692 <_dtoa_r+0x69a>
 800265e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002662:	4630      	mov	r0, r6
 8002664:	4639      	mov	r1, r7
 8002666:	f7fe fa37 	bl	8000ad8 <__aeabi_dcmpeq>
 800266a:	b110      	cbz	r0, 8002672 <_dtoa_r+0x67a>
 800266c:	f018 0f01 	tst.w	r8, #1
 8002670:	d10f      	bne.n	8002692 <_dtoa_r+0x69a>
 8002672:	9904      	ldr	r1, [sp, #16]
 8002674:	4620      	mov	r0, r4
 8002676:	f000 facc 	bl	8002c12 <_Bfree>
 800267a:	2300      	movs	r3, #0
 800267c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800267e:	702b      	strb	r3, [r5, #0]
 8002680:	f10a 0301 	add.w	r3, sl, #1
 8002684:	6013      	str	r3, [r2, #0]
 8002686:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002688:	2b00      	cmp	r3, #0
 800268a:	f000 8241 	beq.w	8002b10 <_dtoa_r+0xb18>
 800268e:	601d      	str	r5, [r3, #0]
 8002690:	e23e      	b.n	8002b10 <_dtoa_r+0xb18>
 8002692:	f8cd a020 	str.w	sl, [sp, #32]
 8002696:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800269a:	2a39      	cmp	r2, #57	; 0x39
 800269c:	f105 33ff 	add.w	r3, r5, #4294967295
 80026a0:	d108      	bne.n	80026b4 <_dtoa_r+0x6bc>
 80026a2:	459b      	cmp	fp, r3
 80026a4:	d10a      	bne.n	80026bc <_dtoa_r+0x6c4>
 80026a6:	9b08      	ldr	r3, [sp, #32]
 80026a8:	3301      	adds	r3, #1
 80026aa:	9308      	str	r3, [sp, #32]
 80026ac:	2330      	movs	r3, #48	; 0x30
 80026ae:	f88b 3000 	strb.w	r3, [fp]
 80026b2:	465b      	mov	r3, fp
 80026b4:	781a      	ldrb	r2, [r3, #0]
 80026b6:	3201      	adds	r2, #1
 80026b8:	701a      	strb	r2, [r3, #0]
 80026ba:	e78c      	b.n	80025d6 <_dtoa_r+0x5de>
 80026bc:	461d      	mov	r5, r3
 80026be:	e7ea      	b.n	8002696 <_dtoa_r+0x69e>
 80026c0:	2200      	movs	r2, #0
 80026c2:	4b9b      	ldr	r3, [pc, #620]	; (8002930 <_dtoa_r+0x938>)
 80026c4:	f7fd ffa0 	bl	8000608 <__aeabi_dmul>
 80026c8:	2200      	movs	r2, #0
 80026ca:	2300      	movs	r3, #0
 80026cc:	4606      	mov	r6, r0
 80026ce:	460f      	mov	r7, r1
 80026d0:	f7fe fa02 	bl	8000ad8 <__aeabi_dcmpeq>
 80026d4:	2800      	cmp	r0, #0
 80026d6:	d09a      	beq.n	800260e <_dtoa_r+0x616>
 80026d8:	e7cb      	b.n	8002672 <_dtoa_r+0x67a>
 80026da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80026dc:	2a00      	cmp	r2, #0
 80026de:	f000 808b 	beq.w	80027f8 <_dtoa_r+0x800>
 80026e2:	9a06      	ldr	r2, [sp, #24]
 80026e4:	2a01      	cmp	r2, #1
 80026e6:	dc6e      	bgt.n	80027c6 <_dtoa_r+0x7ce>
 80026e8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80026ea:	2a00      	cmp	r2, #0
 80026ec:	d067      	beq.n	80027be <_dtoa_r+0x7c6>
 80026ee:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80026f2:	9f07      	ldr	r7, [sp, #28]
 80026f4:	9d05      	ldr	r5, [sp, #20]
 80026f6:	9a05      	ldr	r2, [sp, #20]
 80026f8:	2101      	movs	r1, #1
 80026fa:	441a      	add	r2, r3
 80026fc:	4620      	mov	r0, r4
 80026fe:	9205      	str	r2, [sp, #20]
 8002700:	4498      	add	r8, r3
 8002702:	f000 fb26 	bl	8002d52 <__i2b>
 8002706:	4606      	mov	r6, r0
 8002708:	2d00      	cmp	r5, #0
 800270a:	dd0c      	ble.n	8002726 <_dtoa_r+0x72e>
 800270c:	f1b8 0f00 	cmp.w	r8, #0
 8002710:	dd09      	ble.n	8002726 <_dtoa_r+0x72e>
 8002712:	4545      	cmp	r5, r8
 8002714:	9a05      	ldr	r2, [sp, #20]
 8002716:	462b      	mov	r3, r5
 8002718:	bfa8      	it	ge
 800271a:	4643      	movge	r3, r8
 800271c:	1ad2      	subs	r2, r2, r3
 800271e:	9205      	str	r2, [sp, #20]
 8002720:	1aed      	subs	r5, r5, r3
 8002722:	eba8 0803 	sub.w	r8, r8, r3
 8002726:	9b07      	ldr	r3, [sp, #28]
 8002728:	b1eb      	cbz	r3, 8002766 <_dtoa_r+0x76e>
 800272a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800272c:	2b00      	cmp	r3, #0
 800272e:	d067      	beq.n	8002800 <_dtoa_r+0x808>
 8002730:	b18f      	cbz	r7, 8002756 <_dtoa_r+0x75e>
 8002732:	4631      	mov	r1, r6
 8002734:	463a      	mov	r2, r7
 8002736:	4620      	mov	r0, r4
 8002738:	f000 fbaa 	bl	8002e90 <__pow5mult>
 800273c:	9a04      	ldr	r2, [sp, #16]
 800273e:	4601      	mov	r1, r0
 8002740:	4606      	mov	r6, r0
 8002742:	4620      	mov	r0, r4
 8002744:	f000 fb0e 	bl	8002d64 <__multiply>
 8002748:	9904      	ldr	r1, [sp, #16]
 800274a:	9008      	str	r0, [sp, #32]
 800274c:	4620      	mov	r0, r4
 800274e:	f000 fa60 	bl	8002c12 <_Bfree>
 8002752:	9b08      	ldr	r3, [sp, #32]
 8002754:	9304      	str	r3, [sp, #16]
 8002756:	9b07      	ldr	r3, [sp, #28]
 8002758:	1bda      	subs	r2, r3, r7
 800275a:	d004      	beq.n	8002766 <_dtoa_r+0x76e>
 800275c:	9904      	ldr	r1, [sp, #16]
 800275e:	4620      	mov	r0, r4
 8002760:	f000 fb96 	bl	8002e90 <__pow5mult>
 8002764:	9004      	str	r0, [sp, #16]
 8002766:	2101      	movs	r1, #1
 8002768:	4620      	mov	r0, r4
 800276a:	f000 faf2 	bl	8002d52 <__i2b>
 800276e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002770:	4607      	mov	r7, r0
 8002772:	2b00      	cmp	r3, #0
 8002774:	f000 81d0 	beq.w	8002b18 <_dtoa_r+0xb20>
 8002778:	461a      	mov	r2, r3
 800277a:	4601      	mov	r1, r0
 800277c:	4620      	mov	r0, r4
 800277e:	f000 fb87 	bl	8002e90 <__pow5mult>
 8002782:	9b06      	ldr	r3, [sp, #24]
 8002784:	2b01      	cmp	r3, #1
 8002786:	4607      	mov	r7, r0
 8002788:	dc40      	bgt.n	800280c <_dtoa_r+0x814>
 800278a:	9b00      	ldr	r3, [sp, #0]
 800278c:	2b00      	cmp	r3, #0
 800278e:	d139      	bne.n	8002804 <_dtoa_r+0x80c>
 8002790:	9b01      	ldr	r3, [sp, #4]
 8002792:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002796:	2b00      	cmp	r3, #0
 8002798:	d136      	bne.n	8002808 <_dtoa_r+0x810>
 800279a:	9b01      	ldr	r3, [sp, #4]
 800279c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80027a0:	0d1b      	lsrs	r3, r3, #20
 80027a2:	051b      	lsls	r3, r3, #20
 80027a4:	b12b      	cbz	r3, 80027b2 <_dtoa_r+0x7ba>
 80027a6:	9b05      	ldr	r3, [sp, #20]
 80027a8:	3301      	adds	r3, #1
 80027aa:	9305      	str	r3, [sp, #20]
 80027ac:	f108 0801 	add.w	r8, r8, #1
 80027b0:	2301      	movs	r3, #1
 80027b2:	9307      	str	r3, [sp, #28]
 80027b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80027b6:	2b00      	cmp	r3, #0
 80027b8:	d12a      	bne.n	8002810 <_dtoa_r+0x818>
 80027ba:	2001      	movs	r0, #1
 80027bc:	e030      	b.n	8002820 <_dtoa_r+0x828>
 80027be:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80027c0:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80027c4:	e795      	b.n	80026f2 <_dtoa_r+0x6fa>
 80027c6:	9b07      	ldr	r3, [sp, #28]
 80027c8:	f109 37ff 	add.w	r7, r9, #4294967295
 80027cc:	42bb      	cmp	r3, r7
 80027ce:	bfbf      	itttt	lt
 80027d0:	9b07      	ldrlt	r3, [sp, #28]
 80027d2:	9707      	strlt	r7, [sp, #28]
 80027d4:	1afa      	sublt	r2, r7, r3
 80027d6:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 80027d8:	bfbb      	ittet	lt
 80027da:	189b      	addlt	r3, r3, r2
 80027dc:	930e      	strlt	r3, [sp, #56]	; 0x38
 80027de:	1bdf      	subge	r7, r3, r7
 80027e0:	2700      	movlt	r7, #0
 80027e2:	f1b9 0f00 	cmp.w	r9, #0
 80027e6:	bfb5      	itete	lt
 80027e8:	9b05      	ldrlt	r3, [sp, #20]
 80027ea:	9d05      	ldrge	r5, [sp, #20]
 80027ec:	eba3 0509 	sublt.w	r5, r3, r9
 80027f0:	464b      	movge	r3, r9
 80027f2:	bfb8      	it	lt
 80027f4:	2300      	movlt	r3, #0
 80027f6:	e77e      	b.n	80026f6 <_dtoa_r+0x6fe>
 80027f8:	9f07      	ldr	r7, [sp, #28]
 80027fa:	9d05      	ldr	r5, [sp, #20]
 80027fc:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80027fe:	e783      	b.n	8002708 <_dtoa_r+0x710>
 8002800:	9a07      	ldr	r2, [sp, #28]
 8002802:	e7ab      	b.n	800275c <_dtoa_r+0x764>
 8002804:	2300      	movs	r3, #0
 8002806:	e7d4      	b.n	80027b2 <_dtoa_r+0x7ba>
 8002808:	9b00      	ldr	r3, [sp, #0]
 800280a:	e7d2      	b.n	80027b2 <_dtoa_r+0x7ba>
 800280c:	2300      	movs	r3, #0
 800280e:	9307      	str	r3, [sp, #28]
 8002810:	693b      	ldr	r3, [r7, #16]
 8002812:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 8002816:	6918      	ldr	r0, [r3, #16]
 8002818:	f000 fa4d 	bl	8002cb6 <__hi0bits>
 800281c:	f1c0 0020 	rsb	r0, r0, #32
 8002820:	4440      	add	r0, r8
 8002822:	f010 001f 	ands.w	r0, r0, #31
 8002826:	d047      	beq.n	80028b8 <_dtoa_r+0x8c0>
 8002828:	f1c0 0320 	rsb	r3, r0, #32
 800282c:	2b04      	cmp	r3, #4
 800282e:	dd3b      	ble.n	80028a8 <_dtoa_r+0x8b0>
 8002830:	9b05      	ldr	r3, [sp, #20]
 8002832:	f1c0 001c 	rsb	r0, r0, #28
 8002836:	4403      	add	r3, r0
 8002838:	9305      	str	r3, [sp, #20]
 800283a:	4405      	add	r5, r0
 800283c:	4480      	add	r8, r0
 800283e:	9b05      	ldr	r3, [sp, #20]
 8002840:	2b00      	cmp	r3, #0
 8002842:	dd05      	ble.n	8002850 <_dtoa_r+0x858>
 8002844:	461a      	mov	r2, r3
 8002846:	9904      	ldr	r1, [sp, #16]
 8002848:	4620      	mov	r0, r4
 800284a:	f000 fb6f 	bl	8002f2c <__lshift>
 800284e:	9004      	str	r0, [sp, #16]
 8002850:	f1b8 0f00 	cmp.w	r8, #0
 8002854:	dd05      	ble.n	8002862 <_dtoa_r+0x86a>
 8002856:	4639      	mov	r1, r7
 8002858:	4642      	mov	r2, r8
 800285a:	4620      	mov	r0, r4
 800285c:	f000 fb66 	bl	8002f2c <__lshift>
 8002860:	4607      	mov	r7, r0
 8002862:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002864:	b353      	cbz	r3, 80028bc <_dtoa_r+0x8c4>
 8002866:	4639      	mov	r1, r7
 8002868:	9804      	ldr	r0, [sp, #16]
 800286a:	f000 fbb3 	bl	8002fd4 <__mcmp>
 800286e:	2800      	cmp	r0, #0
 8002870:	da24      	bge.n	80028bc <_dtoa_r+0x8c4>
 8002872:	2300      	movs	r3, #0
 8002874:	220a      	movs	r2, #10
 8002876:	9904      	ldr	r1, [sp, #16]
 8002878:	4620      	mov	r0, r4
 800287a:	f000 f9e1 	bl	8002c40 <__multadd>
 800287e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002880:	9004      	str	r0, [sp, #16]
 8002882:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002886:	2b00      	cmp	r3, #0
 8002888:	f000 814d 	beq.w	8002b26 <_dtoa_r+0xb2e>
 800288c:	2300      	movs	r3, #0
 800288e:	4631      	mov	r1, r6
 8002890:	220a      	movs	r2, #10
 8002892:	4620      	mov	r0, r4
 8002894:	f000 f9d4 	bl	8002c40 <__multadd>
 8002898:	9b02      	ldr	r3, [sp, #8]
 800289a:	2b00      	cmp	r3, #0
 800289c:	4606      	mov	r6, r0
 800289e:	dc4f      	bgt.n	8002940 <_dtoa_r+0x948>
 80028a0:	9b06      	ldr	r3, [sp, #24]
 80028a2:	2b02      	cmp	r3, #2
 80028a4:	dd4c      	ble.n	8002940 <_dtoa_r+0x948>
 80028a6:	e011      	b.n	80028cc <_dtoa_r+0x8d4>
 80028a8:	d0c9      	beq.n	800283e <_dtoa_r+0x846>
 80028aa:	9a05      	ldr	r2, [sp, #20]
 80028ac:	331c      	adds	r3, #28
 80028ae:	441a      	add	r2, r3
 80028b0:	9205      	str	r2, [sp, #20]
 80028b2:	441d      	add	r5, r3
 80028b4:	4498      	add	r8, r3
 80028b6:	e7c2      	b.n	800283e <_dtoa_r+0x846>
 80028b8:	4603      	mov	r3, r0
 80028ba:	e7f6      	b.n	80028aa <_dtoa_r+0x8b2>
 80028bc:	f1b9 0f00 	cmp.w	r9, #0
 80028c0:	dc38      	bgt.n	8002934 <_dtoa_r+0x93c>
 80028c2:	9b06      	ldr	r3, [sp, #24]
 80028c4:	2b02      	cmp	r3, #2
 80028c6:	dd35      	ble.n	8002934 <_dtoa_r+0x93c>
 80028c8:	f8cd 9008 	str.w	r9, [sp, #8]
 80028cc:	9b02      	ldr	r3, [sp, #8]
 80028ce:	b963      	cbnz	r3, 80028ea <_dtoa_r+0x8f2>
 80028d0:	4639      	mov	r1, r7
 80028d2:	2205      	movs	r2, #5
 80028d4:	4620      	mov	r0, r4
 80028d6:	f000 f9b3 	bl	8002c40 <__multadd>
 80028da:	4601      	mov	r1, r0
 80028dc:	4607      	mov	r7, r0
 80028de:	9804      	ldr	r0, [sp, #16]
 80028e0:	f000 fb78 	bl	8002fd4 <__mcmp>
 80028e4:	2800      	cmp	r0, #0
 80028e6:	f73f adcc 	bgt.w	8002482 <_dtoa_r+0x48a>
 80028ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80028ec:	465d      	mov	r5, fp
 80028ee:	ea6f 0a03 	mvn.w	sl, r3
 80028f2:	f04f 0900 	mov.w	r9, #0
 80028f6:	4639      	mov	r1, r7
 80028f8:	4620      	mov	r0, r4
 80028fa:	f000 f98a 	bl	8002c12 <_Bfree>
 80028fe:	2e00      	cmp	r6, #0
 8002900:	f43f aeb7 	beq.w	8002672 <_dtoa_r+0x67a>
 8002904:	f1b9 0f00 	cmp.w	r9, #0
 8002908:	d005      	beq.n	8002916 <_dtoa_r+0x91e>
 800290a:	45b1      	cmp	r9, r6
 800290c:	d003      	beq.n	8002916 <_dtoa_r+0x91e>
 800290e:	4649      	mov	r1, r9
 8002910:	4620      	mov	r0, r4
 8002912:	f000 f97e 	bl	8002c12 <_Bfree>
 8002916:	4631      	mov	r1, r6
 8002918:	4620      	mov	r0, r4
 800291a:	f000 f97a 	bl	8002c12 <_Bfree>
 800291e:	e6a8      	b.n	8002672 <_dtoa_r+0x67a>
 8002920:	2700      	movs	r7, #0
 8002922:	463e      	mov	r6, r7
 8002924:	e7e1      	b.n	80028ea <_dtoa_r+0x8f2>
 8002926:	f8dd a020 	ldr.w	sl, [sp, #32]
 800292a:	463e      	mov	r6, r7
 800292c:	e5a9      	b.n	8002482 <_dtoa_r+0x48a>
 800292e:	bf00      	nop
 8002930:	40240000 	.word	0x40240000
 8002934:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002936:	f8cd 9008 	str.w	r9, [sp, #8]
 800293a:	2b00      	cmp	r3, #0
 800293c:	f000 80fa 	beq.w	8002b34 <_dtoa_r+0xb3c>
 8002940:	2d00      	cmp	r5, #0
 8002942:	dd05      	ble.n	8002950 <_dtoa_r+0x958>
 8002944:	4631      	mov	r1, r6
 8002946:	462a      	mov	r2, r5
 8002948:	4620      	mov	r0, r4
 800294a:	f000 faef 	bl	8002f2c <__lshift>
 800294e:	4606      	mov	r6, r0
 8002950:	9b07      	ldr	r3, [sp, #28]
 8002952:	2b00      	cmp	r3, #0
 8002954:	d04c      	beq.n	80029f0 <_dtoa_r+0x9f8>
 8002956:	6871      	ldr	r1, [r6, #4]
 8002958:	4620      	mov	r0, r4
 800295a:	f000 f926 	bl	8002baa <_Balloc>
 800295e:	6932      	ldr	r2, [r6, #16]
 8002960:	3202      	adds	r2, #2
 8002962:	4605      	mov	r5, r0
 8002964:	0092      	lsls	r2, r2, #2
 8002966:	f106 010c 	add.w	r1, r6, #12
 800296a:	300c      	adds	r0, #12
 800296c:	f000 f912 	bl	8002b94 <memcpy>
 8002970:	2201      	movs	r2, #1
 8002972:	4629      	mov	r1, r5
 8002974:	4620      	mov	r0, r4
 8002976:	f000 fad9 	bl	8002f2c <__lshift>
 800297a:	9b00      	ldr	r3, [sp, #0]
 800297c:	f8cd b014 	str.w	fp, [sp, #20]
 8002980:	f003 0301 	and.w	r3, r3, #1
 8002984:	46b1      	mov	r9, r6
 8002986:	9307      	str	r3, [sp, #28]
 8002988:	4606      	mov	r6, r0
 800298a:	4639      	mov	r1, r7
 800298c:	9804      	ldr	r0, [sp, #16]
 800298e:	f7ff faa7 	bl	8001ee0 <quorem>
 8002992:	4649      	mov	r1, r9
 8002994:	4605      	mov	r5, r0
 8002996:	f100 0830 	add.w	r8, r0, #48	; 0x30
 800299a:	9804      	ldr	r0, [sp, #16]
 800299c:	f000 fb1a 	bl	8002fd4 <__mcmp>
 80029a0:	4632      	mov	r2, r6
 80029a2:	9000      	str	r0, [sp, #0]
 80029a4:	4639      	mov	r1, r7
 80029a6:	4620      	mov	r0, r4
 80029a8:	f000 fb2e 	bl	8003008 <__mdiff>
 80029ac:	68c3      	ldr	r3, [r0, #12]
 80029ae:	4602      	mov	r2, r0
 80029b0:	bb03      	cbnz	r3, 80029f4 <_dtoa_r+0x9fc>
 80029b2:	4601      	mov	r1, r0
 80029b4:	9008      	str	r0, [sp, #32]
 80029b6:	9804      	ldr	r0, [sp, #16]
 80029b8:	f000 fb0c 	bl	8002fd4 <__mcmp>
 80029bc:	9a08      	ldr	r2, [sp, #32]
 80029be:	4603      	mov	r3, r0
 80029c0:	4611      	mov	r1, r2
 80029c2:	4620      	mov	r0, r4
 80029c4:	9308      	str	r3, [sp, #32]
 80029c6:	f000 f924 	bl	8002c12 <_Bfree>
 80029ca:	9b08      	ldr	r3, [sp, #32]
 80029cc:	b9a3      	cbnz	r3, 80029f8 <_dtoa_r+0xa00>
 80029ce:	9a06      	ldr	r2, [sp, #24]
 80029d0:	b992      	cbnz	r2, 80029f8 <_dtoa_r+0xa00>
 80029d2:	9a07      	ldr	r2, [sp, #28]
 80029d4:	b982      	cbnz	r2, 80029f8 <_dtoa_r+0xa00>
 80029d6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80029da:	d029      	beq.n	8002a30 <_dtoa_r+0xa38>
 80029dc:	9b00      	ldr	r3, [sp, #0]
 80029de:	2b00      	cmp	r3, #0
 80029e0:	dd01      	ble.n	80029e6 <_dtoa_r+0x9ee>
 80029e2:	f105 0831 	add.w	r8, r5, #49	; 0x31
 80029e6:	9b05      	ldr	r3, [sp, #20]
 80029e8:	1c5d      	adds	r5, r3, #1
 80029ea:	f883 8000 	strb.w	r8, [r3]
 80029ee:	e782      	b.n	80028f6 <_dtoa_r+0x8fe>
 80029f0:	4630      	mov	r0, r6
 80029f2:	e7c2      	b.n	800297a <_dtoa_r+0x982>
 80029f4:	2301      	movs	r3, #1
 80029f6:	e7e3      	b.n	80029c0 <_dtoa_r+0x9c8>
 80029f8:	9a00      	ldr	r2, [sp, #0]
 80029fa:	2a00      	cmp	r2, #0
 80029fc:	db04      	blt.n	8002a08 <_dtoa_r+0xa10>
 80029fe:	d125      	bne.n	8002a4c <_dtoa_r+0xa54>
 8002a00:	9a06      	ldr	r2, [sp, #24]
 8002a02:	bb1a      	cbnz	r2, 8002a4c <_dtoa_r+0xa54>
 8002a04:	9a07      	ldr	r2, [sp, #28]
 8002a06:	bb0a      	cbnz	r2, 8002a4c <_dtoa_r+0xa54>
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	ddec      	ble.n	80029e6 <_dtoa_r+0x9ee>
 8002a0c:	2201      	movs	r2, #1
 8002a0e:	9904      	ldr	r1, [sp, #16]
 8002a10:	4620      	mov	r0, r4
 8002a12:	f000 fa8b 	bl	8002f2c <__lshift>
 8002a16:	4639      	mov	r1, r7
 8002a18:	9004      	str	r0, [sp, #16]
 8002a1a:	f000 fadb 	bl	8002fd4 <__mcmp>
 8002a1e:	2800      	cmp	r0, #0
 8002a20:	dc03      	bgt.n	8002a2a <_dtoa_r+0xa32>
 8002a22:	d1e0      	bne.n	80029e6 <_dtoa_r+0x9ee>
 8002a24:	f018 0f01 	tst.w	r8, #1
 8002a28:	d0dd      	beq.n	80029e6 <_dtoa_r+0x9ee>
 8002a2a:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002a2e:	d1d8      	bne.n	80029e2 <_dtoa_r+0x9ea>
 8002a30:	9b05      	ldr	r3, [sp, #20]
 8002a32:	9a05      	ldr	r2, [sp, #20]
 8002a34:	1c5d      	adds	r5, r3, #1
 8002a36:	2339      	movs	r3, #57	; 0x39
 8002a38:	7013      	strb	r3, [r2, #0]
 8002a3a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002a3e:	2b39      	cmp	r3, #57	; 0x39
 8002a40:	f105 32ff 	add.w	r2, r5, #4294967295
 8002a44:	d04f      	beq.n	8002ae6 <_dtoa_r+0xaee>
 8002a46:	3301      	adds	r3, #1
 8002a48:	7013      	strb	r3, [r2, #0]
 8002a4a:	e754      	b.n	80028f6 <_dtoa_r+0x8fe>
 8002a4c:	9a05      	ldr	r2, [sp, #20]
 8002a4e:	2b00      	cmp	r3, #0
 8002a50:	f102 0501 	add.w	r5, r2, #1
 8002a54:	dd06      	ble.n	8002a64 <_dtoa_r+0xa6c>
 8002a56:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8002a5a:	d0e9      	beq.n	8002a30 <_dtoa_r+0xa38>
 8002a5c:	f108 0801 	add.w	r8, r8, #1
 8002a60:	9b05      	ldr	r3, [sp, #20]
 8002a62:	e7c2      	b.n	80029ea <_dtoa_r+0x9f2>
 8002a64:	9a02      	ldr	r2, [sp, #8]
 8002a66:	f805 8c01 	strb.w	r8, [r5, #-1]
 8002a6a:	eba5 030b 	sub.w	r3, r5, fp
 8002a6e:	4293      	cmp	r3, r2
 8002a70:	d021      	beq.n	8002ab6 <_dtoa_r+0xabe>
 8002a72:	2300      	movs	r3, #0
 8002a74:	220a      	movs	r2, #10
 8002a76:	9904      	ldr	r1, [sp, #16]
 8002a78:	4620      	mov	r0, r4
 8002a7a:	f000 f8e1 	bl	8002c40 <__multadd>
 8002a7e:	45b1      	cmp	r9, r6
 8002a80:	9004      	str	r0, [sp, #16]
 8002a82:	f04f 0300 	mov.w	r3, #0
 8002a86:	f04f 020a 	mov.w	r2, #10
 8002a8a:	4649      	mov	r1, r9
 8002a8c:	4620      	mov	r0, r4
 8002a8e:	d105      	bne.n	8002a9c <_dtoa_r+0xaa4>
 8002a90:	f000 f8d6 	bl	8002c40 <__multadd>
 8002a94:	4681      	mov	r9, r0
 8002a96:	4606      	mov	r6, r0
 8002a98:	9505      	str	r5, [sp, #20]
 8002a9a:	e776      	b.n	800298a <_dtoa_r+0x992>
 8002a9c:	f000 f8d0 	bl	8002c40 <__multadd>
 8002aa0:	4631      	mov	r1, r6
 8002aa2:	4681      	mov	r9, r0
 8002aa4:	2300      	movs	r3, #0
 8002aa6:	220a      	movs	r2, #10
 8002aa8:	4620      	mov	r0, r4
 8002aaa:	f000 f8c9 	bl	8002c40 <__multadd>
 8002aae:	4606      	mov	r6, r0
 8002ab0:	e7f2      	b.n	8002a98 <_dtoa_r+0xaa0>
 8002ab2:	f04f 0900 	mov.w	r9, #0
 8002ab6:	2201      	movs	r2, #1
 8002ab8:	9904      	ldr	r1, [sp, #16]
 8002aba:	4620      	mov	r0, r4
 8002abc:	f000 fa36 	bl	8002f2c <__lshift>
 8002ac0:	4639      	mov	r1, r7
 8002ac2:	9004      	str	r0, [sp, #16]
 8002ac4:	f000 fa86 	bl	8002fd4 <__mcmp>
 8002ac8:	2800      	cmp	r0, #0
 8002aca:	dcb6      	bgt.n	8002a3a <_dtoa_r+0xa42>
 8002acc:	d102      	bne.n	8002ad4 <_dtoa_r+0xadc>
 8002ace:	f018 0f01 	tst.w	r8, #1
 8002ad2:	d1b2      	bne.n	8002a3a <_dtoa_r+0xa42>
 8002ad4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002ad8:	2b30      	cmp	r3, #48	; 0x30
 8002ada:	f105 32ff 	add.w	r2, r5, #4294967295
 8002ade:	f47f af0a 	bne.w	80028f6 <_dtoa_r+0x8fe>
 8002ae2:	4615      	mov	r5, r2
 8002ae4:	e7f6      	b.n	8002ad4 <_dtoa_r+0xadc>
 8002ae6:	4593      	cmp	fp, r2
 8002ae8:	d105      	bne.n	8002af6 <_dtoa_r+0xafe>
 8002aea:	2331      	movs	r3, #49	; 0x31
 8002aec:	f10a 0a01 	add.w	sl, sl, #1
 8002af0:	f88b 3000 	strb.w	r3, [fp]
 8002af4:	e6ff      	b.n	80028f6 <_dtoa_r+0x8fe>
 8002af6:	4615      	mov	r5, r2
 8002af8:	e79f      	b.n	8002a3a <_dtoa_r+0xa42>
 8002afa:	f8df b064 	ldr.w	fp, [pc, #100]	; 8002b60 <_dtoa_r+0xb68>
 8002afe:	e007      	b.n	8002b10 <_dtoa_r+0xb18>
 8002b00:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002b02:	f8df b060 	ldr.w	fp, [pc, #96]	; 8002b64 <_dtoa_r+0xb6c>
 8002b06:	b11b      	cbz	r3, 8002b10 <_dtoa_r+0xb18>
 8002b08:	f10b 0308 	add.w	r3, fp, #8
 8002b0c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002b0e:	6013      	str	r3, [r2, #0]
 8002b10:	4658      	mov	r0, fp
 8002b12:	b017      	add	sp, #92	; 0x5c
 8002b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002b18:	9b06      	ldr	r3, [sp, #24]
 8002b1a:	2b01      	cmp	r3, #1
 8002b1c:	f77f ae35 	ble.w	800278a <_dtoa_r+0x792>
 8002b20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002b22:	9307      	str	r3, [sp, #28]
 8002b24:	e649      	b.n	80027ba <_dtoa_r+0x7c2>
 8002b26:	9b02      	ldr	r3, [sp, #8]
 8002b28:	2b00      	cmp	r3, #0
 8002b2a:	dc03      	bgt.n	8002b34 <_dtoa_r+0xb3c>
 8002b2c:	9b06      	ldr	r3, [sp, #24]
 8002b2e:	2b02      	cmp	r3, #2
 8002b30:	f73f aecc 	bgt.w	80028cc <_dtoa_r+0x8d4>
 8002b34:	465d      	mov	r5, fp
 8002b36:	4639      	mov	r1, r7
 8002b38:	9804      	ldr	r0, [sp, #16]
 8002b3a:	f7ff f9d1 	bl	8001ee0 <quorem>
 8002b3e:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8002b42:	f805 8b01 	strb.w	r8, [r5], #1
 8002b46:	9a02      	ldr	r2, [sp, #8]
 8002b48:	eba5 030b 	sub.w	r3, r5, fp
 8002b4c:	429a      	cmp	r2, r3
 8002b4e:	ddb0      	ble.n	8002ab2 <_dtoa_r+0xaba>
 8002b50:	2300      	movs	r3, #0
 8002b52:	220a      	movs	r2, #10
 8002b54:	9904      	ldr	r1, [sp, #16]
 8002b56:	4620      	mov	r0, r4
 8002b58:	f000 f872 	bl	8002c40 <__multadd>
 8002b5c:	9004      	str	r0, [sp, #16]
 8002b5e:	e7ea      	b.n	8002b36 <_dtoa_r+0xb3e>
 8002b60:	080036c7 	.word	0x080036c7
 8002b64:	080036eb 	.word	0x080036eb

08002b68 <_localeconv_r>:
 8002b68:	4b04      	ldr	r3, [pc, #16]	; (8002b7c <_localeconv_r+0x14>)
 8002b6a:	681b      	ldr	r3, [r3, #0]
 8002b6c:	6a18      	ldr	r0, [r3, #32]
 8002b6e:	4b04      	ldr	r3, [pc, #16]	; (8002b80 <_localeconv_r+0x18>)
 8002b70:	2800      	cmp	r0, #0
 8002b72:	bf08      	it	eq
 8002b74:	4618      	moveq	r0, r3
 8002b76:	30f0      	adds	r0, #240	; 0xf0
 8002b78:	4770      	bx	lr
 8002b7a:	bf00      	nop
 8002b7c:	20000004 	.word	0x20000004
 8002b80:	20000068 	.word	0x20000068

08002b84 <malloc>:
 8002b84:	4b02      	ldr	r3, [pc, #8]	; (8002b90 <malloc+0xc>)
 8002b86:	4601      	mov	r1, r0
 8002b88:	6818      	ldr	r0, [r3, #0]
 8002b8a:	f000 bb45 	b.w	8003218 <_malloc_r>
 8002b8e:	bf00      	nop
 8002b90:	20000004 	.word	0x20000004

08002b94 <memcpy>:
 8002b94:	b510      	push	{r4, lr}
 8002b96:	1e43      	subs	r3, r0, #1
 8002b98:	440a      	add	r2, r1
 8002b9a:	4291      	cmp	r1, r2
 8002b9c:	d100      	bne.n	8002ba0 <memcpy+0xc>
 8002b9e:	bd10      	pop	{r4, pc}
 8002ba0:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002ba4:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002ba8:	e7f7      	b.n	8002b9a <memcpy+0x6>

08002baa <_Balloc>:
 8002baa:	b570      	push	{r4, r5, r6, lr}
 8002bac:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8002bae:	4604      	mov	r4, r0
 8002bb0:	460e      	mov	r6, r1
 8002bb2:	b93d      	cbnz	r5, 8002bc4 <_Balloc+0x1a>
 8002bb4:	2010      	movs	r0, #16
 8002bb6:	f7ff ffe5 	bl	8002b84 <malloc>
 8002bba:	6260      	str	r0, [r4, #36]	; 0x24
 8002bbc:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002bc0:	6005      	str	r5, [r0, #0]
 8002bc2:	60c5      	str	r5, [r0, #12]
 8002bc4:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8002bc6:	68eb      	ldr	r3, [r5, #12]
 8002bc8:	b183      	cbz	r3, 8002bec <_Balloc+0x42>
 8002bca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002bcc:	68db      	ldr	r3, [r3, #12]
 8002bce:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8002bd2:	b9b8      	cbnz	r0, 8002c04 <_Balloc+0x5a>
 8002bd4:	2101      	movs	r1, #1
 8002bd6:	fa01 f506 	lsl.w	r5, r1, r6
 8002bda:	1d6a      	adds	r2, r5, #5
 8002bdc:	0092      	lsls	r2, r2, #2
 8002bde:	4620      	mov	r0, r4
 8002be0:	f000 fabe 	bl	8003160 <_calloc_r>
 8002be4:	b160      	cbz	r0, 8002c00 <_Balloc+0x56>
 8002be6:	e9c0 6501 	strd	r6, r5, [r0, #4]
 8002bea:	e00e      	b.n	8002c0a <_Balloc+0x60>
 8002bec:	2221      	movs	r2, #33	; 0x21
 8002bee:	2104      	movs	r1, #4
 8002bf0:	4620      	mov	r0, r4
 8002bf2:	f000 fab5 	bl	8003160 <_calloc_r>
 8002bf6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002bf8:	60e8      	str	r0, [r5, #12]
 8002bfa:	68db      	ldr	r3, [r3, #12]
 8002bfc:	2b00      	cmp	r3, #0
 8002bfe:	d1e4      	bne.n	8002bca <_Balloc+0x20>
 8002c00:	2000      	movs	r0, #0
 8002c02:	bd70      	pop	{r4, r5, r6, pc}
 8002c04:	6802      	ldr	r2, [r0, #0]
 8002c06:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8002c0a:	2300      	movs	r3, #0
 8002c0c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002c10:	e7f7      	b.n	8002c02 <_Balloc+0x58>

08002c12 <_Bfree>:
 8002c12:	b570      	push	{r4, r5, r6, lr}
 8002c14:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8002c16:	4606      	mov	r6, r0
 8002c18:	460d      	mov	r5, r1
 8002c1a:	b93c      	cbnz	r4, 8002c2c <_Bfree+0x1a>
 8002c1c:	2010      	movs	r0, #16
 8002c1e:	f7ff ffb1 	bl	8002b84 <malloc>
 8002c22:	6270      	str	r0, [r6, #36]	; 0x24
 8002c24:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8002c28:	6004      	str	r4, [r0, #0]
 8002c2a:	60c4      	str	r4, [r0, #12]
 8002c2c:	b13d      	cbz	r5, 8002c3e <_Bfree+0x2c>
 8002c2e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8002c30:	686a      	ldr	r2, [r5, #4]
 8002c32:	68db      	ldr	r3, [r3, #12]
 8002c34:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8002c38:	6029      	str	r1, [r5, #0]
 8002c3a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8002c3e:	bd70      	pop	{r4, r5, r6, pc}

08002c40 <__multadd>:
 8002c40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c44:	690d      	ldr	r5, [r1, #16]
 8002c46:	461f      	mov	r7, r3
 8002c48:	4606      	mov	r6, r0
 8002c4a:	460c      	mov	r4, r1
 8002c4c:	f101 0c14 	add.w	ip, r1, #20
 8002c50:	2300      	movs	r3, #0
 8002c52:	f8dc 0000 	ldr.w	r0, [ip]
 8002c56:	b281      	uxth	r1, r0
 8002c58:	fb02 7101 	mla	r1, r2, r1, r7
 8002c5c:	0c0f      	lsrs	r7, r1, #16
 8002c5e:	0c00      	lsrs	r0, r0, #16
 8002c60:	fb02 7000 	mla	r0, r2, r0, r7
 8002c64:	b289      	uxth	r1, r1
 8002c66:	3301      	adds	r3, #1
 8002c68:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8002c6c:	429d      	cmp	r5, r3
 8002c6e:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8002c72:	f84c 1b04 	str.w	r1, [ip], #4
 8002c76:	dcec      	bgt.n	8002c52 <__multadd+0x12>
 8002c78:	b1d7      	cbz	r7, 8002cb0 <__multadd+0x70>
 8002c7a:	68a3      	ldr	r3, [r4, #8]
 8002c7c:	42ab      	cmp	r3, r5
 8002c7e:	dc12      	bgt.n	8002ca6 <__multadd+0x66>
 8002c80:	6861      	ldr	r1, [r4, #4]
 8002c82:	4630      	mov	r0, r6
 8002c84:	3101      	adds	r1, #1
 8002c86:	f7ff ff90 	bl	8002baa <_Balloc>
 8002c8a:	6922      	ldr	r2, [r4, #16]
 8002c8c:	3202      	adds	r2, #2
 8002c8e:	f104 010c 	add.w	r1, r4, #12
 8002c92:	4680      	mov	r8, r0
 8002c94:	0092      	lsls	r2, r2, #2
 8002c96:	300c      	adds	r0, #12
 8002c98:	f7ff ff7c 	bl	8002b94 <memcpy>
 8002c9c:	4621      	mov	r1, r4
 8002c9e:	4630      	mov	r0, r6
 8002ca0:	f7ff ffb7 	bl	8002c12 <_Bfree>
 8002ca4:	4644      	mov	r4, r8
 8002ca6:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8002caa:	3501      	adds	r5, #1
 8002cac:	615f      	str	r7, [r3, #20]
 8002cae:	6125      	str	r5, [r4, #16]
 8002cb0:	4620      	mov	r0, r4
 8002cb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002cb6 <__hi0bits>:
 8002cb6:	0c02      	lsrs	r2, r0, #16
 8002cb8:	0412      	lsls	r2, r2, #16
 8002cba:	4603      	mov	r3, r0
 8002cbc:	b9b2      	cbnz	r2, 8002cec <__hi0bits+0x36>
 8002cbe:	0403      	lsls	r3, r0, #16
 8002cc0:	2010      	movs	r0, #16
 8002cc2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8002cc6:	bf04      	itt	eq
 8002cc8:	021b      	lsleq	r3, r3, #8
 8002cca:	3008      	addeq	r0, #8
 8002ccc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8002cd0:	bf04      	itt	eq
 8002cd2:	011b      	lsleq	r3, r3, #4
 8002cd4:	3004      	addeq	r0, #4
 8002cd6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8002cda:	bf04      	itt	eq
 8002cdc:	009b      	lsleq	r3, r3, #2
 8002cde:	3002      	addeq	r0, #2
 8002ce0:	2b00      	cmp	r3, #0
 8002ce2:	db06      	blt.n	8002cf2 <__hi0bits+0x3c>
 8002ce4:	005b      	lsls	r3, r3, #1
 8002ce6:	d503      	bpl.n	8002cf0 <__hi0bits+0x3a>
 8002ce8:	3001      	adds	r0, #1
 8002cea:	4770      	bx	lr
 8002cec:	2000      	movs	r0, #0
 8002cee:	e7e8      	b.n	8002cc2 <__hi0bits+0xc>
 8002cf0:	2020      	movs	r0, #32
 8002cf2:	4770      	bx	lr

08002cf4 <__lo0bits>:
 8002cf4:	6803      	ldr	r3, [r0, #0]
 8002cf6:	f013 0207 	ands.w	r2, r3, #7
 8002cfa:	4601      	mov	r1, r0
 8002cfc:	d00b      	beq.n	8002d16 <__lo0bits+0x22>
 8002cfe:	07da      	lsls	r2, r3, #31
 8002d00:	d423      	bmi.n	8002d4a <__lo0bits+0x56>
 8002d02:	0798      	lsls	r0, r3, #30
 8002d04:	bf49      	itett	mi
 8002d06:	085b      	lsrmi	r3, r3, #1
 8002d08:	089b      	lsrpl	r3, r3, #2
 8002d0a:	2001      	movmi	r0, #1
 8002d0c:	600b      	strmi	r3, [r1, #0]
 8002d0e:	bf5c      	itt	pl
 8002d10:	600b      	strpl	r3, [r1, #0]
 8002d12:	2002      	movpl	r0, #2
 8002d14:	4770      	bx	lr
 8002d16:	b298      	uxth	r0, r3
 8002d18:	b9a8      	cbnz	r0, 8002d46 <__lo0bits+0x52>
 8002d1a:	0c1b      	lsrs	r3, r3, #16
 8002d1c:	2010      	movs	r0, #16
 8002d1e:	f013 0fff 	tst.w	r3, #255	; 0xff
 8002d22:	bf04      	itt	eq
 8002d24:	0a1b      	lsreq	r3, r3, #8
 8002d26:	3008      	addeq	r0, #8
 8002d28:	071a      	lsls	r2, r3, #28
 8002d2a:	bf04      	itt	eq
 8002d2c:	091b      	lsreq	r3, r3, #4
 8002d2e:	3004      	addeq	r0, #4
 8002d30:	079a      	lsls	r2, r3, #30
 8002d32:	bf04      	itt	eq
 8002d34:	089b      	lsreq	r3, r3, #2
 8002d36:	3002      	addeq	r0, #2
 8002d38:	07da      	lsls	r2, r3, #31
 8002d3a:	d402      	bmi.n	8002d42 <__lo0bits+0x4e>
 8002d3c:	085b      	lsrs	r3, r3, #1
 8002d3e:	d006      	beq.n	8002d4e <__lo0bits+0x5a>
 8002d40:	3001      	adds	r0, #1
 8002d42:	600b      	str	r3, [r1, #0]
 8002d44:	4770      	bx	lr
 8002d46:	4610      	mov	r0, r2
 8002d48:	e7e9      	b.n	8002d1e <__lo0bits+0x2a>
 8002d4a:	2000      	movs	r0, #0
 8002d4c:	4770      	bx	lr
 8002d4e:	2020      	movs	r0, #32
 8002d50:	4770      	bx	lr

08002d52 <__i2b>:
 8002d52:	b510      	push	{r4, lr}
 8002d54:	460c      	mov	r4, r1
 8002d56:	2101      	movs	r1, #1
 8002d58:	f7ff ff27 	bl	8002baa <_Balloc>
 8002d5c:	2201      	movs	r2, #1
 8002d5e:	6144      	str	r4, [r0, #20]
 8002d60:	6102      	str	r2, [r0, #16]
 8002d62:	bd10      	pop	{r4, pc}

08002d64 <__multiply>:
 8002d64:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d68:	4614      	mov	r4, r2
 8002d6a:	690a      	ldr	r2, [r1, #16]
 8002d6c:	6923      	ldr	r3, [r4, #16]
 8002d6e:	429a      	cmp	r2, r3
 8002d70:	bfb8      	it	lt
 8002d72:	460b      	movlt	r3, r1
 8002d74:	4688      	mov	r8, r1
 8002d76:	bfbc      	itt	lt
 8002d78:	46a0      	movlt	r8, r4
 8002d7a:	461c      	movlt	r4, r3
 8002d7c:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8002d80:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8002d84:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8002d88:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8002d8c:	eb07 0609 	add.w	r6, r7, r9
 8002d90:	42b3      	cmp	r3, r6
 8002d92:	bfb8      	it	lt
 8002d94:	3101      	addlt	r1, #1
 8002d96:	f7ff ff08 	bl	8002baa <_Balloc>
 8002d9a:	f100 0514 	add.w	r5, r0, #20
 8002d9e:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8002da2:	462b      	mov	r3, r5
 8002da4:	2200      	movs	r2, #0
 8002da6:	4573      	cmp	r3, lr
 8002da8:	d316      	bcc.n	8002dd8 <__multiply+0x74>
 8002daa:	f104 0214 	add.w	r2, r4, #20
 8002dae:	f108 0114 	add.w	r1, r8, #20
 8002db2:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8002db6:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8002dba:	9300      	str	r3, [sp, #0]
 8002dbc:	9b00      	ldr	r3, [sp, #0]
 8002dbe:	9201      	str	r2, [sp, #4]
 8002dc0:	4293      	cmp	r3, r2
 8002dc2:	d80c      	bhi.n	8002dde <__multiply+0x7a>
 8002dc4:	2e00      	cmp	r6, #0
 8002dc6:	dd03      	ble.n	8002dd0 <__multiply+0x6c>
 8002dc8:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8002dcc:	2b00      	cmp	r3, #0
 8002dce:	d05d      	beq.n	8002e8c <__multiply+0x128>
 8002dd0:	6106      	str	r6, [r0, #16]
 8002dd2:	b003      	add	sp, #12
 8002dd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002dd8:	f843 2b04 	str.w	r2, [r3], #4
 8002ddc:	e7e3      	b.n	8002da6 <__multiply+0x42>
 8002dde:	f8b2 b000 	ldrh.w	fp, [r2]
 8002de2:	f1bb 0f00 	cmp.w	fp, #0
 8002de6:	d023      	beq.n	8002e30 <__multiply+0xcc>
 8002de8:	4689      	mov	r9, r1
 8002dea:	46ac      	mov	ip, r5
 8002dec:	f04f 0800 	mov.w	r8, #0
 8002df0:	f859 4b04 	ldr.w	r4, [r9], #4
 8002df4:	f8dc a000 	ldr.w	sl, [ip]
 8002df8:	b2a3      	uxth	r3, r4
 8002dfa:	fa1f fa8a 	uxth.w	sl, sl
 8002dfe:	fb0b a303 	mla	r3, fp, r3, sl
 8002e02:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8002e06:	f8dc 4000 	ldr.w	r4, [ip]
 8002e0a:	4443      	add	r3, r8
 8002e0c:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8002e10:	fb0b 840a 	mla	r4, fp, sl, r8
 8002e14:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8002e18:	46e2      	mov	sl, ip
 8002e1a:	b29b      	uxth	r3, r3
 8002e1c:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8002e20:	454f      	cmp	r7, r9
 8002e22:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8002e26:	f84a 3b04 	str.w	r3, [sl], #4
 8002e2a:	d82b      	bhi.n	8002e84 <__multiply+0x120>
 8002e2c:	f8cc 8004 	str.w	r8, [ip, #4]
 8002e30:	9b01      	ldr	r3, [sp, #4]
 8002e32:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8002e36:	3204      	adds	r2, #4
 8002e38:	f1ba 0f00 	cmp.w	sl, #0
 8002e3c:	d020      	beq.n	8002e80 <__multiply+0x11c>
 8002e3e:	682b      	ldr	r3, [r5, #0]
 8002e40:	4689      	mov	r9, r1
 8002e42:	46a8      	mov	r8, r5
 8002e44:	f04f 0b00 	mov.w	fp, #0
 8002e48:	f8b9 c000 	ldrh.w	ip, [r9]
 8002e4c:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8002e50:	fb0a 440c 	mla	r4, sl, ip, r4
 8002e54:	445c      	add	r4, fp
 8002e56:	46c4      	mov	ip, r8
 8002e58:	b29b      	uxth	r3, r3
 8002e5a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8002e5e:	f84c 3b04 	str.w	r3, [ip], #4
 8002e62:	f859 3b04 	ldr.w	r3, [r9], #4
 8002e66:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 8002e6a:	0c1b      	lsrs	r3, r3, #16
 8002e6c:	fb0a b303 	mla	r3, sl, r3, fp
 8002e70:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8002e74:	454f      	cmp	r7, r9
 8002e76:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8002e7a:	d805      	bhi.n	8002e88 <__multiply+0x124>
 8002e7c:	f8c8 3004 	str.w	r3, [r8, #4]
 8002e80:	3504      	adds	r5, #4
 8002e82:	e79b      	b.n	8002dbc <__multiply+0x58>
 8002e84:	46d4      	mov	ip, sl
 8002e86:	e7b3      	b.n	8002df0 <__multiply+0x8c>
 8002e88:	46e0      	mov	r8, ip
 8002e8a:	e7dd      	b.n	8002e48 <__multiply+0xe4>
 8002e8c:	3e01      	subs	r6, #1
 8002e8e:	e799      	b.n	8002dc4 <__multiply+0x60>

08002e90 <__pow5mult>:
 8002e90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002e94:	4615      	mov	r5, r2
 8002e96:	f012 0203 	ands.w	r2, r2, #3
 8002e9a:	4606      	mov	r6, r0
 8002e9c:	460f      	mov	r7, r1
 8002e9e:	d007      	beq.n	8002eb0 <__pow5mult+0x20>
 8002ea0:	3a01      	subs	r2, #1
 8002ea2:	4c21      	ldr	r4, [pc, #132]	; (8002f28 <__pow5mult+0x98>)
 8002ea4:	2300      	movs	r3, #0
 8002ea6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8002eaa:	f7ff fec9 	bl	8002c40 <__multadd>
 8002eae:	4607      	mov	r7, r0
 8002eb0:	10ad      	asrs	r5, r5, #2
 8002eb2:	d035      	beq.n	8002f20 <__pow5mult+0x90>
 8002eb4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8002eb6:	b93c      	cbnz	r4, 8002ec8 <__pow5mult+0x38>
 8002eb8:	2010      	movs	r0, #16
 8002eba:	f7ff fe63 	bl	8002b84 <malloc>
 8002ebe:	6270      	str	r0, [r6, #36]	; 0x24
 8002ec0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8002ec4:	6004      	str	r4, [r0, #0]
 8002ec6:	60c4      	str	r4, [r0, #12]
 8002ec8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8002ecc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8002ed0:	b94c      	cbnz	r4, 8002ee6 <__pow5mult+0x56>
 8002ed2:	f240 2171 	movw	r1, #625	; 0x271
 8002ed6:	4630      	mov	r0, r6
 8002ed8:	f7ff ff3b 	bl	8002d52 <__i2b>
 8002edc:	2300      	movs	r3, #0
 8002ede:	f8c8 0008 	str.w	r0, [r8, #8]
 8002ee2:	4604      	mov	r4, r0
 8002ee4:	6003      	str	r3, [r0, #0]
 8002ee6:	f04f 0800 	mov.w	r8, #0
 8002eea:	07eb      	lsls	r3, r5, #31
 8002eec:	d50a      	bpl.n	8002f04 <__pow5mult+0x74>
 8002eee:	4639      	mov	r1, r7
 8002ef0:	4622      	mov	r2, r4
 8002ef2:	4630      	mov	r0, r6
 8002ef4:	f7ff ff36 	bl	8002d64 <__multiply>
 8002ef8:	4639      	mov	r1, r7
 8002efa:	4681      	mov	r9, r0
 8002efc:	4630      	mov	r0, r6
 8002efe:	f7ff fe88 	bl	8002c12 <_Bfree>
 8002f02:	464f      	mov	r7, r9
 8002f04:	106d      	asrs	r5, r5, #1
 8002f06:	d00b      	beq.n	8002f20 <__pow5mult+0x90>
 8002f08:	6820      	ldr	r0, [r4, #0]
 8002f0a:	b938      	cbnz	r0, 8002f1c <__pow5mult+0x8c>
 8002f0c:	4622      	mov	r2, r4
 8002f0e:	4621      	mov	r1, r4
 8002f10:	4630      	mov	r0, r6
 8002f12:	f7ff ff27 	bl	8002d64 <__multiply>
 8002f16:	6020      	str	r0, [r4, #0]
 8002f18:	f8c0 8000 	str.w	r8, [r0]
 8002f1c:	4604      	mov	r4, r0
 8002f1e:	e7e4      	b.n	8002eea <__pow5mult+0x5a>
 8002f20:	4638      	mov	r0, r7
 8002f22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002f26:	bf00      	nop
 8002f28:	080037e8 	.word	0x080037e8

08002f2c <__lshift>:
 8002f2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002f30:	460c      	mov	r4, r1
 8002f32:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8002f36:	6923      	ldr	r3, [r4, #16]
 8002f38:	6849      	ldr	r1, [r1, #4]
 8002f3a:	eb0a 0903 	add.w	r9, sl, r3
 8002f3e:	68a3      	ldr	r3, [r4, #8]
 8002f40:	4607      	mov	r7, r0
 8002f42:	4616      	mov	r6, r2
 8002f44:	f109 0501 	add.w	r5, r9, #1
 8002f48:	42ab      	cmp	r3, r5
 8002f4a:	db32      	blt.n	8002fb2 <__lshift+0x86>
 8002f4c:	4638      	mov	r0, r7
 8002f4e:	f7ff fe2c 	bl	8002baa <_Balloc>
 8002f52:	2300      	movs	r3, #0
 8002f54:	4680      	mov	r8, r0
 8002f56:	f100 0114 	add.w	r1, r0, #20
 8002f5a:	461a      	mov	r2, r3
 8002f5c:	4553      	cmp	r3, sl
 8002f5e:	db2b      	blt.n	8002fb8 <__lshift+0x8c>
 8002f60:	6920      	ldr	r0, [r4, #16]
 8002f62:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8002f66:	f104 0314 	add.w	r3, r4, #20
 8002f6a:	f016 021f 	ands.w	r2, r6, #31
 8002f6e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8002f72:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8002f76:	d025      	beq.n	8002fc4 <__lshift+0x98>
 8002f78:	f1c2 0e20 	rsb	lr, r2, #32
 8002f7c:	2000      	movs	r0, #0
 8002f7e:	681e      	ldr	r6, [r3, #0]
 8002f80:	468a      	mov	sl, r1
 8002f82:	4096      	lsls	r6, r2
 8002f84:	4330      	orrs	r0, r6
 8002f86:	f84a 0b04 	str.w	r0, [sl], #4
 8002f8a:	f853 0b04 	ldr.w	r0, [r3], #4
 8002f8e:	459c      	cmp	ip, r3
 8002f90:	fa20 f00e 	lsr.w	r0, r0, lr
 8002f94:	d814      	bhi.n	8002fc0 <__lshift+0x94>
 8002f96:	6048      	str	r0, [r1, #4]
 8002f98:	b108      	cbz	r0, 8002f9e <__lshift+0x72>
 8002f9a:	f109 0502 	add.w	r5, r9, #2
 8002f9e:	3d01      	subs	r5, #1
 8002fa0:	4638      	mov	r0, r7
 8002fa2:	f8c8 5010 	str.w	r5, [r8, #16]
 8002fa6:	4621      	mov	r1, r4
 8002fa8:	f7ff fe33 	bl	8002c12 <_Bfree>
 8002fac:	4640      	mov	r0, r8
 8002fae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002fb2:	3101      	adds	r1, #1
 8002fb4:	005b      	lsls	r3, r3, #1
 8002fb6:	e7c7      	b.n	8002f48 <__lshift+0x1c>
 8002fb8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002fbc:	3301      	adds	r3, #1
 8002fbe:	e7cd      	b.n	8002f5c <__lshift+0x30>
 8002fc0:	4651      	mov	r1, sl
 8002fc2:	e7dc      	b.n	8002f7e <__lshift+0x52>
 8002fc4:	3904      	subs	r1, #4
 8002fc6:	f853 2b04 	ldr.w	r2, [r3], #4
 8002fca:	f841 2f04 	str.w	r2, [r1, #4]!
 8002fce:	459c      	cmp	ip, r3
 8002fd0:	d8f9      	bhi.n	8002fc6 <__lshift+0x9a>
 8002fd2:	e7e4      	b.n	8002f9e <__lshift+0x72>

08002fd4 <__mcmp>:
 8002fd4:	6903      	ldr	r3, [r0, #16]
 8002fd6:	690a      	ldr	r2, [r1, #16]
 8002fd8:	1a9b      	subs	r3, r3, r2
 8002fda:	b530      	push	{r4, r5, lr}
 8002fdc:	d10c      	bne.n	8002ff8 <__mcmp+0x24>
 8002fde:	0092      	lsls	r2, r2, #2
 8002fe0:	3014      	adds	r0, #20
 8002fe2:	3114      	adds	r1, #20
 8002fe4:	1884      	adds	r4, r0, r2
 8002fe6:	4411      	add	r1, r2
 8002fe8:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8002fec:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8002ff0:	4295      	cmp	r5, r2
 8002ff2:	d003      	beq.n	8002ffc <__mcmp+0x28>
 8002ff4:	d305      	bcc.n	8003002 <__mcmp+0x2e>
 8002ff6:	2301      	movs	r3, #1
 8002ff8:	4618      	mov	r0, r3
 8002ffa:	bd30      	pop	{r4, r5, pc}
 8002ffc:	42a0      	cmp	r0, r4
 8002ffe:	d3f3      	bcc.n	8002fe8 <__mcmp+0x14>
 8003000:	e7fa      	b.n	8002ff8 <__mcmp+0x24>
 8003002:	f04f 33ff 	mov.w	r3, #4294967295
 8003006:	e7f7      	b.n	8002ff8 <__mcmp+0x24>

08003008 <__mdiff>:
 8003008:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800300c:	460d      	mov	r5, r1
 800300e:	4607      	mov	r7, r0
 8003010:	4611      	mov	r1, r2
 8003012:	4628      	mov	r0, r5
 8003014:	4614      	mov	r4, r2
 8003016:	f7ff ffdd 	bl	8002fd4 <__mcmp>
 800301a:	1e06      	subs	r6, r0, #0
 800301c:	d108      	bne.n	8003030 <__mdiff+0x28>
 800301e:	4631      	mov	r1, r6
 8003020:	4638      	mov	r0, r7
 8003022:	f7ff fdc2 	bl	8002baa <_Balloc>
 8003026:	2301      	movs	r3, #1
 8003028:	e9c0 3604 	strd	r3, r6, [r0, #16]
 800302c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003030:	bfa4      	itt	ge
 8003032:	4623      	movge	r3, r4
 8003034:	462c      	movge	r4, r5
 8003036:	4638      	mov	r0, r7
 8003038:	6861      	ldr	r1, [r4, #4]
 800303a:	bfa6      	itte	ge
 800303c:	461d      	movge	r5, r3
 800303e:	2600      	movge	r6, #0
 8003040:	2601      	movlt	r6, #1
 8003042:	f7ff fdb2 	bl	8002baa <_Balloc>
 8003046:	692b      	ldr	r3, [r5, #16]
 8003048:	60c6      	str	r6, [r0, #12]
 800304a:	6926      	ldr	r6, [r4, #16]
 800304c:	f105 0914 	add.w	r9, r5, #20
 8003050:	f104 0214 	add.w	r2, r4, #20
 8003054:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8003058:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 800305c:	f100 0514 	add.w	r5, r0, #20
 8003060:	f04f 0e00 	mov.w	lr, #0
 8003064:	f852 ab04 	ldr.w	sl, [r2], #4
 8003068:	f859 4b04 	ldr.w	r4, [r9], #4
 800306c:	fa1e f18a 	uxtah	r1, lr, sl
 8003070:	b2a3      	uxth	r3, r4
 8003072:	1ac9      	subs	r1, r1, r3
 8003074:	0c23      	lsrs	r3, r4, #16
 8003076:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 800307a:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800307e:	b289      	uxth	r1, r1
 8003080:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8003084:	45c8      	cmp	r8, r9
 8003086:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800308a:	4694      	mov	ip, r2
 800308c:	f845 3b04 	str.w	r3, [r5], #4
 8003090:	d8e8      	bhi.n	8003064 <__mdiff+0x5c>
 8003092:	45bc      	cmp	ip, r7
 8003094:	d304      	bcc.n	80030a0 <__mdiff+0x98>
 8003096:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 800309a:	b183      	cbz	r3, 80030be <__mdiff+0xb6>
 800309c:	6106      	str	r6, [r0, #16]
 800309e:	e7c5      	b.n	800302c <__mdiff+0x24>
 80030a0:	f85c 1b04 	ldr.w	r1, [ip], #4
 80030a4:	fa1e f381 	uxtah	r3, lr, r1
 80030a8:	141a      	asrs	r2, r3, #16
 80030aa:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80030ae:	b29b      	uxth	r3, r3
 80030b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80030b4:	ea4f 4e22 	mov.w	lr, r2, asr #16
 80030b8:	f845 3b04 	str.w	r3, [r5], #4
 80030bc:	e7e9      	b.n	8003092 <__mdiff+0x8a>
 80030be:	3e01      	subs	r6, #1
 80030c0:	e7e9      	b.n	8003096 <__mdiff+0x8e>

080030c2 <__d2b>:
 80030c2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80030c6:	460e      	mov	r6, r1
 80030c8:	2101      	movs	r1, #1
 80030ca:	ec59 8b10 	vmov	r8, r9, d0
 80030ce:	4615      	mov	r5, r2
 80030d0:	f7ff fd6b 	bl	8002baa <_Balloc>
 80030d4:	f3c9 540a 	ubfx	r4, r9, #20, #11
 80030d8:	4607      	mov	r7, r0
 80030da:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80030de:	bb34      	cbnz	r4, 800312e <__d2b+0x6c>
 80030e0:	9301      	str	r3, [sp, #4]
 80030e2:	f1b8 0300 	subs.w	r3, r8, #0
 80030e6:	d027      	beq.n	8003138 <__d2b+0x76>
 80030e8:	a802      	add	r0, sp, #8
 80030ea:	f840 3d08 	str.w	r3, [r0, #-8]!
 80030ee:	f7ff fe01 	bl	8002cf4 <__lo0bits>
 80030f2:	9900      	ldr	r1, [sp, #0]
 80030f4:	b1f0      	cbz	r0, 8003134 <__d2b+0x72>
 80030f6:	9a01      	ldr	r2, [sp, #4]
 80030f8:	f1c0 0320 	rsb	r3, r0, #32
 80030fc:	fa02 f303 	lsl.w	r3, r2, r3
 8003100:	430b      	orrs	r3, r1
 8003102:	40c2      	lsrs	r2, r0
 8003104:	617b      	str	r3, [r7, #20]
 8003106:	9201      	str	r2, [sp, #4]
 8003108:	9b01      	ldr	r3, [sp, #4]
 800310a:	61bb      	str	r3, [r7, #24]
 800310c:	2b00      	cmp	r3, #0
 800310e:	bf14      	ite	ne
 8003110:	2102      	movne	r1, #2
 8003112:	2101      	moveq	r1, #1
 8003114:	6139      	str	r1, [r7, #16]
 8003116:	b1c4      	cbz	r4, 800314a <__d2b+0x88>
 8003118:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 800311c:	4404      	add	r4, r0
 800311e:	6034      	str	r4, [r6, #0]
 8003120:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003124:	6028      	str	r0, [r5, #0]
 8003126:	4638      	mov	r0, r7
 8003128:	b003      	add	sp, #12
 800312a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800312e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003132:	e7d5      	b.n	80030e0 <__d2b+0x1e>
 8003134:	6179      	str	r1, [r7, #20]
 8003136:	e7e7      	b.n	8003108 <__d2b+0x46>
 8003138:	a801      	add	r0, sp, #4
 800313a:	f7ff fddb 	bl	8002cf4 <__lo0bits>
 800313e:	9b01      	ldr	r3, [sp, #4]
 8003140:	617b      	str	r3, [r7, #20]
 8003142:	2101      	movs	r1, #1
 8003144:	6139      	str	r1, [r7, #16]
 8003146:	3020      	adds	r0, #32
 8003148:	e7e5      	b.n	8003116 <__d2b+0x54>
 800314a:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 800314e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003152:	6030      	str	r0, [r6, #0]
 8003154:	6918      	ldr	r0, [r3, #16]
 8003156:	f7ff fdae 	bl	8002cb6 <__hi0bits>
 800315a:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 800315e:	e7e1      	b.n	8003124 <__d2b+0x62>

08003160 <_calloc_r>:
 8003160:	b538      	push	{r3, r4, r5, lr}
 8003162:	fb02 f401 	mul.w	r4, r2, r1
 8003166:	4621      	mov	r1, r4
 8003168:	f000 f856 	bl	8003218 <_malloc_r>
 800316c:	4605      	mov	r5, r0
 800316e:	b118      	cbz	r0, 8003178 <_calloc_r+0x18>
 8003170:	4622      	mov	r2, r4
 8003172:	2100      	movs	r1, #0
 8003174:	f7fe fa1c 	bl	80015b0 <memset>
 8003178:	4628      	mov	r0, r5
 800317a:	bd38      	pop	{r3, r4, r5, pc}

0800317c <_free_r>:
 800317c:	b538      	push	{r3, r4, r5, lr}
 800317e:	4605      	mov	r5, r0
 8003180:	2900      	cmp	r1, #0
 8003182:	d045      	beq.n	8003210 <_free_r+0x94>
 8003184:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003188:	1f0c      	subs	r4, r1, #4
 800318a:	2b00      	cmp	r3, #0
 800318c:	bfb8      	it	lt
 800318e:	18e4      	addlt	r4, r4, r3
 8003190:	f000 fa29 	bl	80035e6 <__malloc_lock>
 8003194:	4a1f      	ldr	r2, [pc, #124]	; (8003214 <_free_r+0x98>)
 8003196:	6813      	ldr	r3, [r2, #0]
 8003198:	4610      	mov	r0, r2
 800319a:	b933      	cbnz	r3, 80031aa <_free_r+0x2e>
 800319c:	6063      	str	r3, [r4, #4]
 800319e:	6014      	str	r4, [r2, #0]
 80031a0:	4628      	mov	r0, r5
 80031a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80031a6:	f000 ba1f 	b.w	80035e8 <__malloc_unlock>
 80031aa:	42a3      	cmp	r3, r4
 80031ac:	d90c      	bls.n	80031c8 <_free_r+0x4c>
 80031ae:	6821      	ldr	r1, [r4, #0]
 80031b0:	1862      	adds	r2, r4, r1
 80031b2:	4293      	cmp	r3, r2
 80031b4:	bf04      	itt	eq
 80031b6:	681a      	ldreq	r2, [r3, #0]
 80031b8:	685b      	ldreq	r3, [r3, #4]
 80031ba:	6063      	str	r3, [r4, #4]
 80031bc:	bf04      	itt	eq
 80031be:	1852      	addeq	r2, r2, r1
 80031c0:	6022      	streq	r2, [r4, #0]
 80031c2:	6004      	str	r4, [r0, #0]
 80031c4:	e7ec      	b.n	80031a0 <_free_r+0x24>
 80031c6:	4613      	mov	r3, r2
 80031c8:	685a      	ldr	r2, [r3, #4]
 80031ca:	b10a      	cbz	r2, 80031d0 <_free_r+0x54>
 80031cc:	42a2      	cmp	r2, r4
 80031ce:	d9fa      	bls.n	80031c6 <_free_r+0x4a>
 80031d0:	6819      	ldr	r1, [r3, #0]
 80031d2:	1858      	adds	r0, r3, r1
 80031d4:	42a0      	cmp	r0, r4
 80031d6:	d10b      	bne.n	80031f0 <_free_r+0x74>
 80031d8:	6820      	ldr	r0, [r4, #0]
 80031da:	4401      	add	r1, r0
 80031dc:	1858      	adds	r0, r3, r1
 80031de:	4282      	cmp	r2, r0
 80031e0:	6019      	str	r1, [r3, #0]
 80031e2:	d1dd      	bne.n	80031a0 <_free_r+0x24>
 80031e4:	6810      	ldr	r0, [r2, #0]
 80031e6:	6852      	ldr	r2, [r2, #4]
 80031e8:	605a      	str	r2, [r3, #4]
 80031ea:	4401      	add	r1, r0
 80031ec:	6019      	str	r1, [r3, #0]
 80031ee:	e7d7      	b.n	80031a0 <_free_r+0x24>
 80031f0:	d902      	bls.n	80031f8 <_free_r+0x7c>
 80031f2:	230c      	movs	r3, #12
 80031f4:	602b      	str	r3, [r5, #0]
 80031f6:	e7d3      	b.n	80031a0 <_free_r+0x24>
 80031f8:	6820      	ldr	r0, [r4, #0]
 80031fa:	1821      	adds	r1, r4, r0
 80031fc:	428a      	cmp	r2, r1
 80031fe:	bf04      	itt	eq
 8003200:	6811      	ldreq	r1, [r2, #0]
 8003202:	6852      	ldreq	r2, [r2, #4]
 8003204:	6062      	str	r2, [r4, #4]
 8003206:	bf04      	itt	eq
 8003208:	1809      	addeq	r1, r1, r0
 800320a:	6021      	streq	r1, [r4, #0]
 800320c:	605c      	str	r4, [r3, #4]
 800320e:	e7c7      	b.n	80031a0 <_free_r+0x24>
 8003210:	bd38      	pop	{r3, r4, r5, pc}
 8003212:	bf00      	nop
 8003214:	200001f4 	.word	0x200001f4

08003218 <_malloc_r>:
 8003218:	b570      	push	{r4, r5, r6, lr}
 800321a:	1ccd      	adds	r5, r1, #3
 800321c:	f025 0503 	bic.w	r5, r5, #3
 8003220:	3508      	adds	r5, #8
 8003222:	2d0c      	cmp	r5, #12
 8003224:	bf38      	it	cc
 8003226:	250c      	movcc	r5, #12
 8003228:	2d00      	cmp	r5, #0
 800322a:	4606      	mov	r6, r0
 800322c:	db01      	blt.n	8003232 <_malloc_r+0x1a>
 800322e:	42a9      	cmp	r1, r5
 8003230:	d903      	bls.n	800323a <_malloc_r+0x22>
 8003232:	230c      	movs	r3, #12
 8003234:	6033      	str	r3, [r6, #0]
 8003236:	2000      	movs	r0, #0
 8003238:	bd70      	pop	{r4, r5, r6, pc}
 800323a:	f000 f9d4 	bl	80035e6 <__malloc_lock>
 800323e:	4a21      	ldr	r2, [pc, #132]	; (80032c4 <_malloc_r+0xac>)
 8003240:	6814      	ldr	r4, [r2, #0]
 8003242:	4621      	mov	r1, r4
 8003244:	b991      	cbnz	r1, 800326c <_malloc_r+0x54>
 8003246:	4c20      	ldr	r4, [pc, #128]	; (80032c8 <_malloc_r+0xb0>)
 8003248:	6823      	ldr	r3, [r4, #0]
 800324a:	b91b      	cbnz	r3, 8003254 <_malloc_r+0x3c>
 800324c:	4630      	mov	r0, r6
 800324e:	f000 f98f 	bl	8003570 <_sbrk_r>
 8003252:	6020      	str	r0, [r4, #0]
 8003254:	4629      	mov	r1, r5
 8003256:	4630      	mov	r0, r6
 8003258:	f000 f98a 	bl	8003570 <_sbrk_r>
 800325c:	1c43      	adds	r3, r0, #1
 800325e:	d124      	bne.n	80032aa <_malloc_r+0x92>
 8003260:	230c      	movs	r3, #12
 8003262:	6033      	str	r3, [r6, #0]
 8003264:	4630      	mov	r0, r6
 8003266:	f000 f9bf 	bl	80035e8 <__malloc_unlock>
 800326a:	e7e4      	b.n	8003236 <_malloc_r+0x1e>
 800326c:	680b      	ldr	r3, [r1, #0]
 800326e:	1b5b      	subs	r3, r3, r5
 8003270:	d418      	bmi.n	80032a4 <_malloc_r+0x8c>
 8003272:	2b0b      	cmp	r3, #11
 8003274:	d90f      	bls.n	8003296 <_malloc_r+0x7e>
 8003276:	600b      	str	r3, [r1, #0]
 8003278:	50cd      	str	r5, [r1, r3]
 800327a:	18cc      	adds	r4, r1, r3
 800327c:	4630      	mov	r0, r6
 800327e:	f000 f9b3 	bl	80035e8 <__malloc_unlock>
 8003282:	f104 000b 	add.w	r0, r4, #11
 8003286:	1d23      	adds	r3, r4, #4
 8003288:	f020 0007 	bic.w	r0, r0, #7
 800328c:	1ac3      	subs	r3, r0, r3
 800328e:	d0d3      	beq.n	8003238 <_malloc_r+0x20>
 8003290:	425a      	negs	r2, r3
 8003292:	50e2      	str	r2, [r4, r3]
 8003294:	e7d0      	b.n	8003238 <_malloc_r+0x20>
 8003296:	428c      	cmp	r4, r1
 8003298:	684b      	ldr	r3, [r1, #4]
 800329a:	bf16      	itet	ne
 800329c:	6063      	strne	r3, [r4, #4]
 800329e:	6013      	streq	r3, [r2, #0]
 80032a0:	460c      	movne	r4, r1
 80032a2:	e7eb      	b.n	800327c <_malloc_r+0x64>
 80032a4:	460c      	mov	r4, r1
 80032a6:	6849      	ldr	r1, [r1, #4]
 80032a8:	e7cc      	b.n	8003244 <_malloc_r+0x2c>
 80032aa:	1cc4      	adds	r4, r0, #3
 80032ac:	f024 0403 	bic.w	r4, r4, #3
 80032b0:	42a0      	cmp	r0, r4
 80032b2:	d005      	beq.n	80032c0 <_malloc_r+0xa8>
 80032b4:	1a21      	subs	r1, r4, r0
 80032b6:	4630      	mov	r0, r6
 80032b8:	f000 f95a 	bl	8003570 <_sbrk_r>
 80032bc:	3001      	adds	r0, #1
 80032be:	d0cf      	beq.n	8003260 <_malloc_r+0x48>
 80032c0:	6025      	str	r5, [r4, #0]
 80032c2:	e7db      	b.n	800327c <_malloc_r+0x64>
 80032c4:	200001f4 	.word	0x200001f4
 80032c8:	200001f8 	.word	0x200001f8

080032cc <__ssputs_r>:
 80032cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80032d0:	688e      	ldr	r6, [r1, #8]
 80032d2:	429e      	cmp	r6, r3
 80032d4:	4682      	mov	sl, r0
 80032d6:	460c      	mov	r4, r1
 80032d8:	4690      	mov	r8, r2
 80032da:	4699      	mov	r9, r3
 80032dc:	d837      	bhi.n	800334e <__ssputs_r+0x82>
 80032de:	898a      	ldrh	r2, [r1, #12]
 80032e0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80032e4:	d031      	beq.n	800334a <__ssputs_r+0x7e>
 80032e6:	6825      	ldr	r5, [r4, #0]
 80032e8:	6909      	ldr	r1, [r1, #16]
 80032ea:	1a6f      	subs	r7, r5, r1
 80032ec:	6965      	ldr	r5, [r4, #20]
 80032ee:	2302      	movs	r3, #2
 80032f0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80032f4:	fb95 f5f3 	sdiv	r5, r5, r3
 80032f8:	f109 0301 	add.w	r3, r9, #1
 80032fc:	443b      	add	r3, r7
 80032fe:	429d      	cmp	r5, r3
 8003300:	bf38      	it	cc
 8003302:	461d      	movcc	r5, r3
 8003304:	0553      	lsls	r3, r2, #21
 8003306:	d530      	bpl.n	800336a <__ssputs_r+0x9e>
 8003308:	4629      	mov	r1, r5
 800330a:	f7ff ff85 	bl	8003218 <_malloc_r>
 800330e:	4606      	mov	r6, r0
 8003310:	b950      	cbnz	r0, 8003328 <__ssputs_r+0x5c>
 8003312:	230c      	movs	r3, #12
 8003314:	f8ca 3000 	str.w	r3, [sl]
 8003318:	89a3      	ldrh	r3, [r4, #12]
 800331a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800331e:	81a3      	strh	r3, [r4, #12]
 8003320:	f04f 30ff 	mov.w	r0, #4294967295
 8003324:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003328:	463a      	mov	r2, r7
 800332a:	6921      	ldr	r1, [r4, #16]
 800332c:	f7ff fc32 	bl	8002b94 <memcpy>
 8003330:	89a3      	ldrh	r3, [r4, #12]
 8003332:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003336:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800333a:	81a3      	strh	r3, [r4, #12]
 800333c:	6126      	str	r6, [r4, #16]
 800333e:	6165      	str	r5, [r4, #20]
 8003340:	443e      	add	r6, r7
 8003342:	1bed      	subs	r5, r5, r7
 8003344:	6026      	str	r6, [r4, #0]
 8003346:	60a5      	str	r5, [r4, #8]
 8003348:	464e      	mov	r6, r9
 800334a:	454e      	cmp	r6, r9
 800334c:	d900      	bls.n	8003350 <__ssputs_r+0x84>
 800334e:	464e      	mov	r6, r9
 8003350:	4632      	mov	r2, r6
 8003352:	4641      	mov	r1, r8
 8003354:	6820      	ldr	r0, [r4, #0]
 8003356:	f000 f92d 	bl	80035b4 <memmove>
 800335a:	68a3      	ldr	r3, [r4, #8]
 800335c:	1b9b      	subs	r3, r3, r6
 800335e:	60a3      	str	r3, [r4, #8]
 8003360:	6823      	ldr	r3, [r4, #0]
 8003362:	441e      	add	r6, r3
 8003364:	6026      	str	r6, [r4, #0]
 8003366:	2000      	movs	r0, #0
 8003368:	e7dc      	b.n	8003324 <__ssputs_r+0x58>
 800336a:	462a      	mov	r2, r5
 800336c:	f000 f93d 	bl	80035ea <_realloc_r>
 8003370:	4606      	mov	r6, r0
 8003372:	2800      	cmp	r0, #0
 8003374:	d1e2      	bne.n	800333c <__ssputs_r+0x70>
 8003376:	6921      	ldr	r1, [r4, #16]
 8003378:	4650      	mov	r0, sl
 800337a:	f7ff feff 	bl	800317c <_free_r>
 800337e:	e7c8      	b.n	8003312 <__ssputs_r+0x46>

08003380 <_svfiprintf_r>:
 8003380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003384:	461d      	mov	r5, r3
 8003386:	898b      	ldrh	r3, [r1, #12]
 8003388:	061f      	lsls	r7, r3, #24
 800338a:	b09d      	sub	sp, #116	; 0x74
 800338c:	4680      	mov	r8, r0
 800338e:	460c      	mov	r4, r1
 8003390:	4616      	mov	r6, r2
 8003392:	d50f      	bpl.n	80033b4 <_svfiprintf_r+0x34>
 8003394:	690b      	ldr	r3, [r1, #16]
 8003396:	b96b      	cbnz	r3, 80033b4 <_svfiprintf_r+0x34>
 8003398:	2140      	movs	r1, #64	; 0x40
 800339a:	f7ff ff3d 	bl	8003218 <_malloc_r>
 800339e:	6020      	str	r0, [r4, #0]
 80033a0:	6120      	str	r0, [r4, #16]
 80033a2:	b928      	cbnz	r0, 80033b0 <_svfiprintf_r+0x30>
 80033a4:	230c      	movs	r3, #12
 80033a6:	f8c8 3000 	str.w	r3, [r8]
 80033aa:	f04f 30ff 	mov.w	r0, #4294967295
 80033ae:	e0c8      	b.n	8003542 <_svfiprintf_r+0x1c2>
 80033b0:	2340      	movs	r3, #64	; 0x40
 80033b2:	6163      	str	r3, [r4, #20]
 80033b4:	2300      	movs	r3, #0
 80033b6:	9309      	str	r3, [sp, #36]	; 0x24
 80033b8:	2320      	movs	r3, #32
 80033ba:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80033be:	2330      	movs	r3, #48	; 0x30
 80033c0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80033c4:	9503      	str	r5, [sp, #12]
 80033c6:	f04f 0b01 	mov.w	fp, #1
 80033ca:	4637      	mov	r7, r6
 80033cc:	463d      	mov	r5, r7
 80033ce:	f815 3b01 	ldrb.w	r3, [r5], #1
 80033d2:	b10b      	cbz	r3, 80033d8 <_svfiprintf_r+0x58>
 80033d4:	2b25      	cmp	r3, #37	; 0x25
 80033d6:	d13e      	bne.n	8003456 <_svfiprintf_r+0xd6>
 80033d8:	ebb7 0a06 	subs.w	sl, r7, r6
 80033dc:	d00b      	beq.n	80033f6 <_svfiprintf_r+0x76>
 80033de:	4653      	mov	r3, sl
 80033e0:	4632      	mov	r2, r6
 80033e2:	4621      	mov	r1, r4
 80033e4:	4640      	mov	r0, r8
 80033e6:	f7ff ff71 	bl	80032cc <__ssputs_r>
 80033ea:	3001      	adds	r0, #1
 80033ec:	f000 80a4 	beq.w	8003538 <_svfiprintf_r+0x1b8>
 80033f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80033f2:	4453      	add	r3, sl
 80033f4:	9309      	str	r3, [sp, #36]	; 0x24
 80033f6:	783b      	ldrb	r3, [r7, #0]
 80033f8:	2b00      	cmp	r3, #0
 80033fa:	f000 809d 	beq.w	8003538 <_svfiprintf_r+0x1b8>
 80033fe:	2300      	movs	r3, #0
 8003400:	f04f 32ff 	mov.w	r2, #4294967295
 8003404:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003408:	9304      	str	r3, [sp, #16]
 800340a:	9307      	str	r3, [sp, #28]
 800340c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003410:	931a      	str	r3, [sp, #104]	; 0x68
 8003412:	462f      	mov	r7, r5
 8003414:	2205      	movs	r2, #5
 8003416:	f817 1b01 	ldrb.w	r1, [r7], #1
 800341a:	4850      	ldr	r0, [pc, #320]	; (800355c <_svfiprintf_r+0x1dc>)
 800341c:	f7fc fee8 	bl	80001f0 <memchr>
 8003420:	9b04      	ldr	r3, [sp, #16]
 8003422:	b9d0      	cbnz	r0, 800345a <_svfiprintf_r+0xda>
 8003424:	06d9      	lsls	r1, r3, #27
 8003426:	bf44      	itt	mi
 8003428:	2220      	movmi	r2, #32
 800342a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800342e:	071a      	lsls	r2, r3, #28
 8003430:	bf44      	itt	mi
 8003432:	222b      	movmi	r2, #43	; 0x2b
 8003434:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8003438:	782a      	ldrb	r2, [r5, #0]
 800343a:	2a2a      	cmp	r2, #42	; 0x2a
 800343c:	d015      	beq.n	800346a <_svfiprintf_r+0xea>
 800343e:	9a07      	ldr	r2, [sp, #28]
 8003440:	462f      	mov	r7, r5
 8003442:	2000      	movs	r0, #0
 8003444:	250a      	movs	r5, #10
 8003446:	4639      	mov	r1, r7
 8003448:	f811 3b01 	ldrb.w	r3, [r1], #1
 800344c:	3b30      	subs	r3, #48	; 0x30
 800344e:	2b09      	cmp	r3, #9
 8003450:	d94d      	bls.n	80034ee <_svfiprintf_r+0x16e>
 8003452:	b1b8      	cbz	r0, 8003484 <_svfiprintf_r+0x104>
 8003454:	e00f      	b.n	8003476 <_svfiprintf_r+0xf6>
 8003456:	462f      	mov	r7, r5
 8003458:	e7b8      	b.n	80033cc <_svfiprintf_r+0x4c>
 800345a:	4a40      	ldr	r2, [pc, #256]	; (800355c <_svfiprintf_r+0x1dc>)
 800345c:	1a80      	subs	r0, r0, r2
 800345e:	fa0b f000 	lsl.w	r0, fp, r0
 8003462:	4318      	orrs	r0, r3
 8003464:	9004      	str	r0, [sp, #16]
 8003466:	463d      	mov	r5, r7
 8003468:	e7d3      	b.n	8003412 <_svfiprintf_r+0x92>
 800346a:	9a03      	ldr	r2, [sp, #12]
 800346c:	1d11      	adds	r1, r2, #4
 800346e:	6812      	ldr	r2, [r2, #0]
 8003470:	9103      	str	r1, [sp, #12]
 8003472:	2a00      	cmp	r2, #0
 8003474:	db01      	blt.n	800347a <_svfiprintf_r+0xfa>
 8003476:	9207      	str	r2, [sp, #28]
 8003478:	e004      	b.n	8003484 <_svfiprintf_r+0x104>
 800347a:	4252      	negs	r2, r2
 800347c:	f043 0302 	orr.w	r3, r3, #2
 8003480:	9207      	str	r2, [sp, #28]
 8003482:	9304      	str	r3, [sp, #16]
 8003484:	783b      	ldrb	r3, [r7, #0]
 8003486:	2b2e      	cmp	r3, #46	; 0x2e
 8003488:	d10c      	bne.n	80034a4 <_svfiprintf_r+0x124>
 800348a:	787b      	ldrb	r3, [r7, #1]
 800348c:	2b2a      	cmp	r3, #42	; 0x2a
 800348e:	d133      	bne.n	80034f8 <_svfiprintf_r+0x178>
 8003490:	9b03      	ldr	r3, [sp, #12]
 8003492:	1d1a      	adds	r2, r3, #4
 8003494:	681b      	ldr	r3, [r3, #0]
 8003496:	9203      	str	r2, [sp, #12]
 8003498:	2b00      	cmp	r3, #0
 800349a:	bfb8      	it	lt
 800349c:	f04f 33ff 	movlt.w	r3, #4294967295
 80034a0:	3702      	adds	r7, #2
 80034a2:	9305      	str	r3, [sp, #20]
 80034a4:	4d2e      	ldr	r5, [pc, #184]	; (8003560 <_svfiprintf_r+0x1e0>)
 80034a6:	7839      	ldrb	r1, [r7, #0]
 80034a8:	2203      	movs	r2, #3
 80034aa:	4628      	mov	r0, r5
 80034ac:	f7fc fea0 	bl	80001f0 <memchr>
 80034b0:	b138      	cbz	r0, 80034c2 <_svfiprintf_r+0x142>
 80034b2:	2340      	movs	r3, #64	; 0x40
 80034b4:	1b40      	subs	r0, r0, r5
 80034b6:	fa03 f000 	lsl.w	r0, r3, r0
 80034ba:	9b04      	ldr	r3, [sp, #16]
 80034bc:	4303      	orrs	r3, r0
 80034be:	3701      	adds	r7, #1
 80034c0:	9304      	str	r3, [sp, #16]
 80034c2:	7839      	ldrb	r1, [r7, #0]
 80034c4:	4827      	ldr	r0, [pc, #156]	; (8003564 <_svfiprintf_r+0x1e4>)
 80034c6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80034ca:	2206      	movs	r2, #6
 80034cc:	1c7e      	adds	r6, r7, #1
 80034ce:	f7fc fe8f 	bl	80001f0 <memchr>
 80034d2:	2800      	cmp	r0, #0
 80034d4:	d038      	beq.n	8003548 <_svfiprintf_r+0x1c8>
 80034d6:	4b24      	ldr	r3, [pc, #144]	; (8003568 <_svfiprintf_r+0x1e8>)
 80034d8:	bb13      	cbnz	r3, 8003520 <_svfiprintf_r+0x1a0>
 80034da:	9b03      	ldr	r3, [sp, #12]
 80034dc:	3307      	adds	r3, #7
 80034de:	f023 0307 	bic.w	r3, r3, #7
 80034e2:	3308      	adds	r3, #8
 80034e4:	9303      	str	r3, [sp, #12]
 80034e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80034e8:	444b      	add	r3, r9
 80034ea:	9309      	str	r3, [sp, #36]	; 0x24
 80034ec:	e76d      	b.n	80033ca <_svfiprintf_r+0x4a>
 80034ee:	fb05 3202 	mla	r2, r5, r2, r3
 80034f2:	2001      	movs	r0, #1
 80034f4:	460f      	mov	r7, r1
 80034f6:	e7a6      	b.n	8003446 <_svfiprintf_r+0xc6>
 80034f8:	2300      	movs	r3, #0
 80034fa:	3701      	adds	r7, #1
 80034fc:	9305      	str	r3, [sp, #20]
 80034fe:	4619      	mov	r1, r3
 8003500:	250a      	movs	r5, #10
 8003502:	4638      	mov	r0, r7
 8003504:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003508:	3a30      	subs	r2, #48	; 0x30
 800350a:	2a09      	cmp	r2, #9
 800350c:	d903      	bls.n	8003516 <_svfiprintf_r+0x196>
 800350e:	2b00      	cmp	r3, #0
 8003510:	d0c8      	beq.n	80034a4 <_svfiprintf_r+0x124>
 8003512:	9105      	str	r1, [sp, #20]
 8003514:	e7c6      	b.n	80034a4 <_svfiprintf_r+0x124>
 8003516:	fb05 2101 	mla	r1, r5, r1, r2
 800351a:	2301      	movs	r3, #1
 800351c:	4607      	mov	r7, r0
 800351e:	e7f0      	b.n	8003502 <_svfiprintf_r+0x182>
 8003520:	ab03      	add	r3, sp, #12
 8003522:	9300      	str	r3, [sp, #0]
 8003524:	4622      	mov	r2, r4
 8003526:	4b11      	ldr	r3, [pc, #68]	; (800356c <_svfiprintf_r+0x1ec>)
 8003528:	a904      	add	r1, sp, #16
 800352a:	4640      	mov	r0, r8
 800352c:	f7fe f8dc 	bl	80016e8 <_printf_float>
 8003530:	f1b0 3fff 	cmp.w	r0, #4294967295
 8003534:	4681      	mov	r9, r0
 8003536:	d1d6      	bne.n	80034e6 <_svfiprintf_r+0x166>
 8003538:	89a3      	ldrh	r3, [r4, #12]
 800353a:	065b      	lsls	r3, r3, #25
 800353c:	f53f af35 	bmi.w	80033aa <_svfiprintf_r+0x2a>
 8003540:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003542:	b01d      	add	sp, #116	; 0x74
 8003544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003548:	ab03      	add	r3, sp, #12
 800354a:	9300      	str	r3, [sp, #0]
 800354c:	4622      	mov	r2, r4
 800354e:	4b07      	ldr	r3, [pc, #28]	; (800356c <_svfiprintf_r+0x1ec>)
 8003550:	a904      	add	r1, sp, #16
 8003552:	4640      	mov	r0, r8
 8003554:	f7fe fb7e 	bl	8001c54 <_printf_i>
 8003558:	e7ea      	b.n	8003530 <_svfiprintf_r+0x1b0>
 800355a:	bf00      	nop
 800355c:	080037f4 	.word	0x080037f4
 8003560:	080037fa 	.word	0x080037fa
 8003564:	080037fe 	.word	0x080037fe
 8003568:	080016e9 	.word	0x080016e9
 800356c:	080032cd 	.word	0x080032cd

08003570 <_sbrk_r>:
 8003570:	b538      	push	{r3, r4, r5, lr}
 8003572:	4c06      	ldr	r4, [pc, #24]	; (800358c <_sbrk_r+0x1c>)
 8003574:	2300      	movs	r3, #0
 8003576:	4605      	mov	r5, r0
 8003578:	4608      	mov	r0, r1
 800357a:	6023      	str	r3, [r4, #0]
 800357c:	f7fd fc48 	bl	8000e10 <_sbrk>
 8003580:	1c43      	adds	r3, r0, #1
 8003582:	d102      	bne.n	800358a <_sbrk_r+0x1a>
 8003584:	6823      	ldr	r3, [r4, #0]
 8003586:	b103      	cbz	r3, 800358a <_sbrk_r+0x1a>
 8003588:	602b      	str	r3, [r5, #0]
 800358a:	bd38      	pop	{r3, r4, r5, pc}
 800358c:	20000320 	.word	0x20000320

08003590 <__ascii_mbtowc>:
 8003590:	b082      	sub	sp, #8
 8003592:	b901      	cbnz	r1, 8003596 <__ascii_mbtowc+0x6>
 8003594:	a901      	add	r1, sp, #4
 8003596:	b142      	cbz	r2, 80035aa <__ascii_mbtowc+0x1a>
 8003598:	b14b      	cbz	r3, 80035ae <__ascii_mbtowc+0x1e>
 800359a:	7813      	ldrb	r3, [r2, #0]
 800359c:	600b      	str	r3, [r1, #0]
 800359e:	7812      	ldrb	r2, [r2, #0]
 80035a0:	1c10      	adds	r0, r2, #0
 80035a2:	bf18      	it	ne
 80035a4:	2001      	movne	r0, #1
 80035a6:	b002      	add	sp, #8
 80035a8:	4770      	bx	lr
 80035aa:	4610      	mov	r0, r2
 80035ac:	e7fb      	b.n	80035a6 <__ascii_mbtowc+0x16>
 80035ae:	f06f 0001 	mvn.w	r0, #1
 80035b2:	e7f8      	b.n	80035a6 <__ascii_mbtowc+0x16>

080035b4 <memmove>:
 80035b4:	4288      	cmp	r0, r1
 80035b6:	b510      	push	{r4, lr}
 80035b8:	eb01 0302 	add.w	r3, r1, r2
 80035bc:	d807      	bhi.n	80035ce <memmove+0x1a>
 80035be:	1e42      	subs	r2, r0, #1
 80035c0:	4299      	cmp	r1, r3
 80035c2:	d00a      	beq.n	80035da <memmove+0x26>
 80035c4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80035c8:	f802 4f01 	strb.w	r4, [r2, #1]!
 80035cc:	e7f8      	b.n	80035c0 <memmove+0xc>
 80035ce:	4283      	cmp	r3, r0
 80035d0:	d9f5      	bls.n	80035be <memmove+0xa>
 80035d2:	1881      	adds	r1, r0, r2
 80035d4:	1ad2      	subs	r2, r2, r3
 80035d6:	42d3      	cmn	r3, r2
 80035d8:	d100      	bne.n	80035dc <memmove+0x28>
 80035da:	bd10      	pop	{r4, pc}
 80035dc:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80035e0:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80035e4:	e7f7      	b.n	80035d6 <memmove+0x22>

080035e6 <__malloc_lock>:
 80035e6:	4770      	bx	lr

080035e8 <__malloc_unlock>:
 80035e8:	4770      	bx	lr

080035ea <_realloc_r>:
 80035ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80035ec:	4607      	mov	r7, r0
 80035ee:	4614      	mov	r4, r2
 80035f0:	460e      	mov	r6, r1
 80035f2:	b921      	cbnz	r1, 80035fe <_realloc_r+0x14>
 80035f4:	4611      	mov	r1, r2
 80035f6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80035fa:	f7ff be0d 	b.w	8003218 <_malloc_r>
 80035fe:	b922      	cbnz	r2, 800360a <_realloc_r+0x20>
 8003600:	f7ff fdbc 	bl	800317c <_free_r>
 8003604:	4625      	mov	r5, r4
 8003606:	4628      	mov	r0, r5
 8003608:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800360a:	f000 f821 	bl	8003650 <_malloc_usable_size_r>
 800360e:	42a0      	cmp	r0, r4
 8003610:	d20f      	bcs.n	8003632 <_realloc_r+0x48>
 8003612:	4621      	mov	r1, r4
 8003614:	4638      	mov	r0, r7
 8003616:	f7ff fdff 	bl	8003218 <_malloc_r>
 800361a:	4605      	mov	r5, r0
 800361c:	2800      	cmp	r0, #0
 800361e:	d0f2      	beq.n	8003606 <_realloc_r+0x1c>
 8003620:	4631      	mov	r1, r6
 8003622:	4622      	mov	r2, r4
 8003624:	f7ff fab6 	bl	8002b94 <memcpy>
 8003628:	4631      	mov	r1, r6
 800362a:	4638      	mov	r0, r7
 800362c:	f7ff fda6 	bl	800317c <_free_r>
 8003630:	e7e9      	b.n	8003606 <_realloc_r+0x1c>
 8003632:	4635      	mov	r5, r6
 8003634:	e7e7      	b.n	8003606 <_realloc_r+0x1c>

08003636 <__ascii_wctomb>:
 8003636:	b149      	cbz	r1, 800364c <__ascii_wctomb+0x16>
 8003638:	2aff      	cmp	r2, #255	; 0xff
 800363a:	bf85      	ittet	hi
 800363c:	238a      	movhi	r3, #138	; 0x8a
 800363e:	6003      	strhi	r3, [r0, #0]
 8003640:	700a      	strbls	r2, [r1, #0]
 8003642:	f04f 30ff 	movhi.w	r0, #4294967295
 8003646:	bf98      	it	ls
 8003648:	2001      	movls	r0, #1
 800364a:	4770      	bx	lr
 800364c:	4608      	mov	r0, r1
 800364e:	4770      	bx	lr

08003650 <_malloc_usable_size_r>:
 8003650:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003654:	1f18      	subs	r0, r3, #4
 8003656:	2b00      	cmp	r3, #0
 8003658:	bfbc      	itt	lt
 800365a:	580b      	ldrlt	r3, [r1, r0]
 800365c:	18c0      	addlt	r0, r0, r3
 800365e:	4770      	bx	lr

08003660 <_init>:
 8003660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003662:	bf00      	nop
 8003664:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003666:	bc08      	pop	{r3}
 8003668:	469e      	mov	lr, r3
 800366a:	4770      	bx	lr

0800366c <_fini>:
 800366c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800366e:	bf00      	nop
 8003670:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003672:	bc08      	pop	{r3}
 8003674:	469e      	mov	lr, r3
 8003676:	4770      	bx	lr
